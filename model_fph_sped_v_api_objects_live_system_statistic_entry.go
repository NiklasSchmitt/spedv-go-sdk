/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsLiveSystemStatisticEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsLiveSystemStatisticEntry{}

// FPHSpedVAPIObjectsLiveSystemStatisticEntry struct for FPHSpedVAPIObjectsLiveSystemStatisticEntry
type FPHSpedVAPIObjectsLiveSystemStatisticEntry struct {
	Name NullableString `json:"name"`
	Value int32 `json:"value"`
}

type _FPHSpedVAPIObjectsLiveSystemStatisticEntry FPHSpedVAPIObjectsLiveSystemStatisticEntry

// NewFPHSpedVAPIObjectsLiveSystemStatisticEntry instantiates a new FPHSpedVAPIObjectsLiveSystemStatisticEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsLiveSystemStatisticEntry(name NullableString, value int32) *FPHSpedVAPIObjectsLiveSystemStatisticEntry {
	this := FPHSpedVAPIObjectsLiveSystemStatisticEntry{}
	this.Name = name
	this.Value = value
	return &this
}

// NewFPHSpedVAPIObjectsLiveSystemStatisticEntryWithDefaults instantiates a new FPHSpedVAPIObjectsLiveSystemStatisticEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsLiveSystemStatisticEntryWithDefaults() *FPHSpedVAPIObjectsLiveSystemStatisticEntry {
	this := FPHSpedVAPIObjectsLiveSystemStatisticEntry{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsLiveSystemStatisticEntry) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsLiveSystemStatisticEntry) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *FPHSpedVAPIObjectsLiveSystemStatisticEntry) SetName(v string) {
	o.Name.Set(&v)
}

// GetValue returns the Value field value
func (o *FPHSpedVAPIObjectsLiveSystemStatisticEntry) GetValue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsLiveSystemStatisticEntry) GetValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FPHSpedVAPIObjectsLiveSystemStatisticEntry) SetValue(v int32) {
	o.Value = v
}

func (o FPHSpedVAPIObjectsLiveSystemStatisticEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsLiveSystemStatisticEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name.Get()
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsLiveSystemStatisticEntry) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsLiveSystemStatisticEntry := _FPHSpedVAPIObjectsLiveSystemStatisticEntry{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsLiveSystemStatisticEntry)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsLiveSystemStatisticEntry(varFPHSpedVAPIObjectsLiveSystemStatisticEntry)

	return err
}

type NullableFPHSpedVAPIObjectsLiveSystemStatisticEntry struct {
	value *FPHSpedVAPIObjectsLiveSystemStatisticEntry
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsLiveSystemStatisticEntry) Get() *FPHSpedVAPIObjectsLiveSystemStatisticEntry {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsLiveSystemStatisticEntry) Set(val *FPHSpedVAPIObjectsLiveSystemStatisticEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsLiveSystemStatisticEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsLiveSystemStatisticEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsLiveSystemStatisticEntry(val *FPHSpedVAPIObjectsLiveSystemStatisticEntry) *NullableFPHSpedVAPIObjectsLiveSystemStatisticEntry {
	return &NullableFPHSpedVAPIObjectsLiveSystemStatisticEntry{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsLiveSystemStatisticEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsLiveSystemStatisticEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


