/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsUsersUserChangeLogEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsUsersUserChangeLogEntry{}

// FPHSpedVAPIObjectsUsersUserChangeLogEntry struct for FPHSpedVAPIObjectsUsersUserChangeLogEntry
type FPHSpedVAPIObjectsUsersUserChangeLogEntry struct {
	Id int32 `json:"id"`
	User NullableFPHSpedVAPIObjectsUsersUser `json:"user"`
	Timestamp time.Time `json:"timestamp"`
	//   0 = ChangedName  1 = JoinedSpedition  2 = DismissedBySpedition  3 = Quitted  4 = ChangedProfileData  5 = FoundedSpedition  -1 = NotSet
	Type FPHSpedVAPIEnumsUserChangeEntryType `json:"type"`
	Comment NullableString `json:"comment"`
}

type _FPHSpedVAPIObjectsUsersUserChangeLogEntry FPHSpedVAPIObjectsUsersUserChangeLogEntry

// NewFPHSpedVAPIObjectsUsersUserChangeLogEntry instantiates a new FPHSpedVAPIObjectsUsersUserChangeLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsUsersUserChangeLogEntry(id int32, user NullableFPHSpedVAPIObjectsUsersUser, timestamp time.Time, type_ FPHSpedVAPIEnumsUserChangeEntryType, comment NullableString) *FPHSpedVAPIObjectsUsersUserChangeLogEntry {
	this := FPHSpedVAPIObjectsUsersUserChangeLogEntry{}
	this.Id = id
	this.User = user
	this.Timestamp = timestamp
	this.Type = type_
	this.Comment = comment
	return &this
}

// NewFPHSpedVAPIObjectsUsersUserChangeLogEntryWithDefaults instantiates a new FPHSpedVAPIObjectsUsersUserChangeLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsUsersUserChangeLogEntryWithDefaults() *FPHSpedVAPIObjectsUsersUserChangeLogEntry {
	this := FPHSpedVAPIObjectsUsersUserChangeLogEntry{}
	return &this
}

// GetId returns the Id field value
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) SetId(v int32) {
	o.Id = v
}

// GetUser returns the User field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsUsersUser will be returned
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetUser() FPHSpedVAPIObjectsUsersUser {
	if o == nil || o.User.Get() == nil {
		var ret FPHSpedVAPIObjectsUsersUser
		return ret
	}

	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetUserOk() (*FPHSpedVAPIObjectsUsersUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// SetUser sets field value
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) SetUser(v FPHSpedVAPIObjectsUsersUser) {
	o.User.Set(&v)
}

// GetTimestamp returns the Timestamp field value
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetType returns the Type field value
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetType() FPHSpedVAPIEnumsUserChangeEntryType {
	if o == nil {
		var ret FPHSpedVAPIEnumsUserChangeEntryType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetTypeOk() (*FPHSpedVAPIEnumsUserChangeEntryType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) SetType(v FPHSpedVAPIEnumsUserChangeEntryType) {
	o.Type = v
}

// GetComment returns the Comment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetComment() string {
	if o == nil || o.Comment.Get() == nil {
		var ret string
		return ret
	}

	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// SetComment sets field value
func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) SetComment(v string) {
	o.Comment.Set(&v)
}

func (o FPHSpedVAPIObjectsUsersUserChangeLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsUsersUserChangeLogEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["user"] = o.User.Get()
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["type"] = o.Type
	toSerialize["comment"] = o.Comment.Get()
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsUsersUserChangeLogEntry) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"user",
		"timestamp",
		"type",
		"comment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsUsersUserChangeLogEntry := _FPHSpedVAPIObjectsUsersUserChangeLogEntry{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsUsersUserChangeLogEntry)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsUsersUserChangeLogEntry(varFPHSpedVAPIObjectsUsersUserChangeLogEntry)

	return err
}

type NullableFPHSpedVAPIObjectsUsersUserChangeLogEntry struct {
	value *FPHSpedVAPIObjectsUsersUserChangeLogEntry
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsUsersUserChangeLogEntry) Get() *FPHSpedVAPIObjectsUsersUserChangeLogEntry {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsUsersUserChangeLogEntry) Set(val *FPHSpedVAPIObjectsUsersUserChangeLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsUsersUserChangeLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsUsersUserChangeLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsUsersUserChangeLogEntry(val *FPHSpedVAPIObjectsUsersUserChangeLogEntry) *NullableFPHSpedVAPIObjectsUsersUserChangeLogEntry {
	return &NullableFPHSpedVAPIObjectsUsersUserChangeLogEntry{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsUsersUserChangeLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsUsersUserChangeLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


