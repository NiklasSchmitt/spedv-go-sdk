/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// FPHSpedVAPIEnumsSpeditionChangeEntryType   0 = TaskDeducted  1 = TaskRejected  2 = RankChanged  3 = RankDeleted  4 = UserRankChanged  5 = UserDismissed  6 = SpeditionSettingChanged  7 = ApplicationTextChanged  8 = ApplicationAcknowledged  9 = ApplicationRejected  10 = BranchBought  11 = BranchExpandedTruckParkplace  12 = BranchShrinkedTruckParkplace  13 = BranchDeleted  14 = TruckBought  15 = TruckSold  16 = TruckLicensePlateChanged  17 = BoniAdded  18 = BoniDeleted  19 = RankAddedPermission  20 = RankDeletedPermission  21 = BranchExpandedTrailerParkplace  22 = BranchShrinkedTrailerParkplace  23 = BranchExpandedMaintenancePlace  24 = BranchShrinkedMaintenancePlace  25 = TruckTransfered  26 = TruckMaintenancePlanned  27 = TruckMaintenanceAborted  -1 = NotSet
type FPHSpedVAPIEnumsSpeditionChangeEntryType int32

// List of FPH.SpedV.API.Enums.SpeditionChangeEntryType
const (
	_0 FPHSpedVAPIEnumsSpeditionChangeEntryType = 0
	_1 FPHSpedVAPIEnumsSpeditionChangeEntryType = 1
	_2 FPHSpedVAPIEnumsSpeditionChangeEntryType = 2
	_3 FPHSpedVAPIEnumsSpeditionChangeEntryType = 3
	_4 FPHSpedVAPIEnumsSpeditionChangeEntryType = 4
	_5 FPHSpedVAPIEnumsSpeditionChangeEntryType = 5
	_6 FPHSpedVAPIEnumsSpeditionChangeEntryType = 6
	_7 FPHSpedVAPIEnumsSpeditionChangeEntryType = 7
	_8 FPHSpedVAPIEnumsSpeditionChangeEntryType = 8
	_9 FPHSpedVAPIEnumsSpeditionChangeEntryType = 9
	_10 FPHSpedVAPIEnumsSpeditionChangeEntryType = 10
	_11 FPHSpedVAPIEnumsSpeditionChangeEntryType = 11
	_12 FPHSpedVAPIEnumsSpeditionChangeEntryType = 12
	_13 FPHSpedVAPIEnumsSpeditionChangeEntryType = 13
	_14 FPHSpedVAPIEnumsSpeditionChangeEntryType = 14
	_15 FPHSpedVAPIEnumsSpeditionChangeEntryType = 15
	_16 FPHSpedVAPIEnumsSpeditionChangeEntryType = 16
	_17 FPHSpedVAPIEnumsSpeditionChangeEntryType = 17
	_18 FPHSpedVAPIEnumsSpeditionChangeEntryType = 18
	_19 FPHSpedVAPIEnumsSpeditionChangeEntryType = 19
	_20 FPHSpedVAPIEnumsSpeditionChangeEntryType = 20
	_21 FPHSpedVAPIEnumsSpeditionChangeEntryType = 21
	_22 FPHSpedVAPIEnumsSpeditionChangeEntryType = 22
	_23 FPHSpedVAPIEnumsSpeditionChangeEntryType = 23
	_24 FPHSpedVAPIEnumsSpeditionChangeEntryType = 24
	_25 FPHSpedVAPIEnumsSpeditionChangeEntryType = 25
	_26 FPHSpedVAPIEnumsSpeditionChangeEntryType = 26
	_27 FPHSpedVAPIEnumsSpeditionChangeEntryType = 27
	_MINUS_1 FPHSpedVAPIEnumsSpeditionChangeEntryType = -1
)

// All allowed values of FPHSpedVAPIEnumsSpeditionChangeEntryType enum
var AllowedFPHSpedVAPIEnumsSpeditionChangeEntryTypeEnumValues = []FPHSpedVAPIEnumsSpeditionChangeEntryType{
	0,
	1,
	2,
	3,
	4,
	5,
	6,
	7,
	8,
	9,
	10,
	11,
	12,
	13,
	14,
	15,
	16,
	17,
	18,
	19,
	20,
	21,
	22,
	23,
	24,
	25,
	26,
	27,
	-1,
}

func (v *FPHSpedVAPIEnumsSpeditionChangeEntryType) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FPHSpedVAPIEnumsSpeditionChangeEntryType(value)
	for _, existing := range AllowedFPHSpedVAPIEnumsSpeditionChangeEntryTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FPHSpedVAPIEnumsSpeditionChangeEntryType", value)
}

// NewFPHSpedVAPIEnumsSpeditionChangeEntryTypeFromValue returns a pointer to a valid FPHSpedVAPIEnumsSpeditionChangeEntryType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFPHSpedVAPIEnumsSpeditionChangeEntryTypeFromValue(v int32) (*FPHSpedVAPIEnumsSpeditionChangeEntryType, error) {
	ev := FPHSpedVAPIEnumsSpeditionChangeEntryType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FPHSpedVAPIEnumsSpeditionChangeEntryType: valid values are %v", v, AllowedFPHSpedVAPIEnumsSpeditionChangeEntryTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FPHSpedVAPIEnumsSpeditionChangeEntryType) IsValid() bool {
	for _, existing := range AllowedFPHSpedVAPIEnumsSpeditionChangeEntryTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to FPH.SpedV.API.Enums.SpeditionChangeEntryType value
func (v FPHSpedVAPIEnumsSpeditionChangeEntryType) Ptr() *FPHSpedVAPIEnumsSpeditionChangeEntryType {
	return &v
}

type NullableFPHSpedVAPIEnumsSpeditionChangeEntryType struct {
	value *FPHSpedVAPIEnumsSpeditionChangeEntryType
	isSet bool
}

func (v NullableFPHSpedVAPIEnumsSpeditionChangeEntryType) Get() *FPHSpedVAPIEnumsSpeditionChangeEntryType {
	return v.value
}

func (v *NullableFPHSpedVAPIEnumsSpeditionChangeEntryType) Set(val *FPHSpedVAPIEnumsSpeditionChangeEntryType) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIEnumsSpeditionChangeEntryType) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIEnumsSpeditionChangeEntryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIEnumsSpeditionChangeEntryType(val *FPHSpedVAPIEnumsSpeditionChangeEntryType) *NullableFPHSpedVAPIEnumsSpeditionChangeEntryType {
	return &NullableFPHSpedVAPIEnumsSpeditionChangeEntryType{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIEnumsSpeditionChangeEntryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIEnumsSpeditionChangeEntryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

