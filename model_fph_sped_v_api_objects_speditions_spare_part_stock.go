/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FPHSpedVAPIObjectsSpeditionsSparePartStock type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsSpeditionsSparePartStock{}

// FPHSpedVAPIObjectsSpeditionsSparePartStock struct for FPHSpedVAPIObjectsSpeditionsSparePartStock
type FPHSpedVAPIObjectsSpeditionsSparePartStock struct {
	SparePart NullableFPHSpedVAPIObjectsSpeditionsSparePart `json:"sparePart,omitempty"`
	Amount *int32 `json:"amount,omitempty"`
}

// NewFPHSpedVAPIObjectsSpeditionsSparePartStock instantiates a new FPHSpedVAPIObjectsSpeditionsSparePartStock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsSpeditionsSparePartStock() *FPHSpedVAPIObjectsSpeditionsSparePartStock {
	this := FPHSpedVAPIObjectsSpeditionsSparePartStock{}
	return &this
}

// NewFPHSpedVAPIObjectsSpeditionsSparePartStockWithDefaults instantiates a new FPHSpedVAPIObjectsSpeditionsSparePartStock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsSpeditionsSparePartStockWithDefaults() *FPHSpedVAPIObjectsSpeditionsSparePartStock {
	this := FPHSpedVAPIObjectsSpeditionsSparePartStock{}
	return &this
}

// GetSparePart returns the SparePart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) GetSparePart() FPHSpedVAPIObjectsSpeditionsSparePart {
	if o == nil || IsNil(o.SparePart.Get()) {
		var ret FPHSpedVAPIObjectsSpeditionsSparePart
		return ret
	}
	return *o.SparePart.Get()
}

// GetSparePartOk returns a tuple with the SparePart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) GetSparePartOk() (*FPHSpedVAPIObjectsSpeditionsSparePart, bool) {
	if o == nil {
		return nil, false
	}
	return o.SparePart.Get(), o.SparePart.IsSet()
}

// HasSparePart returns a boolean if a field has been set.
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) HasSparePart() bool {
	if o != nil && o.SparePart.IsSet() {
		return true
	}

	return false
}

// SetSparePart gets a reference to the given NullableFPHSpedVAPIObjectsSpeditionsSparePart and assigns it to the SparePart field.
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) SetSparePart(v FPHSpedVAPIObjectsSpeditionsSparePart) {
	o.SparePart.Set(&v)
}
// SetSparePartNil sets the value for SparePart to be an explicit nil
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) SetSparePartNil() {
	o.SparePart.Set(nil)
}

// UnsetSparePart ensures that no value is present for SparePart, not even an explicit nil
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) UnsetSparePart() {
	o.SparePart.Unset()
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) GetAmount() int32 {
	if o == nil || IsNil(o.Amount) {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) GetAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *FPHSpedVAPIObjectsSpeditionsSparePartStock) SetAmount(v int32) {
	o.Amount = &v
}

func (o FPHSpedVAPIObjectsSpeditionsSparePartStock) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsSpeditionsSparePartStock) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SparePart.IsSet() {
		toSerialize["sparePart"] = o.SparePart.Get()
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableFPHSpedVAPIObjectsSpeditionsSparePartStock struct {
	value *FPHSpedVAPIObjectsSpeditionsSparePartStock
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsSpeditionsSparePartStock) Get() *FPHSpedVAPIObjectsSpeditionsSparePartStock {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsSparePartStock) Set(val *FPHSpedVAPIObjectsSpeditionsSparePartStock) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsSpeditionsSparePartStock) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsSparePartStock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsSpeditionsSparePartStock(val *FPHSpedVAPIObjectsSpeditionsSparePartStock) *NullableFPHSpedVAPIObjectsSpeditionsSparePartStock {
	return &NullableFPHSpedVAPIObjectsSpeditionsSparePartStock{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsSpeditionsSparePartStock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsSparePartStock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


