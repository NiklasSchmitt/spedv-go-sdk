/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsOMSITrip type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsOMSITrip{}

// FPHSpedVAPIObjectsOMSITrip struct for FPHSpedVAPIObjectsOMSITrip
type FPHSpedVAPIObjectsOMSITrip struct {
	Id int32 `json:"id"`
	LineStr NullableString `json:"lineStr"`
	Dest NullableFPHSpedVAPIObjectsOMSIDestination `json:"dest"`
	Line int32 `json:"line"`
	Circ int32 `json:"circ"`
}

type _FPHSpedVAPIObjectsOMSITrip FPHSpedVAPIObjectsOMSITrip

// NewFPHSpedVAPIObjectsOMSITrip instantiates a new FPHSpedVAPIObjectsOMSITrip object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsOMSITrip(id int32, lineStr NullableString, dest NullableFPHSpedVAPIObjectsOMSIDestination, line int32, circ int32) *FPHSpedVAPIObjectsOMSITrip {
	this := FPHSpedVAPIObjectsOMSITrip{}
	this.Id = id
	this.LineStr = lineStr
	this.Dest = dest
	this.Line = line
	this.Circ = circ
	return &this
}

// NewFPHSpedVAPIObjectsOMSITripWithDefaults instantiates a new FPHSpedVAPIObjectsOMSITrip object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsOMSITripWithDefaults() *FPHSpedVAPIObjectsOMSITrip {
	this := FPHSpedVAPIObjectsOMSITrip{}
	return &this
}

// GetId returns the Id field value
func (o *FPHSpedVAPIObjectsOMSITrip) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsOMSITrip) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FPHSpedVAPIObjectsOMSITrip) SetId(v int32) {
	o.Id = v
}

// GetLineStr returns the LineStr field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsOMSITrip) GetLineStr() string {
	if o == nil || o.LineStr.Get() == nil {
		var ret string
		return ret
	}

	return *o.LineStr.Get()
}

// GetLineStrOk returns a tuple with the LineStr field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsOMSITrip) GetLineStrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineStr.Get(), o.LineStr.IsSet()
}

// SetLineStr sets field value
func (o *FPHSpedVAPIObjectsOMSITrip) SetLineStr(v string) {
	o.LineStr.Set(&v)
}

// GetDest returns the Dest field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsOMSIDestination will be returned
func (o *FPHSpedVAPIObjectsOMSITrip) GetDest() FPHSpedVAPIObjectsOMSIDestination {
	if o == nil || o.Dest.Get() == nil {
		var ret FPHSpedVAPIObjectsOMSIDestination
		return ret
	}

	return *o.Dest.Get()
}

// GetDestOk returns a tuple with the Dest field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsOMSITrip) GetDestOk() (*FPHSpedVAPIObjectsOMSIDestination, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dest.Get(), o.Dest.IsSet()
}

// SetDest sets field value
func (o *FPHSpedVAPIObjectsOMSITrip) SetDest(v FPHSpedVAPIObjectsOMSIDestination) {
	o.Dest.Set(&v)
}

// GetLine returns the Line field value
func (o *FPHSpedVAPIObjectsOMSITrip) GetLine() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Line
}

// GetLineOk returns a tuple with the Line field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsOMSITrip) GetLineOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Line, true
}

// SetLine sets field value
func (o *FPHSpedVAPIObjectsOMSITrip) SetLine(v int32) {
	o.Line = v
}

// GetCirc returns the Circ field value
func (o *FPHSpedVAPIObjectsOMSITrip) GetCirc() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Circ
}

// GetCircOk returns a tuple with the Circ field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsOMSITrip) GetCircOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Circ, true
}

// SetCirc sets field value
func (o *FPHSpedVAPIObjectsOMSITrip) SetCirc(v int32) {
	o.Circ = v
}

func (o FPHSpedVAPIObjectsOMSITrip) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsOMSITrip) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["lineStr"] = o.LineStr.Get()
	toSerialize["dest"] = o.Dest.Get()
	toSerialize["line"] = o.Line
	toSerialize["circ"] = o.Circ
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsOMSITrip) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"lineStr",
		"dest",
		"line",
		"circ",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsOMSITrip := _FPHSpedVAPIObjectsOMSITrip{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsOMSITrip)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsOMSITrip(varFPHSpedVAPIObjectsOMSITrip)

	return err
}

type NullableFPHSpedVAPIObjectsOMSITrip struct {
	value *FPHSpedVAPIObjectsOMSITrip
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsOMSITrip) Get() *FPHSpedVAPIObjectsOMSITrip {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsOMSITrip) Set(val *FPHSpedVAPIObjectsOMSITrip) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsOMSITrip) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsOMSITrip) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsOMSITrip(val *FPHSpedVAPIObjectsOMSITrip) *NullableFPHSpedVAPIObjectsOMSITrip {
	return &NullableFPHSpedVAPIObjectsOMSITrip{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsOMSITrip) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsOMSITrip) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


