/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsSpeditionsTaskPosition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsSpeditionsTaskPosition{}

// FPHSpedVAPIObjectsSpeditionsTaskPosition struct for FPHSpedVAPIObjectsSpeditionsTaskPosition
type FPHSpedVAPIObjectsSpeditionsTaskPosition struct {
	Id int32 `json:"id"`
	Timestamp time.Time `json:"timestamp"`
	//   0 = StateChange  1 = RefusedTruckInfo  2 = Refueled  3 = FerryUsed  -1 = NotSet
	ChangeType FPHSpedVAPITaskPositionType `json:"changeType"`
	ChangedBy NullableFPHSpedVAPIObjectsUsersUser `json:"changedBy"`
	RefusedTruck NullableFPHSpedVAPIObjectsSpeditionsTruck `json:"refusedTruck"`
	//   0 = InDrive  1 = Done  2 = Settled  3 = Fail  4 = AdminCheck  5 = Paused  6 = Cancelled  7 = Invalid  -1 = NotAvaliable
	StateChangedFrom NullableFPHSpedVAPIEnumsETSTaskState `json:"stateChangedFrom"`
	//   0 = InDrive  1 = Done  2 = Settled  3 = Fail  4 = AdminCheck  5 = Paused  6 = Cancelled  7 = Invalid  -1 = NotAvaliable
	StateChangeTo NullableFPHSpedVAPIEnumsETSTaskState `json:"stateChangeTo"`
	RefueledLiter NullableFloat64 `json:"refueledLiter"`
	RefueledSum NullableFloat64 `json:"refueledSum"`
	UsedGasStation NullableFPHSpedVAPIObjectsMapsGasStation `json:"usedGasStation"`
	UsedFerry NullableFPHSpedVAPIObjectsMapsFerry `json:"usedFerry"`
	Coordinates NullableFPHSpedVAPIObjectsTelemetryETSVektor `json:"coordinates"`
	Comment NullableString `json:"comment"`
}

type _FPHSpedVAPIObjectsSpeditionsTaskPosition FPHSpedVAPIObjectsSpeditionsTaskPosition

// NewFPHSpedVAPIObjectsSpeditionsTaskPosition instantiates a new FPHSpedVAPIObjectsSpeditionsTaskPosition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsSpeditionsTaskPosition(id int32, timestamp time.Time, changeType FPHSpedVAPITaskPositionType, changedBy NullableFPHSpedVAPIObjectsUsersUser, refusedTruck NullableFPHSpedVAPIObjectsSpeditionsTruck, stateChangedFrom NullableFPHSpedVAPIEnumsETSTaskState, stateChangeTo NullableFPHSpedVAPIEnumsETSTaskState, refueledLiter NullableFloat64, refueledSum NullableFloat64, usedGasStation NullableFPHSpedVAPIObjectsMapsGasStation, usedFerry NullableFPHSpedVAPIObjectsMapsFerry, coordinates NullableFPHSpedVAPIObjectsTelemetryETSVektor, comment NullableString) *FPHSpedVAPIObjectsSpeditionsTaskPosition {
	this := FPHSpedVAPIObjectsSpeditionsTaskPosition{}
	this.Id = id
	this.Timestamp = timestamp
	this.ChangeType = changeType
	this.ChangedBy = changedBy
	this.RefusedTruck = refusedTruck
	this.StateChangedFrom = stateChangedFrom
	this.StateChangeTo = stateChangeTo
	this.RefueledLiter = refueledLiter
	this.RefueledSum = refueledSum
	this.UsedGasStation = usedGasStation
	this.UsedFerry = usedFerry
	this.Coordinates = coordinates
	this.Comment = comment
	return &this
}

// NewFPHSpedVAPIObjectsSpeditionsTaskPositionWithDefaults instantiates a new FPHSpedVAPIObjectsSpeditionsTaskPosition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsSpeditionsTaskPositionWithDefaults() *FPHSpedVAPIObjectsSpeditionsTaskPosition {
	this := FPHSpedVAPIObjectsSpeditionsTaskPosition{}
	return &this
}

// GetId returns the Id field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetId(v int32) {
	o.Id = v
}

// GetTimestamp returns the Timestamp field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetChangeType returns the ChangeType field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetChangeType() FPHSpedVAPITaskPositionType {
	if o == nil {
		var ret FPHSpedVAPITaskPositionType
		return ret
	}

	return o.ChangeType
}

// GetChangeTypeOk returns a tuple with the ChangeType field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetChangeTypeOk() (*FPHSpedVAPITaskPositionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangeType, true
}

// SetChangeType sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetChangeType(v FPHSpedVAPITaskPositionType) {
	o.ChangeType = v
}

// GetChangedBy returns the ChangedBy field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsUsersUser will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetChangedBy() FPHSpedVAPIObjectsUsersUser {
	if o == nil || o.ChangedBy.Get() == nil {
		var ret FPHSpedVAPIObjectsUsersUser
		return ret
	}

	return *o.ChangedBy.Get()
}

// GetChangedByOk returns a tuple with the ChangedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetChangedByOk() (*FPHSpedVAPIObjectsUsersUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangedBy.Get(), o.ChangedBy.IsSet()
}

// SetChangedBy sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetChangedBy(v FPHSpedVAPIObjectsUsersUser) {
	o.ChangedBy.Set(&v)
}

// GetRefusedTruck returns the RefusedTruck field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsSpeditionsTruck will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetRefusedTruck() FPHSpedVAPIObjectsSpeditionsTruck {
	if o == nil || o.RefusedTruck.Get() == nil {
		var ret FPHSpedVAPIObjectsSpeditionsTruck
		return ret
	}

	return *o.RefusedTruck.Get()
}

// GetRefusedTruckOk returns a tuple with the RefusedTruck field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetRefusedTruckOk() (*FPHSpedVAPIObjectsSpeditionsTruck, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefusedTruck.Get(), o.RefusedTruck.IsSet()
}

// SetRefusedTruck sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetRefusedTruck(v FPHSpedVAPIObjectsSpeditionsTruck) {
	o.RefusedTruck.Set(&v)
}

// GetStateChangedFrom returns the StateChangedFrom field value
// If the value is explicit nil, the zero value for FPHSpedVAPIEnumsETSTaskState will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetStateChangedFrom() FPHSpedVAPIEnumsETSTaskState {
	if o == nil || o.StateChangedFrom.Get() == nil {
		var ret FPHSpedVAPIEnumsETSTaskState
		return ret
	}

	return *o.StateChangedFrom.Get()
}

// GetStateChangedFromOk returns a tuple with the StateChangedFrom field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetStateChangedFromOk() (*FPHSpedVAPIEnumsETSTaskState, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateChangedFrom.Get(), o.StateChangedFrom.IsSet()
}

// SetStateChangedFrom sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetStateChangedFrom(v FPHSpedVAPIEnumsETSTaskState) {
	o.StateChangedFrom.Set(&v)
}

// GetStateChangeTo returns the StateChangeTo field value
// If the value is explicit nil, the zero value for FPHSpedVAPIEnumsETSTaskState will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetStateChangeTo() FPHSpedVAPIEnumsETSTaskState {
	if o == nil || o.StateChangeTo.Get() == nil {
		var ret FPHSpedVAPIEnumsETSTaskState
		return ret
	}

	return *o.StateChangeTo.Get()
}

// GetStateChangeToOk returns a tuple with the StateChangeTo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetStateChangeToOk() (*FPHSpedVAPIEnumsETSTaskState, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateChangeTo.Get(), o.StateChangeTo.IsSet()
}

// SetStateChangeTo sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetStateChangeTo(v FPHSpedVAPIEnumsETSTaskState) {
	o.StateChangeTo.Set(&v)
}

// GetRefueledLiter returns the RefueledLiter field value
// If the value is explicit nil, the zero value for float64 will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetRefueledLiter() float64 {
	if o == nil || o.RefueledLiter.Get() == nil {
		var ret float64
		return ret
	}

	return *o.RefueledLiter.Get()
}

// GetRefueledLiterOk returns a tuple with the RefueledLiter field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetRefueledLiterOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefueledLiter.Get(), o.RefueledLiter.IsSet()
}

// SetRefueledLiter sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetRefueledLiter(v float64) {
	o.RefueledLiter.Set(&v)
}

// GetRefueledSum returns the RefueledSum field value
// If the value is explicit nil, the zero value for float64 will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetRefueledSum() float64 {
	if o == nil || o.RefueledSum.Get() == nil {
		var ret float64
		return ret
	}

	return *o.RefueledSum.Get()
}

// GetRefueledSumOk returns a tuple with the RefueledSum field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetRefueledSumOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefueledSum.Get(), o.RefueledSum.IsSet()
}

// SetRefueledSum sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetRefueledSum(v float64) {
	o.RefueledSum.Set(&v)
}

// GetUsedGasStation returns the UsedGasStation field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsMapsGasStation will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetUsedGasStation() FPHSpedVAPIObjectsMapsGasStation {
	if o == nil || o.UsedGasStation.Get() == nil {
		var ret FPHSpedVAPIObjectsMapsGasStation
		return ret
	}

	return *o.UsedGasStation.Get()
}

// GetUsedGasStationOk returns a tuple with the UsedGasStation field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetUsedGasStationOk() (*FPHSpedVAPIObjectsMapsGasStation, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsedGasStation.Get(), o.UsedGasStation.IsSet()
}

// SetUsedGasStation sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetUsedGasStation(v FPHSpedVAPIObjectsMapsGasStation) {
	o.UsedGasStation.Set(&v)
}

// GetUsedFerry returns the UsedFerry field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsMapsFerry will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetUsedFerry() FPHSpedVAPIObjectsMapsFerry {
	if o == nil || o.UsedFerry.Get() == nil {
		var ret FPHSpedVAPIObjectsMapsFerry
		return ret
	}

	return *o.UsedFerry.Get()
}

// GetUsedFerryOk returns a tuple with the UsedFerry field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetUsedFerryOk() (*FPHSpedVAPIObjectsMapsFerry, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsedFerry.Get(), o.UsedFerry.IsSet()
}

// SetUsedFerry sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetUsedFerry(v FPHSpedVAPIObjectsMapsFerry) {
	o.UsedFerry.Set(&v)
}

// GetCoordinates returns the Coordinates field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsTelemetryETSVektor will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetCoordinates() FPHSpedVAPIObjectsTelemetryETSVektor {
	if o == nil || o.Coordinates.Get() == nil {
		var ret FPHSpedVAPIObjectsTelemetryETSVektor
		return ret
	}

	return *o.Coordinates.Get()
}

// GetCoordinatesOk returns a tuple with the Coordinates field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetCoordinatesOk() (*FPHSpedVAPIObjectsTelemetryETSVektor, bool) {
	if o == nil {
		return nil, false
	}
	return o.Coordinates.Get(), o.Coordinates.IsSet()
}

// SetCoordinates sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetCoordinates(v FPHSpedVAPIObjectsTelemetryETSVektor) {
	o.Coordinates.Set(&v)
}

// GetComment returns the Comment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetComment() string {
	if o == nil || o.Comment.Get() == nil {
		var ret string
		return ret
	}

	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// SetComment sets field value
func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) SetComment(v string) {
	o.Comment.Set(&v)
}

func (o FPHSpedVAPIObjectsSpeditionsTaskPosition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsSpeditionsTaskPosition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["changeType"] = o.ChangeType
	toSerialize["changedBy"] = o.ChangedBy.Get()
	toSerialize["refusedTruck"] = o.RefusedTruck.Get()
	toSerialize["stateChangedFrom"] = o.StateChangedFrom.Get()
	toSerialize["stateChangeTo"] = o.StateChangeTo.Get()
	toSerialize["refueledLiter"] = o.RefueledLiter.Get()
	toSerialize["refueledSum"] = o.RefueledSum.Get()
	toSerialize["usedGasStation"] = o.UsedGasStation.Get()
	toSerialize["usedFerry"] = o.UsedFerry.Get()
	toSerialize["coordinates"] = o.Coordinates.Get()
	toSerialize["comment"] = o.Comment.Get()
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsSpeditionsTaskPosition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"timestamp",
		"changeType",
		"changedBy",
		"refusedTruck",
		"stateChangedFrom",
		"stateChangeTo",
		"refueledLiter",
		"refueledSum",
		"usedGasStation",
		"usedFerry",
		"coordinates",
		"comment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsSpeditionsTaskPosition := _FPHSpedVAPIObjectsSpeditionsTaskPosition{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsSpeditionsTaskPosition)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsSpeditionsTaskPosition(varFPHSpedVAPIObjectsSpeditionsTaskPosition)

	return err
}

type NullableFPHSpedVAPIObjectsSpeditionsTaskPosition struct {
	value *FPHSpedVAPIObjectsSpeditionsTaskPosition
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsSpeditionsTaskPosition) Get() *FPHSpedVAPIObjectsSpeditionsTaskPosition {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsTaskPosition) Set(val *FPHSpedVAPIObjectsSpeditionsTaskPosition) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsSpeditionsTaskPosition) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsTaskPosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsSpeditionsTaskPosition(val *FPHSpedVAPIObjectsSpeditionsTaskPosition) *NullableFPHSpedVAPIObjectsSpeditionsTaskPosition {
	return &NullableFPHSpedVAPIObjectsSpeditionsTaskPosition{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsSpeditionsTaskPosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsTaskPosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


