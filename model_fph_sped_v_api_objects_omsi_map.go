/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsOMSIMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsOMSIMap{}

// FPHSpedVAPIObjectsOMSIMap struct for FPHSpedVAPIObjectsOMSIMap
type FPHSpedVAPIObjectsOMSIMap struct {
	Id int32 `json:"id"`
	Name NullableString `json:"name"`
	StartDate time.Time `json:"startDate"`
	EndDate time.Time `json:"endDate"`
	TrafficAuthority NullableString `json:"trafficAuthority"`
	IsActive bool `json:"isActive"`
	Comment NullableString `json:"comment"`
}

type _FPHSpedVAPIObjectsOMSIMap FPHSpedVAPIObjectsOMSIMap

// NewFPHSpedVAPIObjectsOMSIMap instantiates a new FPHSpedVAPIObjectsOMSIMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsOMSIMap(id int32, name NullableString, startDate time.Time, endDate time.Time, trafficAuthority NullableString, isActive bool, comment NullableString) *FPHSpedVAPIObjectsOMSIMap {
	this := FPHSpedVAPIObjectsOMSIMap{}
	this.Id = id
	this.Name = name
	this.StartDate = startDate
	this.EndDate = endDate
	this.TrafficAuthority = trafficAuthority
	this.IsActive = isActive
	this.Comment = comment
	return &this
}

// NewFPHSpedVAPIObjectsOMSIMapWithDefaults instantiates a new FPHSpedVAPIObjectsOMSIMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsOMSIMapWithDefaults() *FPHSpedVAPIObjectsOMSIMap {
	this := FPHSpedVAPIObjectsOMSIMap{}
	return &this
}

// GetId returns the Id field value
func (o *FPHSpedVAPIObjectsOMSIMap) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsOMSIMap) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FPHSpedVAPIObjectsOMSIMap) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsOMSIMap) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsOMSIMap) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *FPHSpedVAPIObjectsOMSIMap) SetName(v string) {
	o.Name.Set(&v)
}

// GetStartDate returns the StartDate field value
func (o *FPHSpedVAPIObjectsOMSIMap) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsOMSIMap) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *FPHSpedVAPIObjectsOMSIMap) SetStartDate(v time.Time) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *FPHSpedVAPIObjectsOMSIMap) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsOMSIMap) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *FPHSpedVAPIObjectsOMSIMap) SetEndDate(v time.Time) {
	o.EndDate = v
}

// GetTrafficAuthority returns the TrafficAuthority field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsOMSIMap) GetTrafficAuthority() string {
	if o == nil || o.TrafficAuthority.Get() == nil {
		var ret string
		return ret
	}

	return *o.TrafficAuthority.Get()
}

// GetTrafficAuthorityOk returns a tuple with the TrafficAuthority field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsOMSIMap) GetTrafficAuthorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrafficAuthority.Get(), o.TrafficAuthority.IsSet()
}

// SetTrafficAuthority sets field value
func (o *FPHSpedVAPIObjectsOMSIMap) SetTrafficAuthority(v string) {
	o.TrafficAuthority.Set(&v)
}

// GetIsActive returns the IsActive field value
func (o *FPHSpedVAPIObjectsOMSIMap) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsOMSIMap) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *FPHSpedVAPIObjectsOMSIMap) SetIsActive(v bool) {
	o.IsActive = v
}

// GetComment returns the Comment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsOMSIMap) GetComment() string {
	if o == nil || o.Comment.Get() == nil {
		var ret string
		return ret
	}

	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsOMSIMap) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// SetComment sets field value
func (o *FPHSpedVAPIObjectsOMSIMap) SetComment(v string) {
	o.Comment.Set(&v)
}

func (o FPHSpedVAPIObjectsOMSIMap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsOMSIMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name.Get()
	toSerialize["startDate"] = o.StartDate
	toSerialize["endDate"] = o.EndDate
	toSerialize["trafficAuthority"] = o.TrafficAuthority.Get()
	toSerialize["isActive"] = o.IsActive
	toSerialize["comment"] = o.Comment.Get()
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsOMSIMap) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"startDate",
		"endDate",
		"trafficAuthority",
		"isActive",
		"comment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsOMSIMap := _FPHSpedVAPIObjectsOMSIMap{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsOMSIMap)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsOMSIMap(varFPHSpedVAPIObjectsOMSIMap)

	return err
}

type NullableFPHSpedVAPIObjectsOMSIMap struct {
	value *FPHSpedVAPIObjectsOMSIMap
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsOMSIMap) Get() *FPHSpedVAPIObjectsOMSIMap {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsOMSIMap) Set(val *FPHSpedVAPIObjectsOMSIMap) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsOMSIMap) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsOMSIMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsOMSIMap(val *FPHSpedVAPIObjectsOMSIMap) *NullableFPHSpedVAPIObjectsOMSIMap {
	return &NullableFPHSpedVAPIObjectsOMSIMap{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsOMSIMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsOMSIMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


