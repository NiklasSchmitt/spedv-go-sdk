/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIServerCommunicationHelperRESTUserPosition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIServerCommunicationHelperRESTUserPosition{}

// FPHSpedVAPIServerCommunicationHelperRESTUserPosition struct for FPHSpedVAPIServerCommunicationHelperRESTUserPosition
type FPHSpedVAPIServerCommunicationHelperRESTUserPosition struct {
	User NullableString `json:"user"`
	X float64 `json:"x"`
	Z float64 `json:"z"`
	VelocityKMH float64 `json:"velocityKMH"`
	VelocityMPH float64 `json:"velocityMPH"`
}

type _FPHSpedVAPIServerCommunicationHelperRESTUserPosition FPHSpedVAPIServerCommunicationHelperRESTUserPosition

// NewFPHSpedVAPIServerCommunicationHelperRESTUserPosition instantiates a new FPHSpedVAPIServerCommunicationHelperRESTUserPosition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIServerCommunicationHelperRESTUserPosition(user NullableString, x float64, z float64, velocityKMH float64, velocityMPH float64) *FPHSpedVAPIServerCommunicationHelperRESTUserPosition {
	this := FPHSpedVAPIServerCommunicationHelperRESTUserPosition{}
	this.User = user
	this.X = x
	this.Z = z
	this.VelocityKMH = velocityKMH
	this.VelocityMPH = velocityMPH
	return &this
}

// NewFPHSpedVAPIServerCommunicationHelperRESTUserPositionWithDefaults instantiates a new FPHSpedVAPIServerCommunicationHelperRESTUserPosition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIServerCommunicationHelperRESTUserPositionWithDefaults() *FPHSpedVAPIServerCommunicationHelperRESTUserPosition {
	this := FPHSpedVAPIServerCommunicationHelperRESTUserPosition{}
	return &this
}

// GetUser returns the User field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetUser() string {
	if o == nil || o.User.Get() == nil {
		var ret string
		return ret
	}

	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// SetUser sets field value
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) SetUser(v string) {
	o.User.Set(&v)
}

// GetX returns the X field value
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetX() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.X
}

// GetXOk returns a tuple with the X field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetXOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.X, true
}

// SetX sets field value
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) SetX(v float64) {
	o.X = v
}

// GetZ returns the Z field value
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetZ() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Z
}

// GetZOk returns a tuple with the Z field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetZOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Z, true
}

// SetZ sets field value
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) SetZ(v float64) {
	o.Z = v
}

// GetVelocityKMH returns the VelocityKMH field value
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetVelocityKMH() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.VelocityKMH
}

// GetVelocityKMHOk returns a tuple with the VelocityKMH field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetVelocityKMHOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VelocityKMH, true
}

// SetVelocityKMH sets field value
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) SetVelocityKMH(v float64) {
	o.VelocityKMH = v
}

// GetVelocityMPH returns the VelocityMPH field value
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetVelocityMPH() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.VelocityMPH
}

// GetVelocityMPHOk returns a tuple with the VelocityMPH field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) GetVelocityMPHOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VelocityMPH, true
}

// SetVelocityMPH sets field value
func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) SetVelocityMPH(v float64) {
	o.VelocityMPH = v
}

func (o FPHSpedVAPIServerCommunicationHelperRESTUserPosition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIServerCommunicationHelperRESTUserPosition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User.Get()
	toSerialize["x"] = o.X
	toSerialize["z"] = o.Z
	toSerialize["velocityKMH"] = o.VelocityKMH
	toSerialize["velocityMPH"] = o.VelocityMPH
	return toSerialize, nil
}

func (o *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user",
		"x",
		"z",
		"velocityKMH",
		"velocityMPH",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIServerCommunicationHelperRESTUserPosition := _FPHSpedVAPIServerCommunicationHelperRESTUserPosition{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIServerCommunicationHelperRESTUserPosition)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIServerCommunicationHelperRESTUserPosition(varFPHSpedVAPIServerCommunicationHelperRESTUserPosition)

	return err
}

type NullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition struct {
	value *FPHSpedVAPIServerCommunicationHelperRESTUserPosition
	isSet bool
}

func (v NullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition) Get() *FPHSpedVAPIServerCommunicationHelperRESTUserPosition {
	return v.value
}

func (v *NullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition) Set(val *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition(val *FPHSpedVAPIServerCommunicationHelperRESTUserPosition) *NullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition {
	return &NullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIServerCommunicationHelperRESTUserPosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


