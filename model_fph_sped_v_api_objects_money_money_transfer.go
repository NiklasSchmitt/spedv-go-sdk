/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsMoneyMoneyTransfer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsMoneyMoneyTransfer{}

// FPHSpedVAPIObjectsMoneyMoneyTransfer struct for FPHSpedVAPIObjectsMoneyMoneyTransfer
type FPHSpedVAPIObjectsMoneyMoneyTransfer struct {
	Id int32 `json:"id"`
	SenderAccount NullableFPHSpedVAPIObjectsMoneyLiteBankAccount `json:"senderAccount"`
	Sender NullableString `json:"sender"`
	ReceiverAccount NullableFPHSpedVAPIObjectsMoneyLiteBankAccount `json:"receiverAccount"`
	Receiver NullableString `json:"receiver"`
	Cause NullableString `json:"cause"`
	CauseGroup NullableString `json:"causeGroup"`
	Value float64 `json:"value"`
	Money NullableString `json:"money"`
	ResponsibleUser NullableFPHSpedVAPIObjectsUsersUser `json:"responsibleUser"`
	Responsible NullableString `json:"responsible"`
	DateTime time.Time `json:"dateTime"`
	Time NullableString `json:"time"`
	IsNegative bool `json:"isNegative"`
}

type _FPHSpedVAPIObjectsMoneyMoneyTransfer FPHSpedVAPIObjectsMoneyMoneyTransfer

// NewFPHSpedVAPIObjectsMoneyMoneyTransfer instantiates a new FPHSpedVAPIObjectsMoneyMoneyTransfer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsMoneyMoneyTransfer(id int32, senderAccount NullableFPHSpedVAPIObjectsMoneyLiteBankAccount, sender NullableString, receiverAccount NullableFPHSpedVAPIObjectsMoneyLiteBankAccount, receiver NullableString, cause NullableString, causeGroup NullableString, value float64, money NullableString, responsibleUser NullableFPHSpedVAPIObjectsUsersUser, responsible NullableString, dateTime time.Time, time NullableString, isNegative bool) *FPHSpedVAPIObjectsMoneyMoneyTransfer {
	this := FPHSpedVAPIObjectsMoneyMoneyTransfer{}
	this.Id = id
	this.SenderAccount = senderAccount
	this.Sender = sender
	this.ReceiverAccount = receiverAccount
	this.Receiver = receiver
	this.Cause = cause
	this.CauseGroup = causeGroup
	this.Value = value
	this.Money = money
	this.ResponsibleUser = responsibleUser
	this.Responsible = responsible
	this.DateTime = dateTime
	this.Time = time
	this.IsNegative = isNegative
	return &this
}

// NewFPHSpedVAPIObjectsMoneyMoneyTransferWithDefaults instantiates a new FPHSpedVAPIObjectsMoneyMoneyTransfer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsMoneyMoneyTransferWithDefaults() *FPHSpedVAPIObjectsMoneyMoneyTransfer {
	this := FPHSpedVAPIObjectsMoneyMoneyTransfer{}
	return &this
}

// GetId returns the Id field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetId(v int32) {
	o.Id = v
}

// GetSenderAccount returns the SenderAccount field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsMoneyLiteBankAccount will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetSenderAccount() FPHSpedVAPIObjectsMoneyLiteBankAccount {
	if o == nil || o.SenderAccount.Get() == nil {
		var ret FPHSpedVAPIObjectsMoneyLiteBankAccount
		return ret
	}

	return *o.SenderAccount.Get()
}

// GetSenderAccountOk returns a tuple with the SenderAccount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetSenderAccountOk() (*FPHSpedVAPIObjectsMoneyLiteBankAccount, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderAccount.Get(), o.SenderAccount.IsSet()
}

// SetSenderAccount sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetSenderAccount(v FPHSpedVAPIObjectsMoneyLiteBankAccount) {
	o.SenderAccount.Set(&v)
}

// GetSender returns the Sender field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetSender() string {
	if o == nil || o.Sender.Get() == nil {
		var ret string
		return ret
	}

	return *o.Sender.Get()
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sender.Get(), o.Sender.IsSet()
}

// SetSender sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetSender(v string) {
	o.Sender.Set(&v)
}

// GetReceiverAccount returns the ReceiverAccount field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsMoneyLiteBankAccount will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetReceiverAccount() FPHSpedVAPIObjectsMoneyLiteBankAccount {
	if o == nil || o.ReceiverAccount.Get() == nil {
		var ret FPHSpedVAPIObjectsMoneyLiteBankAccount
		return ret
	}

	return *o.ReceiverAccount.Get()
}

// GetReceiverAccountOk returns a tuple with the ReceiverAccount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetReceiverAccountOk() (*FPHSpedVAPIObjectsMoneyLiteBankAccount, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverAccount.Get(), o.ReceiverAccount.IsSet()
}

// SetReceiverAccount sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetReceiverAccount(v FPHSpedVAPIObjectsMoneyLiteBankAccount) {
	o.ReceiverAccount.Set(&v)
}

// GetReceiver returns the Receiver field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetReceiver() string {
	if o == nil || o.Receiver.Get() == nil {
		var ret string
		return ret
	}

	return *o.Receiver.Get()
}

// GetReceiverOk returns a tuple with the Receiver field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetReceiverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Receiver.Get(), o.Receiver.IsSet()
}

// SetReceiver sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetReceiver(v string) {
	o.Receiver.Set(&v)
}

// GetCause returns the Cause field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetCause() string {
	if o == nil || o.Cause.Get() == nil {
		var ret string
		return ret
	}

	return *o.Cause.Get()
}

// GetCauseOk returns a tuple with the Cause field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetCauseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cause.Get(), o.Cause.IsSet()
}

// SetCause sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetCause(v string) {
	o.Cause.Set(&v)
}

// GetCauseGroup returns the CauseGroup field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetCauseGroup() string {
	if o == nil || o.CauseGroup.Get() == nil {
		var ret string
		return ret
	}

	return *o.CauseGroup.Get()
}

// GetCauseGroupOk returns a tuple with the CauseGroup field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetCauseGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CauseGroup.Get(), o.CauseGroup.IsSet()
}

// SetCauseGroup sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetCauseGroup(v string) {
	o.CauseGroup.Set(&v)
}

// GetValue returns the Value field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetValue(v float64) {
	o.Value = v
}

// GetMoney returns the Money field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetMoney() string {
	if o == nil || o.Money.Get() == nil {
		var ret string
		return ret
	}

	return *o.Money.Get()
}

// GetMoneyOk returns a tuple with the Money field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetMoneyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Money.Get(), o.Money.IsSet()
}

// SetMoney sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetMoney(v string) {
	o.Money.Set(&v)
}

// GetResponsibleUser returns the ResponsibleUser field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsUsersUser will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetResponsibleUser() FPHSpedVAPIObjectsUsersUser {
	if o == nil || o.ResponsibleUser.Get() == nil {
		var ret FPHSpedVAPIObjectsUsersUser
		return ret
	}

	return *o.ResponsibleUser.Get()
}

// GetResponsibleUserOk returns a tuple with the ResponsibleUser field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetResponsibleUserOk() (*FPHSpedVAPIObjectsUsersUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponsibleUser.Get(), o.ResponsibleUser.IsSet()
}

// SetResponsibleUser sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetResponsibleUser(v FPHSpedVAPIObjectsUsersUser) {
	o.ResponsibleUser.Set(&v)
}

// GetResponsible returns the Responsible field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetResponsible() string {
	if o == nil || o.Responsible.Get() == nil {
		var ret string
		return ret
	}

	return *o.Responsible.Get()
}

// GetResponsibleOk returns a tuple with the Responsible field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetResponsibleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Responsible.Get(), o.Responsible.IsSet()
}

// SetResponsible sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetResponsible(v string) {
	o.Responsible.Set(&v)
}

// GetDateTime returns the DateTime field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetDateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetDateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateTime, true
}

// SetDateTime sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetDateTime(v time.Time) {
	o.DateTime = v
}

// GetTime returns the Time field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetTime() string {
	if o == nil || o.Time.Get() == nil {
		var ret string
		return ret
	}

	return *o.Time.Get()
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Time.Get(), o.Time.IsSet()
}

// SetTime sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetTime(v string) {
	o.Time.Set(&v)
}

// GetIsNegative returns the IsNegative field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetIsNegative() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsNegative
}

// GetIsNegativeOk returns a tuple with the IsNegative field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) GetIsNegativeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsNegative, true
}

// SetIsNegative sets field value
func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) SetIsNegative(v bool) {
	o.IsNegative = v
}

func (o FPHSpedVAPIObjectsMoneyMoneyTransfer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsMoneyMoneyTransfer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["senderAccount"] = o.SenderAccount.Get()
	toSerialize["sender"] = o.Sender.Get()
	toSerialize["receiverAccount"] = o.ReceiverAccount.Get()
	toSerialize["receiver"] = o.Receiver.Get()
	toSerialize["cause"] = o.Cause.Get()
	toSerialize["causeGroup"] = o.CauseGroup.Get()
	toSerialize["value"] = o.Value
	toSerialize["money"] = o.Money.Get()
	toSerialize["responsibleUser"] = o.ResponsibleUser.Get()
	toSerialize["responsible"] = o.Responsible.Get()
	toSerialize["dateTime"] = o.DateTime
	toSerialize["time"] = o.Time.Get()
	toSerialize["isNegative"] = o.IsNegative
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsMoneyMoneyTransfer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"senderAccount",
		"sender",
		"receiverAccount",
		"receiver",
		"cause",
		"causeGroup",
		"value",
		"money",
		"responsibleUser",
		"responsible",
		"dateTime",
		"time",
		"isNegative",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsMoneyMoneyTransfer := _FPHSpedVAPIObjectsMoneyMoneyTransfer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsMoneyMoneyTransfer)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsMoneyMoneyTransfer(varFPHSpedVAPIObjectsMoneyMoneyTransfer)

	return err
}

type NullableFPHSpedVAPIObjectsMoneyMoneyTransfer struct {
	value *FPHSpedVAPIObjectsMoneyMoneyTransfer
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsMoneyMoneyTransfer) Get() *FPHSpedVAPIObjectsMoneyMoneyTransfer {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsMoneyMoneyTransfer) Set(val *FPHSpedVAPIObjectsMoneyMoneyTransfer) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsMoneyMoneyTransfer) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsMoneyMoneyTransfer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsMoneyMoneyTransfer(val *FPHSpedVAPIObjectsMoneyMoneyTransfer) *NullableFPHSpedVAPIObjectsMoneyMoneyTransfer {
	return &NullableFPHSpedVAPIObjectsMoneyMoneyTransfer{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsMoneyMoneyTransfer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsMoneyMoneyTransfer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


