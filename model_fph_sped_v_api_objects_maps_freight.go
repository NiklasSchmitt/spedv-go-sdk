/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsMapsFreight type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsMapsFreight{}

// FPHSpedVAPIObjectsMapsFreight struct for FPHSpedVAPIObjectsMapsFreight
type FPHSpedVAPIObjectsMapsFreight struct {
	Id int32 `json:"id"`
	Name NullableString `json:"name"`
	Tsid NullableString `json:"tsid"`
	Sgmtsid NullableString `json:"sgmtsid"`
	Game NullableString `json:"game"`
	KontorMultiplayer bool `json:"kontorMultiplayer"`
}

type _FPHSpedVAPIObjectsMapsFreight FPHSpedVAPIObjectsMapsFreight

// NewFPHSpedVAPIObjectsMapsFreight instantiates a new FPHSpedVAPIObjectsMapsFreight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsMapsFreight(id int32, name NullableString, tsid NullableString, sgmtsid NullableString, game NullableString, kontorMultiplayer bool) *FPHSpedVAPIObjectsMapsFreight {
	this := FPHSpedVAPIObjectsMapsFreight{}
	this.Id = id
	this.Name = name
	this.Tsid = tsid
	this.Sgmtsid = sgmtsid
	this.Game = game
	this.KontorMultiplayer = kontorMultiplayer
	return &this
}

// NewFPHSpedVAPIObjectsMapsFreightWithDefaults instantiates a new FPHSpedVAPIObjectsMapsFreight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsMapsFreightWithDefaults() *FPHSpedVAPIObjectsMapsFreight {
	this := FPHSpedVAPIObjectsMapsFreight{}
	return &this
}

// GetId returns the Id field value
func (o *FPHSpedVAPIObjectsMapsFreight) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMapsFreight) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FPHSpedVAPIObjectsMapsFreight) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMapsFreight) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsFreight) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *FPHSpedVAPIObjectsMapsFreight) SetName(v string) {
	o.Name.Set(&v)
}

// GetTsid returns the Tsid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMapsFreight) GetTsid() string {
	if o == nil || o.Tsid.Get() == nil {
		var ret string
		return ret
	}

	return *o.Tsid.Get()
}

// GetTsidOk returns a tuple with the Tsid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsFreight) GetTsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tsid.Get(), o.Tsid.IsSet()
}

// SetTsid sets field value
func (o *FPHSpedVAPIObjectsMapsFreight) SetTsid(v string) {
	o.Tsid.Set(&v)
}

// GetSgmtsid returns the Sgmtsid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMapsFreight) GetSgmtsid() string {
	if o == nil || o.Sgmtsid.Get() == nil {
		var ret string
		return ret
	}

	return *o.Sgmtsid.Get()
}

// GetSgmtsidOk returns a tuple with the Sgmtsid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsFreight) GetSgmtsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sgmtsid.Get(), o.Sgmtsid.IsSet()
}

// SetSgmtsid sets field value
func (o *FPHSpedVAPIObjectsMapsFreight) SetSgmtsid(v string) {
	o.Sgmtsid.Set(&v)
}

// GetGame returns the Game field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMapsFreight) GetGame() string {
	if o == nil || o.Game.Get() == nil {
		var ret string
		return ret
	}

	return *o.Game.Get()
}

// GetGameOk returns a tuple with the Game field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsFreight) GetGameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Game.Get(), o.Game.IsSet()
}

// SetGame sets field value
func (o *FPHSpedVAPIObjectsMapsFreight) SetGame(v string) {
	o.Game.Set(&v)
}

// GetKontorMultiplayer returns the KontorMultiplayer field value
func (o *FPHSpedVAPIObjectsMapsFreight) GetKontorMultiplayer() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.KontorMultiplayer
}

// GetKontorMultiplayerOk returns a tuple with the KontorMultiplayer field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMapsFreight) GetKontorMultiplayerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KontorMultiplayer, true
}

// SetKontorMultiplayer sets field value
func (o *FPHSpedVAPIObjectsMapsFreight) SetKontorMultiplayer(v bool) {
	o.KontorMultiplayer = v
}

func (o FPHSpedVAPIObjectsMapsFreight) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsMapsFreight) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name.Get()
	toSerialize["tsid"] = o.Tsid.Get()
	toSerialize["sgmtsid"] = o.Sgmtsid.Get()
	toSerialize["game"] = o.Game.Get()
	toSerialize["kontorMultiplayer"] = o.KontorMultiplayer
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsMapsFreight) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"tsid",
		"sgmtsid",
		"game",
		"kontorMultiplayer",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsMapsFreight := _FPHSpedVAPIObjectsMapsFreight{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsMapsFreight)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsMapsFreight(varFPHSpedVAPIObjectsMapsFreight)

	return err
}

type NullableFPHSpedVAPIObjectsMapsFreight struct {
	value *FPHSpedVAPIObjectsMapsFreight
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsMapsFreight) Get() *FPHSpedVAPIObjectsMapsFreight {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsMapsFreight) Set(val *FPHSpedVAPIObjectsMapsFreight) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsMapsFreight) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsMapsFreight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsMapsFreight(val *FPHSpedVAPIObjectsMapsFreight) *NullableFPHSpedVAPIObjectsMapsFreight {
	return &NullableFPHSpedVAPIObjectsMapsFreight{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsMapsFreight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsMapsFreight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


