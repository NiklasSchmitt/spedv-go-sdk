/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BingMapsRESTToolkitAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BingMapsRESTToolkitAddress{}

// BingMapsRESTToolkitAddress struct for BingMapsRESTToolkitAddress
type BingMapsRESTToolkitAddress struct {
	AddressLine NullableString `json:"addressLine"`
	AdminDistrict NullableString `json:"adminDistrict"`
	AdminDistrict2 NullableString `json:"adminDistrict2"`
	CountryRegion NullableString `json:"countryRegion"`
	Locality NullableString `json:"locality"`
	PostalCode NullableString `json:"postalCode"`
	CountryRegionIso2 NullableString `json:"countryRegionIso2"`
	FormattedAddress NullableString `json:"formattedAddress"`
	Neighborhood NullableString `json:"neighborhood"`
	Landmark NullableString `json:"landmark"`
}

type _BingMapsRESTToolkitAddress BingMapsRESTToolkitAddress

// NewBingMapsRESTToolkitAddress instantiates a new BingMapsRESTToolkitAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBingMapsRESTToolkitAddress(addressLine NullableString, adminDistrict NullableString, adminDistrict2 NullableString, countryRegion NullableString, locality NullableString, postalCode NullableString, countryRegionIso2 NullableString, formattedAddress NullableString, neighborhood NullableString, landmark NullableString) *BingMapsRESTToolkitAddress {
	this := BingMapsRESTToolkitAddress{}
	this.AddressLine = addressLine
	this.AdminDistrict = adminDistrict
	this.AdminDistrict2 = adminDistrict2
	this.CountryRegion = countryRegion
	this.Locality = locality
	this.PostalCode = postalCode
	this.CountryRegionIso2 = countryRegionIso2
	this.FormattedAddress = formattedAddress
	this.Neighborhood = neighborhood
	this.Landmark = landmark
	return &this
}

// NewBingMapsRESTToolkitAddressWithDefaults instantiates a new BingMapsRESTToolkitAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBingMapsRESTToolkitAddressWithDefaults() *BingMapsRESTToolkitAddress {
	this := BingMapsRESTToolkitAddress{}
	return &this
}

// GetAddressLine returns the AddressLine field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetAddressLine() string {
	if o == nil || o.AddressLine.Get() == nil {
		var ret string
		return ret
	}

	return *o.AddressLine.Get()
}

// GetAddressLineOk returns a tuple with the AddressLine field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetAddressLineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine.Get(), o.AddressLine.IsSet()
}

// SetAddressLine sets field value
func (o *BingMapsRESTToolkitAddress) SetAddressLine(v string) {
	o.AddressLine.Set(&v)
}

// GetAdminDistrict returns the AdminDistrict field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetAdminDistrict() string {
	if o == nil || o.AdminDistrict.Get() == nil {
		var ret string
		return ret
	}

	return *o.AdminDistrict.Get()
}

// GetAdminDistrictOk returns a tuple with the AdminDistrict field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetAdminDistrictOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminDistrict.Get(), o.AdminDistrict.IsSet()
}

// SetAdminDistrict sets field value
func (o *BingMapsRESTToolkitAddress) SetAdminDistrict(v string) {
	o.AdminDistrict.Set(&v)
}

// GetAdminDistrict2 returns the AdminDistrict2 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetAdminDistrict2() string {
	if o == nil || o.AdminDistrict2.Get() == nil {
		var ret string
		return ret
	}

	return *o.AdminDistrict2.Get()
}

// GetAdminDistrict2Ok returns a tuple with the AdminDistrict2 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetAdminDistrict2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminDistrict2.Get(), o.AdminDistrict2.IsSet()
}

// SetAdminDistrict2 sets field value
func (o *BingMapsRESTToolkitAddress) SetAdminDistrict2(v string) {
	o.AdminDistrict2.Set(&v)
}

// GetCountryRegion returns the CountryRegion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetCountryRegion() string {
	if o == nil || o.CountryRegion.Get() == nil {
		var ret string
		return ret
	}

	return *o.CountryRegion.Get()
}

// GetCountryRegionOk returns a tuple with the CountryRegion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetCountryRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryRegion.Get(), o.CountryRegion.IsSet()
}

// SetCountryRegion sets field value
func (o *BingMapsRESTToolkitAddress) SetCountryRegion(v string) {
	o.CountryRegion.Set(&v)
}

// GetLocality returns the Locality field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetLocality() string {
	if o == nil || o.Locality.Get() == nil {
		var ret string
		return ret
	}

	return *o.Locality.Get()
}

// GetLocalityOk returns a tuple with the Locality field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetLocalityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locality.Get(), o.Locality.IsSet()
}

// SetLocality sets field value
func (o *BingMapsRESTToolkitAddress) SetLocality(v string) {
	o.Locality.Set(&v)
}

// GetPostalCode returns the PostalCode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetPostalCode() string {
	if o == nil || o.PostalCode.Get() == nil {
		var ret string
		return ret
	}

	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// SetPostalCode sets field value
func (o *BingMapsRESTToolkitAddress) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}

// GetCountryRegionIso2 returns the CountryRegionIso2 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetCountryRegionIso2() string {
	if o == nil || o.CountryRegionIso2.Get() == nil {
		var ret string
		return ret
	}

	return *o.CountryRegionIso2.Get()
}

// GetCountryRegionIso2Ok returns a tuple with the CountryRegionIso2 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetCountryRegionIso2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryRegionIso2.Get(), o.CountryRegionIso2.IsSet()
}

// SetCountryRegionIso2 sets field value
func (o *BingMapsRESTToolkitAddress) SetCountryRegionIso2(v string) {
	o.CountryRegionIso2.Set(&v)
}

// GetFormattedAddress returns the FormattedAddress field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetFormattedAddress() string {
	if o == nil || o.FormattedAddress.Get() == nil {
		var ret string
		return ret
	}

	return *o.FormattedAddress.Get()
}

// GetFormattedAddressOk returns a tuple with the FormattedAddress field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetFormattedAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FormattedAddress.Get(), o.FormattedAddress.IsSet()
}

// SetFormattedAddress sets field value
func (o *BingMapsRESTToolkitAddress) SetFormattedAddress(v string) {
	o.FormattedAddress.Set(&v)
}

// GetNeighborhood returns the Neighborhood field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetNeighborhood() string {
	if o == nil || o.Neighborhood.Get() == nil {
		var ret string
		return ret
	}

	return *o.Neighborhood.Get()
}

// GetNeighborhoodOk returns a tuple with the Neighborhood field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetNeighborhoodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Neighborhood.Get(), o.Neighborhood.IsSet()
}

// SetNeighborhood sets field value
func (o *BingMapsRESTToolkitAddress) SetNeighborhood(v string) {
	o.Neighborhood.Set(&v)
}

// GetLandmark returns the Landmark field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitAddress) GetLandmark() string {
	if o == nil || o.Landmark.Get() == nil {
		var ret string
		return ret
	}

	return *o.Landmark.Get()
}

// GetLandmarkOk returns a tuple with the Landmark field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitAddress) GetLandmarkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Landmark.Get(), o.Landmark.IsSet()
}

// SetLandmark sets field value
func (o *BingMapsRESTToolkitAddress) SetLandmark(v string) {
	o.Landmark.Set(&v)
}

func (o BingMapsRESTToolkitAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BingMapsRESTToolkitAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addressLine"] = o.AddressLine.Get()
	toSerialize["adminDistrict"] = o.AdminDistrict.Get()
	toSerialize["adminDistrict2"] = o.AdminDistrict2.Get()
	toSerialize["countryRegion"] = o.CountryRegion.Get()
	toSerialize["locality"] = o.Locality.Get()
	toSerialize["postalCode"] = o.PostalCode.Get()
	toSerialize["countryRegionIso2"] = o.CountryRegionIso2.Get()
	toSerialize["formattedAddress"] = o.FormattedAddress.Get()
	toSerialize["neighborhood"] = o.Neighborhood.Get()
	toSerialize["landmark"] = o.Landmark.Get()
	return toSerialize, nil
}

func (o *BingMapsRESTToolkitAddress) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addressLine",
		"adminDistrict",
		"adminDistrict2",
		"countryRegion",
		"locality",
		"postalCode",
		"countryRegionIso2",
		"formattedAddress",
		"neighborhood",
		"landmark",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBingMapsRESTToolkitAddress := _BingMapsRESTToolkitAddress{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBingMapsRESTToolkitAddress)

	if err != nil {
		return err
	}

	*o = BingMapsRESTToolkitAddress(varBingMapsRESTToolkitAddress)

	return err
}

type NullableBingMapsRESTToolkitAddress struct {
	value *BingMapsRESTToolkitAddress
	isSet bool
}

func (v NullableBingMapsRESTToolkitAddress) Get() *BingMapsRESTToolkitAddress {
	return v.value
}

func (v *NullableBingMapsRESTToolkitAddress) Set(val *BingMapsRESTToolkitAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableBingMapsRESTToolkitAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableBingMapsRESTToolkitAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBingMapsRESTToolkitAddress(val *BingMapsRESTToolkitAddress) *NullableBingMapsRESTToolkitAddress {
	return &NullableBingMapsRESTToolkitAddress{value: val, isSet: true}
}

func (v NullableBingMapsRESTToolkitAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBingMapsRESTToolkitAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


