/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// FPHSpedVAPIEnumsJobPublicState   0 = Assigned  1 = Intern  2 = Extern  -1 = NotAvailable
type FPHSpedVAPIEnumsJobPublicState int32

// List of FPH.SpedV.API.Enums.JobPublicState
const (
	_0 FPHSpedVAPIEnumsJobPublicState = 0
	_1 FPHSpedVAPIEnumsJobPublicState = 1
	_2 FPHSpedVAPIEnumsJobPublicState = 2
	_MINUS_1 FPHSpedVAPIEnumsJobPublicState = -1
)

// All allowed values of FPHSpedVAPIEnumsJobPublicState enum
var AllowedFPHSpedVAPIEnumsJobPublicStateEnumValues = []FPHSpedVAPIEnumsJobPublicState{
	0,
	1,
	2,
	-1,
}

func (v *FPHSpedVAPIEnumsJobPublicState) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FPHSpedVAPIEnumsJobPublicState(value)
	for _, existing := range AllowedFPHSpedVAPIEnumsJobPublicStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FPHSpedVAPIEnumsJobPublicState", value)
}

// NewFPHSpedVAPIEnumsJobPublicStateFromValue returns a pointer to a valid FPHSpedVAPIEnumsJobPublicState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFPHSpedVAPIEnumsJobPublicStateFromValue(v int32) (*FPHSpedVAPIEnumsJobPublicState, error) {
	ev := FPHSpedVAPIEnumsJobPublicState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FPHSpedVAPIEnumsJobPublicState: valid values are %v", v, AllowedFPHSpedVAPIEnumsJobPublicStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FPHSpedVAPIEnumsJobPublicState) IsValid() bool {
	for _, existing := range AllowedFPHSpedVAPIEnumsJobPublicStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to FPH.SpedV.API.Enums.JobPublicState value
func (v FPHSpedVAPIEnumsJobPublicState) Ptr() *FPHSpedVAPIEnumsJobPublicState {
	return &v
}

type NullableFPHSpedVAPIEnumsJobPublicState struct {
	value *FPHSpedVAPIEnumsJobPublicState
	isSet bool
}

func (v NullableFPHSpedVAPIEnumsJobPublicState) Get() *FPHSpedVAPIEnumsJobPublicState {
	return v.value
}

func (v *NullableFPHSpedVAPIEnumsJobPublicState) Set(val *FPHSpedVAPIEnumsJobPublicState) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIEnumsJobPublicState) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIEnumsJobPublicState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIEnumsJobPublicState(val *FPHSpedVAPIEnumsJobPublicState) *NullableFPHSpedVAPIEnumsJobPublicState {
	return &NullableFPHSpedVAPIEnumsJobPublicState{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIEnumsJobPublicState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIEnumsJobPublicState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

