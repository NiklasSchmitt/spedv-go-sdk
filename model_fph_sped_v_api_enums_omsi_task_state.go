/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// FPHSpedVAPIEnumsOMSITaskState   0 = InDrive  1 = Finished  2 = Cancelled  -1 = NotAvaliable
type FPHSpedVAPIEnumsOMSITaskState int32

// List of FPH.SpedV.API.Enums.OMSITaskState
const (
	_0 FPHSpedVAPIEnumsOMSITaskState = 0
	_1 FPHSpedVAPIEnumsOMSITaskState = 1
	_2 FPHSpedVAPIEnumsOMSITaskState = 2
	_MINUS_1 FPHSpedVAPIEnumsOMSITaskState = -1
)

// All allowed values of FPHSpedVAPIEnumsOMSITaskState enum
var AllowedFPHSpedVAPIEnumsOMSITaskStateEnumValues = []FPHSpedVAPIEnumsOMSITaskState{
	0,
	1,
	2,
	-1,
}

func (v *FPHSpedVAPIEnumsOMSITaskState) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FPHSpedVAPIEnumsOMSITaskState(value)
	for _, existing := range AllowedFPHSpedVAPIEnumsOMSITaskStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FPHSpedVAPIEnumsOMSITaskState", value)
}

// NewFPHSpedVAPIEnumsOMSITaskStateFromValue returns a pointer to a valid FPHSpedVAPIEnumsOMSITaskState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFPHSpedVAPIEnumsOMSITaskStateFromValue(v int32) (*FPHSpedVAPIEnumsOMSITaskState, error) {
	ev := FPHSpedVAPIEnumsOMSITaskState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FPHSpedVAPIEnumsOMSITaskState: valid values are %v", v, AllowedFPHSpedVAPIEnumsOMSITaskStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FPHSpedVAPIEnumsOMSITaskState) IsValid() bool {
	for _, existing := range AllowedFPHSpedVAPIEnumsOMSITaskStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to FPH.SpedV.API.Enums.OMSITaskState value
func (v FPHSpedVAPIEnumsOMSITaskState) Ptr() *FPHSpedVAPIEnumsOMSITaskState {
	return &v
}

type NullableFPHSpedVAPIEnumsOMSITaskState struct {
	value *FPHSpedVAPIEnumsOMSITaskState
	isSet bool
}

func (v NullableFPHSpedVAPIEnumsOMSITaskState) Get() *FPHSpedVAPIEnumsOMSITaskState {
	return v.value
}

func (v *NullableFPHSpedVAPIEnumsOMSITaskState) Set(val *FPHSpedVAPIEnumsOMSITaskState) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIEnumsOMSITaskState) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIEnumsOMSITaskState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIEnumsOMSITaskState(val *FPHSpedVAPIEnumsOMSITaskState) *NullableFPHSpedVAPIEnumsOMSITaskState {
	return &NullableFPHSpedVAPIEnumsOMSITaskState{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIEnumsOMSITaskState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIEnumsOMSITaskState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

