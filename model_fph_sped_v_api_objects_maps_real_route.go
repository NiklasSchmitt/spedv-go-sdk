/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the FPHSpedVAPIObjectsMapsRealRoute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsMapsRealRoute{}

// FPHSpedVAPIObjectsMapsRealRoute struct for FPHSpedVAPIObjectsMapsRealRoute
type FPHSpedVAPIObjectsMapsRealRoute struct {
	Start NullableString `json:"start,omitempty"`
	Destination NullableString `json:"destination,omitempty"`
	CachedDate *time.Time `json:"cachedDate,omitempty"`
	DistanceKM *int32 `json:"distanceKM,omitempty"`
	Locations [][]float64 `json:"locations,omitempty"`
	ViaFerryID *int32 `json:"viaFerryID,omitempty"`
}

// NewFPHSpedVAPIObjectsMapsRealRoute instantiates a new FPHSpedVAPIObjectsMapsRealRoute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsMapsRealRoute() *FPHSpedVAPIObjectsMapsRealRoute {
	this := FPHSpedVAPIObjectsMapsRealRoute{}
	return &this
}

// NewFPHSpedVAPIObjectsMapsRealRouteWithDefaults instantiates a new FPHSpedVAPIObjectsMapsRealRoute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsMapsRealRouteWithDefaults() *FPHSpedVAPIObjectsMapsRealRoute {
	this := FPHSpedVAPIObjectsMapsRealRoute{}
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetStart() string {
	if o == nil || IsNil(o.Start.Get()) {
		var ret string
		return ret
	}
	return *o.Start.Get()
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Start.Get(), o.Start.IsSet()
}

// HasStart returns a boolean if a field has been set.
func (o *FPHSpedVAPIObjectsMapsRealRoute) HasStart() bool {
	if o != nil && o.Start.IsSet() {
		return true
	}

	return false
}

// SetStart gets a reference to the given NullableString and assigns it to the Start field.
func (o *FPHSpedVAPIObjectsMapsRealRoute) SetStart(v string) {
	o.Start.Set(&v)
}
// SetStartNil sets the value for Start to be an explicit nil
func (o *FPHSpedVAPIObjectsMapsRealRoute) SetStartNil() {
	o.Start.Set(nil)
}

// UnsetStart ensures that no value is present for Start, not even an explicit nil
func (o *FPHSpedVAPIObjectsMapsRealRoute) UnsetStart() {
	o.Start.Unset()
}

// GetDestination returns the Destination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetDestination() string {
	if o == nil || IsNil(o.Destination.Get()) {
		var ret string
		return ret
	}
	return *o.Destination.Get()
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Destination.Get(), o.Destination.IsSet()
}

// HasDestination returns a boolean if a field has been set.
func (o *FPHSpedVAPIObjectsMapsRealRoute) HasDestination() bool {
	if o != nil && o.Destination.IsSet() {
		return true
	}

	return false
}

// SetDestination gets a reference to the given NullableString and assigns it to the Destination field.
func (o *FPHSpedVAPIObjectsMapsRealRoute) SetDestination(v string) {
	o.Destination.Set(&v)
}
// SetDestinationNil sets the value for Destination to be an explicit nil
func (o *FPHSpedVAPIObjectsMapsRealRoute) SetDestinationNil() {
	o.Destination.Set(nil)
}

// UnsetDestination ensures that no value is present for Destination, not even an explicit nil
func (o *FPHSpedVAPIObjectsMapsRealRoute) UnsetDestination() {
	o.Destination.Unset()
}

// GetCachedDate returns the CachedDate field value if set, zero value otherwise.
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetCachedDate() time.Time {
	if o == nil || IsNil(o.CachedDate) {
		var ret time.Time
		return ret
	}
	return *o.CachedDate
}

// GetCachedDateOk returns a tuple with the CachedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetCachedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CachedDate) {
		return nil, false
	}
	return o.CachedDate, true
}

// HasCachedDate returns a boolean if a field has been set.
func (o *FPHSpedVAPIObjectsMapsRealRoute) HasCachedDate() bool {
	if o != nil && !IsNil(o.CachedDate) {
		return true
	}

	return false
}

// SetCachedDate gets a reference to the given time.Time and assigns it to the CachedDate field.
func (o *FPHSpedVAPIObjectsMapsRealRoute) SetCachedDate(v time.Time) {
	o.CachedDate = &v
}

// GetDistanceKM returns the DistanceKM field value if set, zero value otherwise.
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetDistanceKM() int32 {
	if o == nil || IsNil(o.DistanceKM) {
		var ret int32
		return ret
	}
	return *o.DistanceKM
}

// GetDistanceKMOk returns a tuple with the DistanceKM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetDistanceKMOk() (*int32, bool) {
	if o == nil || IsNil(o.DistanceKM) {
		return nil, false
	}
	return o.DistanceKM, true
}

// HasDistanceKM returns a boolean if a field has been set.
func (o *FPHSpedVAPIObjectsMapsRealRoute) HasDistanceKM() bool {
	if o != nil && !IsNil(o.DistanceKM) {
		return true
	}

	return false
}

// SetDistanceKM gets a reference to the given int32 and assigns it to the DistanceKM field.
func (o *FPHSpedVAPIObjectsMapsRealRoute) SetDistanceKM(v int32) {
	o.DistanceKM = &v
}

// GetLocations returns the Locations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetLocations() [][]float64 {
	if o == nil {
		var ret [][]float64
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetLocationsOk() ([][]float64, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *FPHSpedVAPIObjectsMapsRealRoute) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given [][]float64 and assigns it to the Locations field.
func (o *FPHSpedVAPIObjectsMapsRealRoute) SetLocations(v [][]float64) {
	o.Locations = v
}

// GetViaFerryID returns the ViaFerryID field value if set, zero value otherwise.
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetViaFerryID() int32 {
	if o == nil || IsNil(o.ViaFerryID) {
		var ret int32
		return ret
	}
	return *o.ViaFerryID
}

// GetViaFerryIDOk returns a tuple with the ViaFerryID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMapsRealRoute) GetViaFerryIDOk() (*int32, bool) {
	if o == nil || IsNil(o.ViaFerryID) {
		return nil, false
	}
	return o.ViaFerryID, true
}

// HasViaFerryID returns a boolean if a field has been set.
func (o *FPHSpedVAPIObjectsMapsRealRoute) HasViaFerryID() bool {
	if o != nil && !IsNil(o.ViaFerryID) {
		return true
	}

	return false
}

// SetViaFerryID gets a reference to the given int32 and assigns it to the ViaFerryID field.
func (o *FPHSpedVAPIObjectsMapsRealRoute) SetViaFerryID(v int32) {
	o.ViaFerryID = &v
}

func (o FPHSpedVAPIObjectsMapsRealRoute) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsMapsRealRoute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Start.IsSet() {
		toSerialize["start"] = o.Start.Get()
	}
	if o.Destination.IsSet() {
		toSerialize["destination"] = o.Destination.Get()
	}
	if !IsNil(o.CachedDate) {
		toSerialize["cachedDate"] = o.CachedDate
	}
	if !IsNil(o.DistanceKM) {
		toSerialize["distanceKM"] = o.DistanceKM
	}
	if o.Locations != nil {
		toSerialize["locations"] = o.Locations
	}
	if !IsNil(o.ViaFerryID) {
		toSerialize["viaFerryID"] = o.ViaFerryID
	}
	return toSerialize, nil
}

type NullableFPHSpedVAPIObjectsMapsRealRoute struct {
	value *FPHSpedVAPIObjectsMapsRealRoute
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsMapsRealRoute) Get() *FPHSpedVAPIObjectsMapsRealRoute {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsMapsRealRoute) Set(val *FPHSpedVAPIObjectsMapsRealRoute) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsMapsRealRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsMapsRealRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsMapsRealRoute(val *FPHSpedVAPIObjectsMapsRealRoute) *NullableFPHSpedVAPIObjectsMapsRealRoute {
	return &NullableFPHSpedVAPIObjectsMapsRealRoute{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsMapsRealRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsMapsRealRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


