{
  "openapi": "3.0.1",
  "info": {
    "title": "SpedV API",
    "termsOfService": "https://www.sped-v.de/agb-richtlinien/",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.sped-v.de",
      "description": "SpedV REST API"
    }
  ],
  "paths": {
    "/v1/bankaccounts": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.BankAccount"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.BankAccount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.BankAccount"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/bankaccounts/{accountId}": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/bankaccounts/{iban}": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "name": "iban",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/bankaccounts/{accountId}/transfers": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.MoneyTransfer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.MoneyTransfer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.MoneyTransfer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/bankaccounts/{accountId}/transfers/daily": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.MoneyTransferDay"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.MoneyTransferDay"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.MoneyTransferDay"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/bankaccounts/{accountId}/transfers/summary": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.MoneyEURData"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.MoneyEURData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.MoneyEURData"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/ownedbranches": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "includePartnerships",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.OwnedBranch"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.OwnedBranch"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.OwnedBranch"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/ownedbranches/{branchid}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "branchid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/ownedbranches/{branchid}/statistics": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "branchid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startdate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "enddate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spareparts": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spareparts/{sparepartid}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "sparepartid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spareparts/{sparepartid}/providers": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "sparepartid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/chats": {
      "get": {
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.Chat"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.Chat"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.Chat"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedchat": {
      "get": {
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.Chat"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.Chat"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.Chat"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/chat/{chatId}": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.Chat"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.Chat"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.Chat"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/chat/{chatId}/messages": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "lastMessage",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.ChatMessage"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.ChatMessage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.ChatMessage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/kontor/{game}/trailers": {
      "get": {
        "tags": [
          "Kontor"
        ],
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          {
            "name": "includePartnerships",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Trailer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Trailer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Trailer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/kontor/{game}/jobs/available": {
      "get": {
        "tags": [
          "Kontor"
        ],
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobOffer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobOffer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobOffer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/kontor/{game}/parts/available": {
      "get": {
        "tags": [
          "Kontor"
        ],
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          {
            "name": "includePartnerships",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/kontor/{game}/jobs": {
      "get": {
        "tags": [
          "Kontor"
        ],
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          {
            "name": "showFinished",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Job"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Job"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Job"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/kontor/{game}/jobs/{jobid}": {
      "get": {
        "tags": [
          "Kontor"
        ],
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          {
            "name": "jobid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Job"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Job"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Job"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/kontor/{game}/parts": {
      "get": {
        "tags": [
          "Kontor"
        ],
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          {
            "name": "showFinished",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includePartnerships",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/kontor/{game}/parts/{partid}": {
      "get": {
        "tags": [
          "Kontor"
        ],
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          {
            "name": "partid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/kontor/{game}/parts/{partid}/jobs": {
      "get": {
        "tags": [
          "Kontor"
        ],
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          {
            "name": "partid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Job"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Job"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Job"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/live/positions": {
      "get": {
        "tags": [
          "Live"
        ],
        "parameters": [
          {
            "name": "spedId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeSinglePlayer",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.ServerCommunication.Helper.REST.UserPosition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.ServerCommunication.Helper.REST.UserPosition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.ServerCommunication.Helper.REST.UserPosition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/live/onlineusers": {
      "get": {
        "tags": [
          "Live"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.ConvoyInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.ConvoyInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.ConvoyInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/live/onlineuser": {
      "get": {
        "tags": [
          "Live"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.ConvoyInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.ConvoyInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.ConvoyInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/location/{query}": {
      "get": {
        "tags": [
          "Location"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BingMapsRESTToolkit.Location"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BingMapsRESTToolkit.Location"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BingMapsRESTToolkit.Location"
                }
              }
            }
          }
        }
      }
    },
    "/v1/location/realroute/{startCityId}/{destinationCityId}": {
      "get": {
        "tags": [
          "Location"
        ],
        "parameters": [
          {
            "name": "startCityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "destinationCityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.RealRoute"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.RealRoute"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.RealRoute"
                }
              }
            }
          }
        }
      }
    },
    "/v1/location/scsmap/distance/{startBranchId}/{destinationBranchId}": {
      "get": {
        "tags": [
          "Location"
        ],
        "parameters": [
          {
            "name": "startBranchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "destinationBranchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SGMDistance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SGMDistance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SGMDistance"
                }
              }
            }
          }
        }
      }
    },
    "/v1/maintenance/truck": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "parameters": [
          {
            "name": "showAll",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckMaintenance"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckMaintenance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckMaintenance"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/maintenance/trailer": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "parameters": [
          {
            "name": "showAll",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.TrailerMaintenance"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.TrailerMaintenance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.TrailerMaintenance"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/maps": {
      "get": {
        "tags": [
          "Maps"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Map"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Map"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Map"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/maps/{mapId}/cities": {
      "get": {
        "tags": [
          "Maps"
        ],
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.City"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.City"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.City"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/maps/{mapId}/companycities": {
      "get": {
        "tags": [
          "Maps"
        ],
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/countries": {
      "get": {
        "tags": [
          "Maps"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Country"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Country"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Country"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies": {
      "get": {
        "tags": [
          "Maps"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Company"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Company"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Company"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies/{compid}": {
      "get": {
        "tags": [
          "Maps"
        ],
        "parameters": [
          {
            "name": "compid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Company"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Company"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Company"
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies/{compid}/branches": {
      "get": {
        "tags": [
          "Maps"
        ],
        "parameters": [
          {
            "name": "compid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/companycategories": {
      "get": {
        "tags": [
          "Maps"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/companycategories/{compid}": {
      "get": {
        "tags": [
          "Maps"
        ],
        "parameters": [
          {
            "name": "compid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCategory"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCategory"
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Map"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Map"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Map"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps/{mapid}": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "mapid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Map"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Map"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Map"
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps/{mapid}/busstops": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "mapid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.BusStop"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.BusStop"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.BusStop"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps/{mapid}/destinations": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "mapid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Destination"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Destination"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Destination"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps/{mapid}/tours": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "mapid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps/{mapid}/tourtrips/{date}": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "mapid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timediff",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps/{mapid}/tours/{tourid}": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "mapid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tourid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps/{mapid}/tours/{tourid}/trips": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "mapid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tourid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "baseDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.TourTrip"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.TourTrip"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.TourTrip"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps/{mapid}/trips": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "mapid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.TourTrip"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.TourTrip"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.TourTrip"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/maps/{mapid}/stationlinks": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "mapid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.StationLink"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.StationLink"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.StationLink"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/omsi/driventrips": {
      "get": {
        "tags": [
          "Omsi"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.DrivenTrip"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.DrivenTrip"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.DrivenTrip"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Permission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Permission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Permission"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/simrail/server": {
      "get": {
        "tags": [
          "SimRail"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailServer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailServer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailServer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/simrail/server/{id}": {
      "get": {
        "tags": [
          "SimRail"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailServer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailServer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailServer"
                }
              }
            }
          }
        }
      }
    },
    "/v1/simrail/server/{id}/trains": {
      "get": {
        "tags": [
          "SimRail"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailActiveTrain"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailActiveTrain"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailActiveTrain"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/simrail/server/{id}/trains/{number}": {
      "get": {
        "tags": [
          "SimRail"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailActiveTrain"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailActiveTrain"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailActiveTrain"
                }
              }
            }
          }
        }
      }
    },
    "/v1/simrail/server/{id}/dispatchstations": {
      "get": {
        "tags": [
          "SimRail"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailDispatchStation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailDispatchStation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailDispatchStation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/simrail/server/{id}/dispatchstations/{name}": {
      "get": {
        "tags": [
          "SimRail"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailDispatchStation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailDispatchStation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailDispatchStation"
                }
              }
            }
          }
        }
      }
    },
    "/v1/spedition": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.FullSpeditionInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.FullSpeditionInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.FullSpeditionInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedition/boniTypes": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.BoniType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.BoniType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.BoniType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedition/accounts": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "parameters": [
          {
            "name": "includePartnerships",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.BankAccount"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.BankAccount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.BankAccount"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedition/changelog": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpedChangeLogEntry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpedChangeLogEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpedChangeLogEntry"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedition/partnerships": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "parameters": [
          {
            "name": "onlyAccepted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpeditionPartnershipEntry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpeditionPartnershipEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpeditionPartnershipEntry"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedition/ranks": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Rank"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Rank"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Rank"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedition/targets": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpedTarget"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpedTarget"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpedTarget"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedition/stats": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.ServerCommunication.Helper.REST.SpedStats"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.ServerCommunication.Helper.REST.SpedStats"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.ServerCommunication.Helper.REST.SpedStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedition/stats/user": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserStatUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserStatUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserStatUser"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/spedition/stats/system": {
      "get": {
        "tags": [
          "Spedition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatistic"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatistic"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatistic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/tasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "game",
            "in": "query",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "default": -1,
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.PartialETSTaskInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.PartialETSTaskInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.PartialETSTaskInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/tasks/details": {
      "get": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "taskIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Task"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Task"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Task"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/tasks/{taskId}/details": {
      "get": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Task"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Task"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/tasks/{taskId}/drivedata": {
      "get": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TaskDriveData"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TaskDriveData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TaskDriveData"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/trucks": {
      "get": {
        "tags": [
          "Truck"
        ],
        "parameters": [
          {
            "name": "includePartnerships",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Truck"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Truck"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Truck"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/trucks/{truckid}/statistics": {
      "get": {
        "tags": [
          "Truck"
        ],
        "parameters": [
          {
            "name": "truckid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startdate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "enddate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/trucktypes": {
      "get": {
        "tags": [
          "Truck"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/user": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.FullUserInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.FullUserInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.FullUserInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "includeKontorPartnerships",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeTruckPartnerships",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserLiteInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserLiteInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserLiteInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/userprofiles": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserProfile"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/vacations": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Vacation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Vacation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Vacation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/users/{userId}/tasks": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "game",
            "in": "query",
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
                }
              ],
              "default": -1,
              "x-enumNames": [
                "ETS2",
                "ATS",
                "NotSet"
              ]
            },
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          {
            "name": "onlyCurrentSped",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.PartialETSTaskInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.PartialETSTaskInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.PartialETSTaskInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/users/{userId}/omsiTrips": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.DrivenTrip"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.DrivenTrip"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.DrivenTrip"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/users/{userId}/changelog": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserChangeLogEntry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserChangeLogEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserChangeLogEntry"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    },
    "/v1/users/{userId}/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserProfile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserProfile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserProfile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BingMapsRESTToolkit.Address": {
        "required": [
          "addressLine",
          "adminDistrict",
          "adminDistrict2",
          "countryRegion",
          "countryRegionIso2",
          "formattedAddress",
          "landmark",
          "locality",
          "neighborhood",
          "postalCode"
        ],
        "type": "object",
        "properties": {
          "addressLine": {
            "type": "string",
            "nullable": true
          },
          "adminDistrict": {
            "type": "string",
            "nullable": true
          },
          "adminDistrict2": {
            "type": "string",
            "nullable": true
          },
          "countryRegion": {
            "type": "string",
            "nullable": true
          },
          "locality": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "countryRegionIso2": {
            "type": "string",
            "nullable": true
          },
          "formattedAddress": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "landmark": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BingMapsRESTToolkit.Location": {
        "required": [
          "address",
          "confidence",
          "entityType",
          "geocodePoints",
          "matchCodes",
          "name",
          "point",
          "queryParseValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "point": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BingMapsRESTToolkit.Point"
              }
            ],
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BingMapsRESTToolkit.Address"
              }
            ],
            "nullable": true
          },
          "confidence": {
            "type": "string",
            "nullable": true
          },
          "matchCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "geocodePoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingMapsRESTToolkit.Point"
            },
            "nullable": true
          },
          "queryParseValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingMapsRESTToolkit.QueryParseValue"
            },
            "nullable": true
          },
          "bbox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "__type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BingMapsRESTToolkit.Point": {
        "required": [
          "boundingBox",
          "calculationMethod",
          "coordinates",
          "type",
          "usageTypes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "calculationMethod": {
            "type": "string",
            "nullable": true
          },
          "usageTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "boundingBox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BingMapsRESTToolkit.QueryParseValue": {
        "required": [
          "property",
          "value"
        ],
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.AdminPermissionEnum": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512
        ],
        "type": "integer",
        "description": "\n\n0 = None\n\n1 = SeeLiveData\n\n2 = HandleScreenshots\n\n4 = HandleTaskCheck\n\n8 = TicketSystem\n\n16 = ViewData\n\n32 = ChangeData\n\n64 = BanUser\n\n128 = MapImport\n\n256 = KontorManagement\n\n512 = IsManagement",
        "format": "int32",
        "x-enumNames": [
          "None",
          "SeeLiveData",
          "HandleScreenshots",
          "HandleTaskCheck",
          "TicketSystem",
          "ViewData",
          "ChangeData",
          "BanUser",
          "MapImport",
          "KontorManagement",
          "IsManagement"
        ]
      },
      "FPH.SpedV.API.Enums.BankAccountType": {
        "enum": [
          0,
          1,
          2,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = System\n\n1 = Spedition\n\n2 = User\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "System",
          "Spedition",
          "User",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Enums.BoniTypeType": {
        "enum": [
          0,
          1,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = Value\n\n1 = KM\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "Value",
          "KM",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Enums.CargoMarketType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = CargoMarket\n\n1 = QuickJob\n\n2 = FreightMarket\n\n3 = ExternalContract\n\n4 = ExternalMarket\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "CargoMarket",
          "QuickJob",
          "FreightMarket",
          "ExternalContract",
          "ExternalMarket",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Enums.ConvoyInfoDriveState": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "\n\n0 = NoGame\n\n1 = Paused\n\n2 = InDrive\n\n3 = OMSI\n\n4 = StellwerkSim\n\n5 = Bot\n\n6 = SimRail_Train\n\n7 = SimRail_Dispatch",
        "format": "int32",
        "x-enumNames": [
          "NoGame",
          "Paused",
          "InDrive",
          "OMSI",
          "StellwerkSim",
          "Bot",
          "SimRail_Train",
          "SimRail_Dispatch"
        ]
      },
      "FPH.SpedV.API.Enums.ETSTaskState": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = InDrive\n\n1 = Done\n\n2 = Settled\n\n3 = Fail\n\n4 = AdminCheck\n\n5 = Paused\n\n6 = Cancelled\n\n7 = Invalid\n\n-1 = NotAvaliable",
        "format": "int32",
        "x-enumNames": [
          "InDrive",
          "Done",
          "Settled",
          "Fail",
          "AdminCheck",
          "Paused",
          "Cancelled",
          "Invalid",
          "NotAvaliable"
        ]
      },
      "FPH.SpedV.API.Enums.GameEnum": {
        "enum": [
          0,
          1,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "ETS2",
          "ATS",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Enums.JobOfferState": {
        "enum": [
          0,
          1,
          2,
          3,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = WaitingSpedition\n\n1 = WaitingDrive\n\n2 = InDrive\n\n3 = Finished\n\n-1 = NotAvaliable",
        "format": "int32",
        "x-enumNames": [
          "WaitingSpedition",
          "WaitingDrive",
          "InDrive",
          "Finished",
          "NotAvaliable"
        ]
      },
      "FPH.SpedV.API.Enums.JobPartState": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = WaitingDriver\n\n1 = WaitingPrecondition\n\n2 = WaitingDrive\n\n3 = InDrive\n\n4 = Finished\n\n-1 = NotAvaliable",
        "format": "int32",
        "x-enumNames": [
          "WaitingDriver",
          "WaitingPrecondition",
          "WaitingDrive",
          "InDrive",
          "Finished",
          "NotAvaliable"
        ]
      },
      "FPH.SpedV.API.Enums.JobPublicState": {
        "enum": [
          0,
          1,
          2,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = Assigned\n\n1 = Intern\n\n2 = Extern\n\n-1 = NotAvailable",
        "format": "int32",
        "x-enumNames": [
          "Assigned",
          "Intern",
          "Extern",
          "NotAvailable"
        ]
      },
      "FPH.SpedV.API.Enums.KontorTrailerType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = StandardTrailer\n\n1 = DoubleTrailer\n\n2 = BDoubleTrailer\n\n3 = TripleTrailer\n\n4 = ShortTrailer\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "StandardTrailer",
          "DoubleTrailer",
          "BDoubleTrailer",
          "TripleTrailer",
          "ShortTrailer",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Enums.MaintenanceKind": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = Engine\n\n1 = OszilationDamper\n\n2 = Stabilizer\n\n3 = StoneChip\n\n4 = Transmission\n\n5 = Wishbone\n\n6 = BrakePads\n\n7 = BrakeDiscs\n\n8 = EngineMaintenance\n\n9 = TireChange\n\n10 = MainCheck\n\n11 = SafetyCheck\n\n12 = SaddlePlate\n\n13 = AirPressureUnit\n\n14 = Alternator\n\n15 = BrakeVentil\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "Engine",
          "OszilationDamper",
          "Stabilizer",
          "StoneChip",
          "Transmission",
          "Wishbone",
          "BrakePads",
          "BrakeDiscs",
          "EngineMaintenance",
          "TireChange",
          "MainCheck",
          "SafetyCheck",
          "SaddlePlate",
          "AirPressureUnit",
          "Alternator",
          "BrakeVentil",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Enums.MaintenanceState": {
        "enum": [
          0,
          11,
          12,
          13,
          21,
          22,
          91,
          92,
          93,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = Enqueued\n\n11 = InDrive\n\n12 = NotInOwnedBranch\n\n13 = OtherMaintenanceActive\n\n21 = MissingSpareParts\n\n22 = NotEnoughMaintenancePlaces\n\n91 = Processing\n\n92 = ProcessingButDelayed\n\n93 = Finished\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "Enqueued",
          "InDrive",
          "NotInOwnedBranch",
          "OtherMaintenanceActive",
          "MissingSpareParts",
          "NotEnoughMaintenancePlaces",
          "Processing",
          "ProcessingButDelayed",
          "Finished",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Enums.OMSITaskState": {
        "enum": [
          0,
          1,
          2,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = InDrive\n\n1 = Finished\n\n2 = Cancelled\n\n-1 = NotAvaliable",
        "format": "int32",
        "x-enumNames": [
          "InDrive",
          "Finished",
          "Cancelled",
          "NotAvaliable"
        ]
      },
      "FPH.SpedV.API.Enums.ScreenshotState": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "\n\n0 = None\n\n1 = Uploaded\n\n2 = Processed\n\n3 = Rejected\n\n4 = TaskSettled",
        "format": "int32",
        "x-enumNames": [
          "None",
          "Uploaded",
          "Processed",
          "Rejected",
          "TaskSettled"
        ]
      },
      "FPH.SpedV.API.Enums.SpedTargetKontorHandling": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\n0 = AllTasks\n\n1 = OnlyKontorTasks\n\n2 = NoKontorTasks",
        "format": "int32",
        "x-enumNames": [
          "AllTasks",
          "OnlyKontorTasks",
          "NoKontorTasks"
        ]
      },
      "FPH.SpedV.API.Enums.SpedTargetOMSIHandling": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\n0 = AllTasks\n\n1 = OnlyOMSITasks\n\n2 = NoOMSITasks",
        "format": "int32",
        "x-enumNames": [
          "AllTasks",
          "OnlyOMSITasks",
          "NoOMSITasks"
        ]
      },
      "FPH.SpedV.API.Enums.SpedTargetType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\n0 = Value\n\n1 = Distance\n\n2 = WeightDistance",
        "format": "int32",
        "x-enumNames": [
          "Value",
          "Distance",
          "WeightDistance"
        ]
      },
      "FPH.SpedV.API.Enums.SpeditionChangeEntryType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = TaskDeducted\n\n1 = TaskRejected\n\n2 = RankChanged\n\n3 = RankDeleted\n\n4 = UserRankChanged\n\n5 = UserDismissed\n\n6 = SpeditionSettingChanged\n\n7 = ApplicationTextChanged\n\n8 = ApplicationAcknowledged\n\n9 = ApplicationRejected\n\n10 = BranchBought\n\n11 = BranchExpandedTruckParkplace\n\n12 = BranchShrinkedTruckParkplace\n\n13 = BranchDeleted\n\n14 = TruckBought\n\n15 = TruckSold\n\n16 = TruckLicensePlateChanged\n\n17 = BoniAdded\n\n18 = BoniDeleted\n\n19 = RankAddedPermission\n\n20 = RankDeletedPermission\n\n21 = BranchExpandedTrailerParkplace\n\n22 = BranchShrinkedTrailerParkplace\n\n23 = BranchExpandedMaintenancePlace\n\n24 = BranchShrinkedMaintenancePlace\n\n25 = TruckTransfered\n\n26 = TruckMaintenancePlanned\n\n27 = TruckMaintenanceAborted\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "TaskDeducted",
          "TaskRejected",
          "RankChanged",
          "RankDeleted",
          "UserRankChanged",
          "UserDismissed",
          "SpeditionSettingChanged",
          "ApplicationTextChanged",
          "ApplicationAcknowledged",
          "ApplicationRejected",
          "BranchBought",
          "BranchExpandedTruckParkplace",
          "BranchShrinkedTruckParkplace",
          "BranchDeleted",
          "TruckBought",
          "TruckSold",
          "TruckLicensePlateChanged",
          "BoniAdded",
          "BoniDeleted",
          "RankAddedPermission",
          "RankDeletedPermission",
          "BranchExpandedTrailerParkplace",
          "BranchShrinkedTrailerParkplace",
          "BranchExpandedMaintenancePlace",
          "BranchShrinkedMaintenancePlace",
          "TruckTransfered",
          "TruckMaintenancePlanned",
          "TruckMaintenanceAborted",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Enums.SpeditionType": {
        "enum": [
          0,
          1,
          2,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = NonCompeting\n\n1 = LightRealism\n\n2 = RealEco\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "NonCompeting",
          "LightRealism",
          "RealEco",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Enums.UserChangeEntryType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = ChangedName\n\n1 = JoinedSpedition\n\n2 = DismissedBySpedition\n\n3 = Quitted\n\n4 = ChangedProfileData\n\n5 = FoundedSpedition\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "ChangedName",
          "JoinedSpedition",
          "DismissedBySpedition",
          "Quitted",
          "ChangedProfileData",
          "FoundedSpedition",
          "NotSet"
        ]
      },
      "FPH.SpedV.API.Objects.ChatSystem.Chat": {
        "required": [
          "id",
          "initiator",
          "lastMessageString",
          "lastMessageTimestamp",
          "participants",
          "participantString",
          "startTime",
          "subject"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "initiator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "lastMessageTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastMessageString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.ChatParticipant"
            },
            "nullable": true
          },
          "participantString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.ChatSystem.ChatMessage": {
        "required": [
          "answerTo",
          "id",
          "isDeleted",
          "message",
          "sendDate",
          "sender"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "sender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "sendDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "answerTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.ChatSystem.ChatMessage"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isDeleted": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.ChatSystem.ChatParticipant": {
        "required": [
          "hasArchived",
          "isAdmin",
          "lastView",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true
          },
          "hasArchived": {
            "type": "boolean"
          },
          "lastView": {
            "type": "string",
            "format": "date-time"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.Freight": {
        "required": [
          "enabled",
          "id",
          "isSpecialFreight",
          "name",
          "prizeCoeffizient",
          "sinkAllowedCompanies",
          "sourceAllowedCompanies"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prizeCoeffizient": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialFreight": {
            "type": "boolean",
            "readOnly": true
          },
          "sourceAllowedCompanies": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCategory"
            },
            "nullable": true,
            "readOnly": true
          },
          "sinkAllowedCompanies": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCategory"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.Job": {
        "required": [
          "acceptedBy",
          "comment",
          "completeScheduled",
          "destination",
          "distance",
          "expirationDate",
          "freight",
          "id",
          "isRealEco",
          "jobParts",
          "source",
          "spedition",
          "state",
          "value",
          "visDistance",
          "visValue",
          "visWeight",
          "weight"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "destination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visWeight": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "freight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Freight"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "acceptedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "visValue": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "jobParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPartLoaded"
            },
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.JobOfferState"
              }
            ],
            "description": "\n\n0 = WaitingSpedition\n\n1 = WaitingDrive\n\n2 = InDrive\n\n3 = Finished\n\n-1 = NotAvaliable",
            "readOnly": true,
            "x-enumNames": [
              "WaitingSpedition",
              "WaitingDrive",
              "InDrive",
              "Finished",
              "NotAvaliable"
            ]
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "distance": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visDistance": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isRealEco": {
            "type": "boolean",
            "readOnly": true
          },
          "completeScheduled": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.JobOffer": {
        "required": [
          "destination",
          "distance",
          "expirationDate",
          "freight",
          "id",
          "isRealEco",
          "payingSpedition",
          "source",
          "sparePartsForBranchID",
          "value",
          "visDistance",
          "visValue",
          "visWeight",
          "weight"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "destination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "freight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobOfferFreight"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "payingSpedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "sparePartsForBranchID": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "distance": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visDistance": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "visWeight": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "visValue": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isRealEco": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.JobOfferFreight": {
        "required": [
          "id",
          "isSpecialFreight",
          "name",
          "prizeCoeffizient"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prizeCoeffizient": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "isSpecialFreight": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.JobPart": {
        "required": [
          "currentConvoyInfo",
          "destination",
          "distance",
          "driver",
          "expirationDate",
          "id",
          "isReady",
          "isRealEco",
          "offerDisplay",
          "offerUser",
          "publicState",
          "source",
          "spedition",
          "state",
          "trailer",
          "value",
          "visDistance",
          "visValue",
          "visWeight",
          "weight"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "destination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "driver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "offerUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "offerDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visValue": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.JobPartState"
              }
            ],
            "description": "\n\n0 = WaitingDriver\n\n1 = WaitingPrecondition\n\n2 = WaitingDrive\n\n3 = InDrive\n\n4 = Finished\n\n-1 = NotAvaliable",
            "readOnly": true,
            "x-enumNames": [
              "WaitingDriver",
              "WaitingPrecondition",
              "WaitingDrive",
              "InDrive",
              "Finished",
              "NotAvaliable"
            ]
          },
          "isReady": {
            "type": "boolean",
            "readOnly": true
          },
          "trailer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.LightTrailer"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visWeight": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "publicState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.JobPublicState"
              }
            ],
            "description": "\n\n0 = Assigned\n\n1 = Intern\n\n2 = Extern\n\n-1 = NotAvailable",
            "readOnly": true,
            "x-enumNames": [
              "Assigned",
              "Intern",
              "Extern",
              "NotAvailable"
            ]
          },
          "distance": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visDistance": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "currentConvoyInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.ConvoyInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "isRealEco": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.JobPartLoaded": {
        "required": [
          "jobPart",
          "weight"
        ],
        "type": "object",
        "properties": {
          "jobPart": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.LightTrailer": {
        "required": [
          "assignedScheduler",
          "category",
          "comment",
          "defaultDriver",
          "game",
          "id",
          "km",
          "licensePlate",
          "maxWeight",
          "skin",
          "spedition",
          "trailerAvailable",
          "trailerHasNeededMaintenance",
          "trailerType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "game": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
              }
            ],
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          "licensePlate": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "skin": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "trailerType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.KontorTrailerType"
              }
            ],
            "description": "\n\n0 = StandardTrailer\n\n1 = DoubleTrailer\n\n2 = BDoubleTrailer\n\n3 = TripleTrailer\n\n4 = ShortTrailer\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "StandardTrailer",
              "DoubleTrailer",
              "BDoubleTrailer",
              "TripleTrailer",
              "ShortTrailer",
              "NotSet"
            ]
          },
          "defaultDriver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "assignedScheduler": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "trailerAvailable": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "trailerHasNeededMaintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "km": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maxWeight": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.NeededTrailerMaintenance": {
        "required": [
          "currentKM",
          "externalCost",
          "externalTime",
          "game",
          "internalCost",
          "internalTime",
          "isNeeded",
          "isOverdue",
          "kind",
          "kmSinceLast",
          "neededImmediately",
          "neededTillDate",
          "neededTillKM",
          "repeatKM",
          "repeatSpan",
          "repeatTimeSpan",
          "spanSinceLast",
          "timeSinceLast",
          "visibleRemaining"
        ],
        "type": "object",
        "properties": {
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.MaintenanceKind"
              }
            ],
            "description": "\n\n0 = Engine\n\n1 = OszilationDamper\n\n2 = Stabilizer\n\n3 = StoneChip\n\n4 = Transmission\n\n5 = Wishbone\n\n6 = BrakePads\n\n7 = BrakeDiscs\n\n8 = EngineMaintenance\n\n9 = TireChange\n\n10 = MainCheck\n\n11 = SafetyCheck\n\n12 = SaddlePlate\n\n13 = AirPressureUnit\n\n14 = Alternator\n\n15 = BrakeVentil\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "Engine",
              "OszilationDamper",
              "Stabilizer",
              "StoneChip",
              "Transmission",
              "Wishbone",
              "BrakePads",
              "BrakeDiscs",
              "EngineMaintenance",
              "TireChange",
              "MainCheck",
              "SafetyCheck",
              "SaddlePlate",
              "AirPressureUnit",
              "Alternator",
              "BrakeVentil",
              "NotSet"
            ]
          },
          "externalTime": {
            "type": "string",
            "format": "time-span",
            "readOnly": true
          },
          "internalTime": {
            "type": "string",
            "format": "time-span",
            "readOnly": true
          },
          "externalCost": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "internalCost": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "neededImmediately": {
            "type": "boolean",
            "readOnly": true
          },
          "neededTillKM": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "neededTillDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "repeatTimeSpan": {
            "type": "string",
            "format": "time-span",
            "nullable": true,
            "readOnly": true
          },
          "repeatKM": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "currentKM": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "game": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
              }
            ],
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          "kmSinceLast": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timeSinceLast": {
            "type": "string",
            "format": "time-span",
            "nullable": true,
            "readOnly": true
          },
          "visibleRemaining": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "repeatSpan": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "spanSinceLast": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "isNeeded": {
            "type": "boolean",
            "readOnly": true
          },
          "isOverdue": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.Trailer": {
        "required": [
          "actLocation",
          "assignedScheduler",
          "category",
          "comment",
          "defaultDriver",
          "game",
          "hasBrakeVentilDefect",
          "hasOszilationDamperDefect",
          "id",
          "isPlanned",
          "km",
          "lastLocation",
          "licensePlate",
          "maxWeight",
          "neededMaintenanceJobs",
          "nextBrakeDiscChange",
          "nextBrakePadsChange",
          "nextMainInspection",
          "nextSafetyCheck",
          "nextTireChange",
          "skin",
          "spedition",
          "trailerAvailable",
          "trailerType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "lastLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "actLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "game": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
              }
            ],
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          "licensePlate": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "skin": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "trailerType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.KontorTrailerType"
              }
            ],
            "description": "\n\n0 = StandardTrailer\n\n1 = DoubleTrailer\n\n2 = BDoubleTrailer\n\n3 = TripleTrailer\n\n4 = ShortTrailer\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "StandardTrailer",
              "DoubleTrailer",
              "BDoubleTrailer",
              "TripleTrailer",
              "ShortTrailer",
              "NotSet"
            ]
          },
          "defaultDriver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "assignedScheduler": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "trailerAvailable": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "nextMainInspection": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "nextSafetyCheck": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "nextTireChange": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nextBrakePadsChange": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nextBrakeDiscChange": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasOszilationDamperDefect": {
            "type": "boolean",
            "readOnly": true
          },
          "hasBrakeVentilDefect": {
            "type": "boolean",
            "readOnly": true
          },
          "neededMaintenanceJobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.NeededTrailerMaintenance"
            },
            "nullable": true,
            "readOnly": true
          },
          "km": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maxWeight": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isPlanned": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Kontor.TrailerMaintenance": {
        "required": [
          "endDate",
          "id",
          "initiatedByUser",
          "maintenanceKind",
          "ownedBranch",
          "queueDate",
          "sparePartWarningSent",
          "startDate",
          "state",
          "trailer"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "trailer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.Trailer"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ownedBranch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.OwnedBranch"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "initiatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "maintenanceKind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.MaintenanceKind"
              }
            ],
            "description": "\n\n0 = Engine\n\n1 = OszilationDamper\n\n2 = Stabilizer\n\n3 = StoneChip\n\n4 = Transmission\n\n5 = Wishbone\n\n6 = BrakePads\n\n7 = BrakeDiscs\n\n8 = EngineMaintenance\n\n9 = TireChange\n\n10 = MainCheck\n\n11 = SafetyCheck\n\n12 = SaddlePlate\n\n13 = AirPressureUnit\n\n14 = Alternator\n\n15 = BrakeVentil\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "Engine",
              "OszilationDamper",
              "Stabilizer",
              "StoneChip",
              "Transmission",
              "Wishbone",
              "BrakePads",
              "BrakeDiscs",
              "EngineMaintenance",
              "TireChange",
              "MainCheck",
              "SafetyCheck",
              "SaddlePlate",
              "AirPressureUnit",
              "Alternator",
              "BrakeVentil",
              "NotSet"
            ]
          },
          "sparePartWarningSent": {
            "type": "boolean",
            "readOnly": true
          },
          "queueDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.MaintenanceState"
              }
            ],
            "description": "\n\n0 = Enqueued\n\n11 = InDrive\n\n12 = NotInOwnedBranch\n\n13 = OtherMaintenanceActive\n\n21 = MissingSpareParts\n\n22 = NotEnoughMaintenancePlaces\n\n91 = Processing\n\n92 = ProcessingButDelayed\n\n93 = Finished\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "Enqueued",
              "InDrive",
              "NotInOwnedBranch",
              "OtherMaintenanceActive",
              "MissingSpareParts",
              "NotEnoughMaintenancePlaces",
              "Processing",
              "ProcessingButDelayed",
              "Finished",
              "NotSet"
            ]
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Live.ConvoyInfo": {
        "required": [
          "bot_Message",
          "bot_ProgressCur",
          "bot_ProgressMax",
          "bot_Task",
          "discord_UID",
          "omsI_Circ",
          "omsI_Delay",
          "omsI_Dest",
          "omsI_Line",
          "omsI_Map",
          "omsI_Next",
          "scS_ActFuel",
          "scS_CruiseControl",
          "scS_CurrentDistance",
          "scS_DamageFreight",
          "scS_DamageTrailer",
          "scS_DamageTruck",
          "scS_EstArrival",
          "scS_Game",
          "scS_MaxFuel",
          "scS_MPServer",
          "scS_NearBy",
          "scS_Odometer",
          "scS_SCCFollowUser",
          "scS_SpeedLimit",
          "scS_TotalDistance",
          "scS_TruckManufactor",
          "scS_TruckModel",
          "scS_TruckPlate",
          "scS_Velocity",
          "scS_XCoord",
          "scS_ZCoord",
          "showAsOffline",
          "simRail_Dispatch_Station",
          "simRail_Latitude",
          "simRail_Longitude",
          "simRail_Server",
          "simRail_Train_Destination",
          "simRail_Train_NextStop",
          "simRail_Train_Number",
          "simRail_Train_Velocity",
          "spedVTeamRoleName",
          "spotify_Album",
          "spotify_Artist",
          "spotify_CoverURL",
          "spotify_PlayPosition",
          "spotify_Title",
          "spotify_TitleURI",
          "state",
          "steam_ID",
          "steam_Pic",
          "stW_Anlage",
          "stW_CurDelay",
          "stW_CurTrains",
          "stW_TotalTrains",
          "task_Dest",
          "task_DestCompany",
          "task_Freight",
          "task_Map",
          "task_Start",
          "task_StartCompany",
          "task_Weight",
          "tmpStaffRoleName",
          "twitch_URL",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "spedVTeamRoleName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tmpStaffRoleName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "showAsOffline": {
            "type": "boolean"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.ConvoyInfoDriveState"
              }
            ],
            "description": "\n\n0 = NoGame\n\n1 = Paused\n\n2 = InDrive\n\n3 = OMSI\n\n4 = StellwerkSim\n\n5 = Bot\n\n6 = SimRail_Train\n\n7 = SimRail_Dispatch",
            "x-enumNames": [
              "NoGame",
              "Paused",
              "InDrive",
              "OMSI",
              "StellwerkSim",
              "Bot",
              "SimRail_Train",
              "SimRail_Dispatch"
            ]
          },
          "steam_ID": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "steam_Pic": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "twitch_URL": {
            "type": "string",
            "nullable": true
          },
          "discord_UID": {
            "type": "integer",
            "format": "int64"
          },
          "bot_Message": {
            "type": "string",
            "nullable": true
          },
          "bot_Task": {
            "type": "string",
            "nullable": true
          },
          "bot_ProgressMax": {
            "type": "integer",
            "format": "int32"
          },
          "bot_ProgressCur": {
            "type": "integer",
            "format": "int32"
          },
          "scS_Game": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
              }
            ],
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          "scS_TotalDistance": {
            "type": "integer",
            "format": "int32"
          },
          "scS_CurrentDistance": {
            "type": "integer",
            "format": "int32"
          },
          "scS_Odometer": {
            "type": "number",
            "format": "double"
          },
          "scS_MaxFuel": {
            "type": "integer",
            "format": "int32"
          },
          "scS_ActFuel": {
            "type": "integer",
            "format": "int32"
          },
          "scS_Velocity": {
            "type": "number",
            "format": "double"
          },
          "scS_SpeedLimit": {
            "type": "integer",
            "format": "int32"
          },
          "scS_CruiseControl": {
            "type": "integer",
            "format": "int32"
          },
          "scS_MPServer": {
            "type": "string",
            "nullable": true
          },
          "scS_EstArrival": {
            "type": "string",
            "format": "date-time"
          },
          "scS_DamageTruck": {
            "type": "number",
            "format": "double"
          },
          "scS_DamageTrailer": {
            "type": "number",
            "format": "double"
          },
          "scS_DamageFreight": {
            "type": "number",
            "format": "double"
          },
          "scS_TruckManufactor": {
            "type": "string",
            "nullable": true
          },
          "scS_TruckModel": {
            "type": "string",
            "nullable": true
          },
          "scS_TruckPlate": {
            "type": "string",
            "nullable": true
          },
          "scS_XCoord": {
            "type": "number",
            "format": "double"
          },
          "scS_ZCoord": {
            "type": "number",
            "format": "double"
          },
          "scS_NearBy": {
            "type": "string",
            "nullable": true
          },
          "scS_SCCFollowUser": {
            "type": "string",
            "nullable": true
          },
          "task_Weight": {
            "type": "string",
            "nullable": true
          },
          "task_Freight": {
            "type": "string",
            "nullable": true
          },
          "task_Start": {
            "type": "string",
            "nullable": true
          },
          "task_Dest": {
            "type": "string",
            "nullable": true
          },
          "task_StartCompany": {
            "type": "string",
            "nullable": true
          },
          "task_DestCompany": {
            "type": "string",
            "nullable": true
          },
          "task_Map": {
            "type": "string",
            "nullable": true
          },
          "omsI_Line": {
            "type": "string",
            "nullable": true
          },
          "omsI_Circ": {
            "type": "string",
            "nullable": true
          },
          "omsI_Dest": {
            "type": "string",
            "nullable": true
          },
          "omsI_Next": {
            "type": "string",
            "nullable": true
          },
          "omsI_Delay": {
            "type": "string",
            "nullable": true
          },
          "omsI_Map": {
            "type": "string",
            "nullable": true
          },
          "stW_Anlage": {
            "type": "string",
            "nullable": true
          },
          "stW_CurTrains": {
            "type": "integer",
            "format": "int32"
          },
          "stW_TotalTrains": {
            "type": "integer",
            "format": "int32"
          },
          "stW_CurDelay": {
            "type": "integer",
            "format": "int32"
          },
          "spotify_Title": {
            "type": "string",
            "nullable": true
          },
          "spotify_Artist": {
            "type": "string",
            "nullable": true
          },
          "spotify_Album": {
            "type": "string",
            "nullable": true
          },
          "spotify_CoverURL": {
            "type": "string",
            "nullable": true
          },
          "spotify_PlayPosition": {
            "type": "integer",
            "format": "int32"
          },
          "spotify_TitleURI": {
            "type": "string",
            "nullable": true
          },
          "simRail_Server": {
            "type": "string",
            "nullable": true
          },
          "simRail_Latitude": {
            "type": "number",
            "format": "double"
          },
          "simRail_Longitude": {
            "type": "number",
            "format": "double"
          },
          "simRail_Train_Number": {
            "type": "string",
            "nullable": true
          },
          "simRail_Train_Velocity": {
            "type": "number",
            "format": "double"
          },
          "simRail_Train_NextStop": {
            "type": "string",
            "nullable": true
          },
          "simRail_Train_Destination": {
            "type": "string",
            "nullable": true
          },
          "simRail_Dispatch_Station": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Live.MyPlaceStructure": {
        "required": [
          "spedEURDiffLast",
          "spedEURDiffNext",
          "spedEURPlace",
          "spedExternalEURDiffLast",
          "spedExternalEURDiffNext",
          "spedExternalEURPlace",
          "spedKMDiffLast",
          "spedKMDiffNext",
          "spedKMPlace",
          "spedWeeklyEURDiffLast",
          "spedWeeklyEURDiffNext",
          "spedWeeklyEURPlace",
          "spedWeeklyExternalEURDiffLast",
          "spedWeeklyExternalEURDiffNext",
          "spedWeeklyExternalEURPlace",
          "spedWeeklyKMDiffLast",
          "spedWeeklyKMDiffNext",
          "spedWeeklyKMPlace",
          "spedWeeklyKontorEURDiffLast",
          "spedWeeklyKontorEURDiffNext",
          "spedWeeklyKontorEURPlace",
          "userEURDiffLast",
          "userEURDiffNext",
          "userEURPlace",
          "userKMDiffLast",
          "userKMDiffNext",
          "userKMPlace"
        ],
        "type": "object",
        "properties": {
          "spedEURPlace": {
            "type": "integer",
            "format": "int32"
          },
          "spedEURDiffNext": {
            "type": "number",
            "format": "double"
          },
          "spedEURDiffLast": {
            "type": "number",
            "format": "double"
          },
          "spedKMPlace": {
            "type": "integer",
            "format": "int32"
          },
          "spedKMDiffNext": {
            "type": "number",
            "format": "double"
          },
          "spedKMDiffLast": {
            "type": "number",
            "format": "double"
          },
          "spedWeeklyEURPlace": {
            "type": "integer",
            "format": "int32"
          },
          "spedWeeklyEURDiffNext": {
            "type": "number",
            "format": "double"
          },
          "spedWeeklyEURDiffLast": {
            "type": "number",
            "format": "double"
          },
          "spedWeeklyKontorEURPlace": {
            "type": "integer",
            "format": "int32"
          },
          "spedWeeklyKontorEURDiffNext": {
            "type": "number",
            "format": "double"
          },
          "spedWeeklyKontorEURDiffLast": {
            "type": "number",
            "format": "double"
          },
          "spedWeeklyExternalEURPlace": {
            "type": "integer",
            "format": "int32"
          },
          "spedWeeklyExternalEURDiffNext": {
            "type": "number",
            "format": "double"
          },
          "spedWeeklyExternalEURDiffLast": {
            "type": "number",
            "format": "double"
          },
          "spedWeeklyKMPlace": {
            "type": "integer",
            "format": "int32"
          },
          "spedWeeklyKMDiffNext": {
            "type": "number",
            "format": "double"
          },
          "spedWeeklyKMDiffLast": {
            "type": "number",
            "format": "double"
          },
          "spedExternalEURPlace": {
            "type": "integer",
            "format": "int32"
          },
          "spedExternalEURDiffNext": {
            "type": "number",
            "format": "double"
          },
          "spedExternalEURDiffLast": {
            "type": "number",
            "format": "double"
          },
          "userEURPlace": {
            "type": "integer",
            "format": "int32"
          },
          "userEURDiffNext": {
            "type": "number",
            "format": "double"
          },
          "userEURDiffLast": {
            "type": "number",
            "format": "double"
          },
          "userKMPlace": {
            "type": "integer",
            "format": "int32"
          },
          "userKMDiffNext": {
            "type": "number",
            "format": "double"
          },
          "userKMDiffLast": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Live.SGMDistance": {
        "required": [
          "destcity",
          "destcompany",
          "distance",
          "ferryPrice",
          "ferryTime",
          "startcity",
          "startcompany"
        ],
        "type": "object",
        "properties": {
          "startcity": {
            "type": "string",
            "nullable": true
          },
          "startcompany": {
            "type": "string",
            "nullable": true
          },
          "destcity": {
            "type": "string",
            "nullable": true
          },
          "destcompany": {
            "type": "string",
            "nullable": true
          },
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "ferryTime": {
            "type": "integer",
            "format": "int32"
          },
          "ferryPrice": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Live.SystemStatistic": {
        "required": [
          "activeSpedLastMonth",
          "activeUserLastMonth",
          "actRAM",
          "destcitys",
          "exchangeRate",
          "formatActRAM",
          "freights",
          "lastrefresh",
          "lastRestart",
          "loadcitys",
          "nextTaskID",
          "onlineUser",
          "places",
          "taskLastDay",
          "usedmaps",
          "weeklyStatsEUR",
          "weeklyStatsExternalEUR",
          "weeklyStatsKM",
          "weeklyStatsKontorEUR"
        ],
        "type": "object",
        "properties": {
          "lastRestart": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "lastrefresh": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "loadcitys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatisticEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "destcitys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatisticEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "freights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatisticEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "usedmaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatisticEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "weeklyStatsEUR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatisticEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "weeklyStatsKontorEUR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatisticEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "weeklyStatsExternalEUR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatisticEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "weeklyStatsKM": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.SystemStatisticEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "places": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.MyPlaceStructure"
              }
            ],
            "readOnly": true
          },
          "onlineUser": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "activeSpedLastMonth": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "activeUserLastMonth": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nextTaskID": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "actRAM": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "formatActRAM": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "taskLastDay": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "exchangeRate": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Live.SystemStatisticEntry": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.City": {
        "required": [
          "country",
          "id",
          "inGameNameDictionary",
          "inGameNames",
          "name",
          "realWorld_Lati",
          "realWorld_Long",
          "visibleName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "visibleName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "inGameNameDictionary": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Country"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "realWorld_Lati": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "realWorld_Long": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "inGameNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.Company": {
        "required": [
          "category",
          "id",
          "inGameName",
          "visibleName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibleName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "inGameName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCategory"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.CompanyCategory": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.CompanyCity": {
        "required": [
          "city",
          "company",
          "disabledOnMaps",
          "id",
          "isDeleted",
          "map",
          "supportsDouble",
          "supportsTriple",
          "x_Coord",
          "z_Coord"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "city": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.City"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "map": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Map"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "supportsDouble": {
            "type": "boolean",
            "readOnly": true
          },
          "supportsTriple": {
            "type": "boolean",
            "readOnly": true
          },
          "isDeleted": {
            "type": "boolean",
            "readOnly": true
          },
          "x_Coord": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "z_Coord": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "disabledOnMaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Map"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.Country": {
        "required": [
          "currency",
          "id",
          "mwst",
          "name",
          "shortName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shortName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mwst": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.Ferry": {
        "required": [
          "amount",
          "company",
          "currency",
          "destination",
          "distance",
          "id",
          "start"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "start": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Harbor"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "destination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Harbor"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "company": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "distance": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.Freight": {
        "required": [
          "game",
          "id",
          "kontorMultiplayer",
          "name",
          "sgmtsid",
          "tsid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tsid": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "sgmtsid": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "game": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "kontorMultiplayer": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.GasStation": {
        "required": [
          "currency",
          "id",
          "lastReported",
          "literPrize",
          "reportedBy",
          "x",
          "z"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "literPrize": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "lastReported": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "x": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "z": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "reportedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.Harbor": {
        "required": [
          "id",
          "name",
          "x",
          "z"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "x": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "z": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.Map": {
        "required": [
          "game",
          "id",
          "isImported",
          "isOriginal",
          "name",
          "needs",
          "shortName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shortName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "game": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isImported": {
            "type": "boolean",
            "readOnly": true
          },
          "isOriginal": {
            "type": "boolean",
            "readOnly": true
          },
          "needs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Map"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Maps.RealRoute": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "type": "string",
            "nullable": true
          },
          "cachedDate": {
            "type": "string",
            "format": "date-time"
          },
          "distanceKM": {
            "type": "integer",
            "format": "int32"
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "nullable": true
          },
          "viaFerryID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Money.BankAccount": {
        "required": [
          "currency",
          "description",
          "iban",
          "ibanFormated",
          "id",
          "money",
          "ownerSpedition",
          "ownerUser",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "iban": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ibanFormated": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.BankAccountType"
              }
            ],
            "description": "\n\n0 = System\n\n1 = Spedition\n\n2 = User\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "System",
              "Spedition",
              "User",
              "NotSet"
            ]
          },
          "ownerSpedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ownerUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "money": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Money.LiteBankAccount": {
        "required": [
          "currency",
          "description",
          "iban",
          "ibanFormated",
          "id",
          "ownerSpedition",
          "ownerUser",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "iban": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ibanFormated": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.BankAccountType"
              }
            ],
            "description": "\n\n0 = System\n\n1 = Spedition\n\n2 = User\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "System",
              "Spedition",
              "User",
              "NotSet"
            ]
          },
          "ownerSpedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ownerUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Money.MoneyEURData": {
        "required": [
          "bilance",
          "currency",
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "bilance": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Money.MoneyTransfer": {
        "required": [
          "cause",
          "causeGroup",
          "dateTime",
          "id",
          "isNegative",
          "money",
          "receiver",
          "receiverAccount",
          "responsible",
          "responsibleUser",
          "sender",
          "senderAccount",
          "time",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "senderAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "sender": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "receiverAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "receiver": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "cause": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "causeGroup": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "money": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "responsibleUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "responsible": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "time": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isNegative": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Money.MoneyTransferDay": {
        "required": [
          "bilance",
          "currency",
          "day",
          "income",
          "outgo"
        ],
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "income": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "outgo": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "bilance": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.BusStop": {
        "required": [
          "anzeige1",
          "anzeige2",
          "ibiS1",
          "ibiS2",
          "id",
          "internalName",
          "internalNames"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "internalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "internalNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "anzeige1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "anzeige2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ibiS1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ibiS2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.Destination": {
        "required": [
          "big_Bottom",
          "big_Top",
          "ibiS1",
          "ibiS2",
          "id",
          "isAllExit",
          "name",
          "omsI_ID",
          "small"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "omsI_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isAllExit": {
            "type": "boolean",
            "readOnly": true
          },
          "big_Top": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "big_Bottom": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "small": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ibiS1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ibiS2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.DrivenTrip": {
        "required": [
          "baseDate",
          "currency",
          "endDate",
          "endKM",
          "followupBoni",
          "id",
          "map",
          "neededTime",
          "realtimeBoni",
          "registeredBusStops",
          "resultValue",
          "spedition",
          "startDate",
          "startKM",
          "state",
          "tax",
          "tourTrip",
          "user",
          "value",
          "visDistance",
          "visibleID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibleID": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "neededTime": {
            "type": "string",
            "format": "time-span",
            "nullable": true,
            "readOnly": true
          },
          "baseDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "tourTrip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.TourTrip"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "map": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Map"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "startKM": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "endKM": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "visDistance": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "realtimeBoni": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "followupBoni": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "tax": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "resultValue": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.OMSITaskState"
              }
            ],
            "description": "\n\n0 = InDrive\n\n1 = Finished\n\n2 = Cancelled\n\n-1 = NotAvaliable",
            "readOnly": true,
            "x-enumNames": [
              "InDrive",
              "Finished",
              "Cancelled",
              "NotAvaliable"
            ]
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "registeredBusStops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.DrivenTripBusStop"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.DrivenTripBusStop": {
        "required": [
          "busStop",
          "delayArival",
          "delayDeparture",
          "id",
          "odometer",
          "passengers"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "busStop": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.BusStop"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "odometer": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "delayArival": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "delayDeparture": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "passengers": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.Map": {
        "required": [
          "comment",
          "endDate",
          "id",
          "isActive",
          "name",
          "startDate",
          "trafficAuthority"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "trafficAuthority": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.StationLink": {
        "required": [
          "destBusStop",
          "destCubeID",
          "id",
          "length",
          "map",
          "source",
          "startBusStop",
          "startCubeID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "map": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Map"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "startCubeID": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "destCubeID": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "startBusStop": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.BusStop"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "destBusStop": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.BusStop"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "source": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.Tour": {
        "required": [
          "friday",
          "holidayDay",
          "holidays",
          "id",
          "isUserAllowed",
          "line",
          "monday",
          "saturday",
          "school",
          "sunday",
          "thursday",
          "tour",
          "tuesday",
          "wednesday"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "line": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tour": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isUserAllowed": {
            "type": "boolean",
            "readOnly": true
          },
          "monday": {
            "type": "boolean",
            "readOnly": true
          },
          "tuesday": {
            "type": "boolean",
            "readOnly": true
          },
          "wednesday": {
            "type": "boolean",
            "readOnly": true
          },
          "thursday": {
            "type": "boolean",
            "readOnly": true
          },
          "friday": {
            "type": "boolean",
            "readOnly": true
          },
          "saturday": {
            "type": "boolean",
            "readOnly": true
          },
          "sunday": {
            "type": "boolean",
            "readOnly": true
          },
          "holidayDay": {
            "type": "boolean",
            "readOnly": true
          },
          "school": {
            "type": "boolean",
            "readOnly": true
          },
          "holidays": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.TourTrip": {
        "required": [
          "baseDate",
          "busStops",
          "id",
          "profile",
          "startTime",
          "tour",
          "trip"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "tour": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Tour"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "trip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Trip"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "busStops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.TripBusStop"
            },
            "nullable": true,
            "readOnly": true
          },
          "profile": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "baseDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.Trip": {
        "required": [
          "circ",
          "dest",
          "id",
          "line",
          "lineStr"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "lineStr": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.Destination"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "line": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "circ": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.OMSI.TripBusStop": {
        "required": [
          "busStop",
          "departure",
          "distanceSinceLast",
          "id",
          "isGoThrough",
          "neededVelocity",
          "time",
          "timeSinceLast"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "busStop": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.OMSI.BusStop"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "time": {
            "type": "string",
            "format": "time-span",
            "readOnly": true
          },
          "timeSinceLast": {
            "type": "string",
            "format": "time-span",
            "readOnly": true
          },
          "departure": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "isGoThrough": {
            "type": "boolean",
            "readOnly": true
          },
          "distanceSinceLast": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "neededVelocity": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.SaveGame.SaveGameColor": {
        "required": [
          "color1",
          "color2",
          "color3",
          "color4",
          "index"
        ],
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "color1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "color2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "color3": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "color4": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.SimRail.SimRailActiveTrainData": {
        "required": [
          "apiTimetableIndex",
          "continuesAs",
          "controlledBySteamID",
          "controlType",
          "currentPositionType",
          "currentTimetableIndex",
          "distanceToNextSignal",
          "endStation",
          "id",
          "lastRealTimetableIndex",
          "latitude",
          "longitude",
          "nextSignal",
          "serverData",
          "signalInFrontSpeed",
          "startStation",
          "timetable",
          "trainLength",
          "trainName",
          "trainNumber",
          "trainNumberInternational",
          "trainWeight",
          "vehicles",
          "velocity"
        ],
        "type": "object",
        "properties": {
          "trainName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "trainNumber": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "trainNumberInternational": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "trainLength": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "trainWeight": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "continuesAs": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "serverData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SimRail.SimRailServerInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "startStation": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "endStation": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "vehicles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "controlType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SimRail.SimRailTrainControlType"
              }
            ],
            "description": "\n\n0 = Ghost\n\n1 = Bot\n\n2 = Player",
            "readOnly": true,
            "x-enumNames": [
              "Ghost",
              "Bot",
              "Player"
            ]
          },
          "controlledBySteamID": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "velocity": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "nextSignal": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "distanceToNextSignal": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "signalInFrontSpeed": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "apiTimetableIndex": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "lastRealTimetableIndex": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "currentPositionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SimRail.SimRailTrainPositionType"
              }
            ],
            "description": "\n\n0 = InStation\n\n1 = BetweenStations\n\n2 = ApproachingStation",
            "readOnly": true,
            "x-enumNames": [
              "InStation",
              "BetweenStations",
              "ApproachingStation"
            ]
          },
          "timetable": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SimRail.SimRailTrainLiveTimetableEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "currentTimetableIndex": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.SimRail.SimRailDispatchStationData": {
        "required": [
          "additionalImage1URL",
          "additionalImage2URL",
          "difficultyLevel",
          "id",
          "latitude",
          "longitude",
          "mainImageURL",
          "name",
          "prefix",
          "server",
          "steamId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "prefix": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "difficultyLevel": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "mainImageURL": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "additionalImage1URL": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "additionalImage2URL": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "server": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SimRail.SimRailServerInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "steamId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.SimRail.SimRailServerInfo": {
        "required": [
          "serverCode",
          "serverName",
          "serverRegion",
          "utcOffset"
        ],
        "type": "object",
        "properties": {
          "serverCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "serverName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "serverRegion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "utcOffset": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.SimRail.SimRailStation": {
        "required": [
          "additionalImage1URL",
          "additionalImage2URL",
          "difficultyLevel",
          "id",
          "latitude",
          "longitude",
          "mainImageURL",
          "name",
          "prefix",
          "stationCategory",
          "supervisedBy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "supervisedBy": {
            "type": "string",
            "nullable": true
          },
          "stationCategory": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "difficultyLevel": {
            "type": "integer",
            "format": "int32"
          },
          "mainImageURL": {
            "type": "string",
            "nullable": true
          },
          "additionalImage1URL": {
            "type": "string",
            "nullable": true
          },
          "additionalImage2URL": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.SimRail.SimRailTrainControlType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\n0 = Ghost\n\n1 = Bot\n\n2 = Player",
        "format": "int32",
        "x-enumNames": [
          "Ghost",
          "Bot",
          "Player"
        ]
      },
      "FPH.SpedV.API.Objects.SimRail.SimRailTrainLiveTimetableEntry": {
        "required": [
          "km",
          "line",
          "maxSpeed",
          "platform",
          "realArrival",
          "realDeparture",
          "scheduledArrival",
          "scheduledDeparture",
          "station",
          "stopType",
          "track"
        ],
        "type": "object",
        "properties": {
          "station": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SimRail.SimRailStation"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "scheduledArrival": {
            "type": "string",
            "format": "time-span",
            "readOnly": true
          },
          "scheduledDeparture": {
            "type": "string",
            "format": "time-span",
            "readOnly": true
          },
          "platform": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "track": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "stopType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "line": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "km": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "maxSpeed": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "realArrival": {
            "type": "string",
            "format": "time-span",
            "nullable": true,
            "readOnly": true
          },
          "realDeparture": {
            "type": "string",
            "format": "time-span",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.SimRail.SimRailTrainPositionType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\n0 = InStation\n\n1 = BetweenStations\n\n2 = ApproachingStation",
        "format": "int32",
        "x-enumNames": [
          "InStation",
          "BetweenStations",
          "ApproachingStation"
        ]
      },
      "FPH.SpedV.API.Objects.Speditions.BoniType": {
        "required": [
          "id",
          "maxValue",
          "minValue",
          "onlyKontor",
          "onlyWithoutDamage",
          "onlyWithoutSpeeding",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minValue": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maxValue": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.BoniTypeType"
              }
            ],
            "description": "\n\n0 = Value\n\n1 = KM\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "Value",
              "KM",
              "NotSet"
            ]
          },
          "onlyKontor": {
            "type": "boolean",
            "readOnly": true
          },
          "onlyWithoutDamage": {
            "type": "boolean",
            "readOnly": true
          },
          "onlyWithoutSpeeding": {
            "type": "boolean",
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.FullSpeditionInfo": {
        "required": [
          "acceptsApplicants",
          "adminAnnounce",
          "applImg",
          "applText",
          "colorCollections",
          "coolDown",
          "discordWebHook",
          "dmgReportFromPercent",
          "expenses",
          "id",
          "isVisible",
          "maxAllowedVelocity",
          "maxAllowedVelocityATS",
          "maxTruckPerUser",
          "minCoolDown",
          "name",
          "oneTimeJoinPasswords",
          "shortName",
          "speditionFounder",
          "speditionType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shortName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "applImg": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "applText": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "adminAnnounce": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "discordWebHook": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "expenses": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maxTruckPerUser": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maxAllowedVelocity": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maxAllowedVelocityATS": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "dmgReportFromPercent": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minCoolDown": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "coolDown": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "speditionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.SpeditionType"
              }
            ],
            "description": "\n\n0 = NonCompeting\n\n1 = LightRealism\n\n2 = RealEco\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "NonCompeting",
              "LightRealism",
              "RealEco",
              "NotSet"
            ]
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "acceptsApplicants": {
            "type": "boolean",
            "readOnly": true
          },
          "oneTimeJoinPasswords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "speditionFounder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "colorCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SaveGame.SaveGameColor"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.LiteRank": {
        "required": [
          "color",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "color": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.NeededTruckMaintenance": {
        "required": [
          "currentKM",
          "externalCost",
          "externalTime",
          "game",
          "internalCost",
          "internalTime",
          "isNeeded",
          "isOverdue",
          "kind",
          "kmSinceLast",
          "neededImmediately",
          "neededTillDate",
          "neededTillKM",
          "repeatKM",
          "repeatSpan",
          "repeatTimeSpan",
          "spanSinceLast",
          "timeSinceLast",
          "visibleRemaining"
        ],
        "type": "object",
        "properties": {
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.MaintenanceKind"
              }
            ],
            "description": "\n\n0 = Engine\n\n1 = OszilationDamper\n\n2 = Stabilizer\n\n3 = StoneChip\n\n4 = Transmission\n\n5 = Wishbone\n\n6 = BrakePads\n\n7 = BrakeDiscs\n\n8 = EngineMaintenance\n\n9 = TireChange\n\n10 = MainCheck\n\n11 = SafetyCheck\n\n12 = SaddlePlate\n\n13 = AirPressureUnit\n\n14 = Alternator\n\n15 = BrakeVentil\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "Engine",
              "OszilationDamper",
              "Stabilizer",
              "StoneChip",
              "Transmission",
              "Wishbone",
              "BrakePads",
              "BrakeDiscs",
              "EngineMaintenance",
              "TireChange",
              "MainCheck",
              "SafetyCheck",
              "SaddlePlate",
              "AirPressureUnit",
              "Alternator",
              "BrakeVentil",
              "NotSet"
            ]
          },
          "externalTime": {
            "type": "string",
            "format": "time-span",
            "readOnly": true
          },
          "internalTime": {
            "type": "string",
            "format": "time-span",
            "readOnly": true
          },
          "externalCost": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "internalCost": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "neededImmediately": {
            "type": "boolean",
            "readOnly": true
          },
          "neededTillKM": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "neededTillDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "repeatTimeSpan": {
            "type": "string",
            "format": "time-span",
            "nullable": true,
            "readOnly": true
          },
          "repeatKM": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "currentKM": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "game": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
              }
            ],
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          "kmSinceLast": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "timeSinceLast": {
            "type": "string",
            "format": "time-span",
            "nullable": true,
            "readOnly": true
          },
          "visibleRemaining": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "repeatSpan": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "spanSinceLast": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "isNeeded": {
            "type": "boolean",
            "readOnly": true
          },
          "isOverdue": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.OwnedBranch": {
        "required": [
          "breakbulkCargoPlace",
          "comment",
          "companyCity",
          "id",
          "maintenancePlaces",
          "maintenancePlacesNotFull",
          "maintenancePlacesUsed",
          "sparePartsInStorage",
          "spedition",
          "trailerParkplaces",
          "truckParkplaces",
          "truckParkplacesNotFull",
          "truckParkplacesUsed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "companyCity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.CompanyCity"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "maintenancePlaces": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "truckParkplaces": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "trailerParkplaces": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "breakbulkCargoPlace": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "truckParkplacesUsed": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maintenancePlacesUsed": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "sparePartsInStorage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePartStock"
            },
            "nullable": true,
            "readOnly": true
          },
          "truckParkplacesNotFull": {
            "type": "boolean",
            "readOnly": true
          },
          "maintenancePlacesNotFull": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.PartialETSTaskInfo": {
        "required": [
          "ddCleaned",
          "dest",
          "freight",
          "hasScreenshot",
          "id",
          "isDeductable",
          "start",
          "state",
          "visibleID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibleID": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.ETSTaskState"
              }
            ],
            "description": "\n\n0 = InDrive\n\n1 = Done\n\n2 = Settled\n\n3 = Fail\n\n4 = AdminCheck\n\n5 = Paused\n\n6 = Cancelled\n\n7 = Invalid\n\n-1 = NotAvaliable",
            "readOnly": true,
            "x-enumNames": [
              "InDrive",
              "Done",
              "Settled",
              "Fail",
              "AdminCheck",
              "Paused",
              "Cancelled",
              "Invalid",
              "NotAvaliable"
            ]
          },
          "start": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dest": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "freight": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "hasScreenshot": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isDeductable": {
            "type": "boolean",
            "readOnly": true
          },
          "ddCleaned": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.Permission": {
        "required": [
          "defaultValue",
          "defaultValueLeader",
          "id",
          "key"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "defaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValueLeader": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.Rank": {
        "required": [
          "color",
          "id",
          "inactiveTime",
          "isInactiveRank",
          "isLeader",
          "isStartUpRank",
          "kmSalary",
          "name",
          "rankPermissions",
          "salary",
          "sorting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "salary": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "kmSalary": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "sorting": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isStartUpRank": {
            "type": "boolean",
            "readOnly": true
          },
          "isLeader": {
            "type": "boolean",
            "readOnly": true
          },
          "isInactiveRank": {
            "type": "boolean",
            "readOnly": true
          },
          "inactiveTime": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "color": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "rankPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.RankPermission"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.RankPermission": {
        "required": [
          "canGive",
          "permission"
        ],
        "type": "object",
        "properties": {
          "permission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Permission"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "canGive": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.SparePart": {
        "required": [
          "id",
          "localeName",
          "neededForMaintenanceKind",
          "partsPerTon",
          "pricePerPartNormal",
          "pricePerPartRealEco"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "localeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "neededForMaintenanceKind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.MaintenanceKind"
              }
            ],
            "description": "\n\n0 = Engine\n\n1 = OszilationDamper\n\n2 = Stabilizer\n\n3 = StoneChip\n\n4 = Transmission\n\n5 = Wishbone\n\n6 = BrakePads\n\n7 = BrakeDiscs\n\n8 = EngineMaintenance\n\n9 = TireChange\n\n10 = MainCheck\n\n11 = SafetyCheck\n\n12 = SaddlePlate\n\n13 = AirPressureUnit\n\n14 = Alternator\n\n15 = BrakeVentil\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "Engine",
              "OszilationDamper",
              "Stabilizer",
              "StoneChip",
              "Transmission",
              "Wishbone",
              "BrakePads",
              "BrakeDiscs",
              "EngineMaintenance",
              "TireChange",
              "MainCheck",
              "SafetyCheck",
              "SaddlePlate",
              "AirPressureUnit",
              "Alternator",
              "BrakeVentil",
              "NotSet"
            ]
          },
          "partsPerTon": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pricePerPartNormal": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pricePerPartRealEco": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.SparePartStock": {
        "type": "object",
        "properties": {
          "sparePart": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SparePart"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.SpedChangeLogEntry": {
        "required": [
          "comment",
          "id",
          "timestamp",
          "type",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.SpeditionChangeEntryType"
              }
            ],
            "description": "\n\n0 = TaskDeducted\n\n1 = TaskRejected\n\n2 = RankChanged\n\n3 = RankDeleted\n\n4 = UserRankChanged\n\n5 = UserDismissed\n\n6 = SpeditionSettingChanged\n\n7 = ApplicationTextChanged\n\n8 = ApplicationAcknowledged\n\n9 = ApplicationRejected\n\n10 = BranchBought\n\n11 = BranchExpandedTruckParkplace\n\n12 = BranchShrinkedTruckParkplace\n\n13 = BranchDeleted\n\n14 = TruckBought\n\n15 = TruckSold\n\n16 = TruckLicensePlateChanged\n\n17 = BoniAdded\n\n18 = BoniDeleted\n\n19 = RankAddedPermission\n\n20 = RankDeletedPermission\n\n21 = BranchExpandedTrailerParkplace\n\n22 = BranchShrinkedTrailerParkplace\n\n23 = BranchExpandedMaintenancePlace\n\n24 = BranchShrinkedMaintenancePlace\n\n25 = TruckTransfered\n\n26 = TruckMaintenancePlanned\n\n27 = TruckMaintenanceAborted\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "TaskDeducted",
              "TaskRejected",
              "RankChanged",
              "RankDeleted",
              "UserRankChanged",
              "UserDismissed",
              "SpeditionSettingChanged",
              "ApplicationTextChanged",
              "ApplicationAcknowledged",
              "ApplicationRejected",
              "BranchBought",
              "BranchExpandedTruckParkplace",
              "BranchShrinkedTruckParkplace",
              "BranchDeleted",
              "TruckBought",
              "TruckSold",
              "TruckLicensePlateChanged",
              "BoniAdded",
              "BoniDeleted",
              "RankAddedPermission",
              "RankDeletedPermission",
              "BranchExpandedTrailerParkplace",
              "BranchShrinkedTrailerParkplace",
              "BranchExpandedMaintenancePlace",
              "BranchShrinkedMaintenancePlace",
              "TruckTransfered",
              "TruckMaintenancePlanned",
              "TruckMaintenanceAborted",
              "NotSet"
            ]
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.SpedTarget": {
        "required": [
          "alrreached",
          "amount",
          "amountReachedSum",
          "bonus",
          "bonusSum",
          "comment",
          "doneDate",
          "id",
          "ignoredUsers",
          "isActive",
          "isReached",
          "kontorHandling",
          "moneyamount",
          "omsiHandling",
          "reached",
          "startDate",
          "type",
          "users"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moneyamount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "doneDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "bonus": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "bonusSum": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.SpedTargetUser"
            },
            "nullable": true,
            "readOnly": true
          },
          "ignoredUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
            },
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.SpedTargetType"
              }
            ],
            "description": "\n\n0 = Value\n\n1 = Distance\n\n2 = WeightDistance",
            "readOnly": true,
            "x-enumNames": [
              "Value",
              "Distance",
              "WeightDistance"
            ]
          },
          "kontorHandling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.SpedTargetKontorHandling"
              }
            ],
            "description": "\n\n0 = AllTasks\n\n1 = OnlyKontorTasks\n\n2 = NoKontorTasks",
            "readOnly": true,
            "x-enumNames": [
              "AllTasks",
              "OnlyKontorTasks",
              "NoKontorTasks"
            ]
          },
          "omsiHandling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.SpedTargetOMSIHandling"
              }
            ],
            "description": "\n\n0 = AllTasks\n\n1 = OnlyOMSITasks\n\n2 = NoOMSITasks",
            "readOnly": true,
            "x-enumNames": [
              "AllTasks",
              "OnlyOMSITasks",
              "NoOMSITasks"
            ]
          },
          "alrreached": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "amountReachedSum": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "reached": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "isReached": {
            "type": "boolean",
            "readOnly": true
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.SpedTargetUser": {
        "required": [
          "amount",
          "amountReached",
          "max",
          "unit",
          "user",
          "userObject",
          "value",
          "visAmountReached"
        ],
        "type": "object",
        "properties": {
          "userObject": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "amountReached": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "unit": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "visAmountReached": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "max": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.Spedition": {
        "required": [
          "id",
          "name",
          "shortName",
          "speditionType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shortName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "speditionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.SpeditionType"
              }
            ],
            "description": "\n\n0 = NonCompeting\n\n1 = LightRealism\n\n2 = RealEco\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "NonCompeting",
              "LightRealism",
              "RealEco",
              "NotSet"
            ]
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.SpeditionPartnershipEntry": {
        "required": [
          "accepted",
          "accessMoney",
          "assignTruck",
          "feeMonthly",
          "feePercent",
          "id",
          "initSpedition",
          "kontorAcceptInternDeduction",
          "kontorKMFee",
          "kontorTrailerUsage",
          "kontorUserAssignment",
          "objectSpedition",
          "shareConvoyInfo",
          "useBranches",
          "useFreeTruck"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "initSpedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "objectSpedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "accepted": {
            "type": "boolean",
            "readOnly": true
          },
          "kontorTrailerUsage": {
            "type": "boolean",
            "readOnly": true
          },
          "kontorUserAssignment": {
            "type": "boolean",
            "readOnly": true
          },
          "kontorAcceptInternDeduction": {
            "type": "boolean",
            "readOnly": true
          },
          "kontorKMFee": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "assignTruck": {
            "type": "boolean",
            "readOnly": true
          },
          "useFreeTruck": {
            "type": "boolean",
            "readOnly": true
          },
          "useBranches": {
            "type": "boolean",
            "readOnly": true
          },
          "accessMoney": {
            "type": "boolean",
            "readOnly": true
          },
          "shareConvoyInfo": {
            "type": "boolean",
            "readOnly": true
          },
          "feePercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "feeMonthly": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.Task": {
        "required": [
          "avgVelocityKMH",
          "avgVelocityMPH",
          "boni",
          "cargoMarket",
          "currency",
          "currencySymbol",
          "currentConvoyInfo",
          "damage",
          "damagePercent",
          "ddCleaned",
          "destCity",
          "destCompany",
          "distKM",
          "distMI",
          "dmgReport",
          "dollarmi",
          "endkm",
          "endtime",
          "eurokm",
          "fail",
          "ferry",
          "ferryKM",
          "freight",
          "freightweight",
          "fuelAvg100KM",
          "fuelAvgMiGal",
          "fuelRefuledGal",
          "fuelRefuledLi",
          "fuelUsedGal",
          "fuelUsedLi",
          "id",
          "income",
          "isDeductable",
          "isNegative",
          "isOK",
          "isQuestionable",
          "isRealScale",
          "kontorPart",
          "maintenance",
          "maps",
          "maxVelocityKMH",
          "maxVelocityMPH",
          "meetsSpeditionVelocityRequirements",
          "neededTime",
          "refuel",
          "rentedTruck",
          "screenshotCheckDate",
          "screenshotCheckedBy",
          "screenshotState",
          "screenshotURL",
          "spedition",
          "startCity",
          "startCompany",
          "startkm",
          "starttime",
          "state",
          "taskPositions",
          "taxes",
          "toll",
          "truck",
          "truckDamage",
          "truckType",
          "user",
          "userSetRealEco",
          "value",
          "visDamagePercent",
          "visDistance",
          "visEuroKM",
          "visFreightWeight",
          "visFuelEfficiency",
          "visibleID",
          "visMaps"
        ],
        "type": "object",
        "properties": {
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "visibleID": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDeductable": {
            "type": "boolean",
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true
          },
          "maps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Map"
            },
            "nullable": true
          },
          "visMaps": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "startCity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.City"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "destCity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.City"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "startCompany": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "destCompany": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "freight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Freight"
              }
            ],
            "nullable": true
          },
          "freightweight": {
            "type": "integer",
            "format": "int32"
          },
          "visFreightWeight": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dmgReport": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "damage": {
            "type": "number",
            "format": "double"
          },
          "damagePercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "visDamagePercent": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "taxes": {
            "type": "number",
            "format": "double"
          },
          "maintenance": {
            "type": "number",
            "format": "double"
          },
          "toll": {
            "type": "number",
            "format": "double"
          },
          "income": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.ETSTaskState"
              }
            ],
            "description": "\n\n0 = InDrive\n\n1 = Done\n\n2 = Settled\n\n3 = Fail\n\n4 = AdminCheck\n\n5 = Paused\n\n6 = Cancelled\n\n7 = Invalid\n\n-1 = NotAvaliable",
            "x-enumNames": [
              "InDrive",
              "Done",
              "Settled",
              "Fail",
              "AdminCheck",
              "Paused",
              "Cancelled",
              "Invalid",
              "NotAvaliable"
            ]
          },
          "starttime": {
            "type": "string",
            "format": "date-time"
          },
          "endtime": {
            "type": "string",
            "format": "date-time"
          },
          "neededTime": {
            "type": "string",
            "format": "time-span",
            "readOnly": true
          },
          "ferry": {
            "type": "integer",
            "format": "int32"
          },
          "ferryKM": {
            "type": "integer",
            "format": "int32"
          },
          "refuel": {
            "type": "integer",
            "format": "int32"
          },
          "boni": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencySymbol": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "truck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Truck"
              }
            ],
            "nullable": true
          },
          "truckType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckType"
              }
            ],
            "nullable": true
          },
          "rentedTruck": {
            "type": "boolean",
            "readOnly": true
          },
          "startkm": {
            "type": "integer",
            "format": "int32"
          },
          "endkm": {
            "type": "integer",
            "format": "int32"
          },
          "distKM": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "distMI": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "visDistance": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "eurokm": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "dollarmi": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "visEuroKM": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fuelUsedLi": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "fuelUsedGal": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "fuelRefuledLi": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "fuelRefuledGal": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "fuelAvg100KM": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "fuelAvgMiGal": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "visFuelEfficiency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "truckDamage": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "maxVelocityKMH": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maxVelocityMPH": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "avgVelocityKMH": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "avgVelocityMPH": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ddCleaned": {
            "type": "boolean"
          },
          "cargoMarket": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.CargoMarketType"
              }
            ],
            "description": "\n\n0 = CargoMarket\n\n1 = QuickJob\n\n2 = FreightMarket\n\n3 = ExternalContract\n\n4 = ExternalMarket\n\n-1 = NotSet",
            "x-enumNames": [
              "CargoMarket",
              "QuickJob",
              "FreightMarket",
              "ExternalContract",
              "ExternalMarket",
              "NotSet"
            ]
          },
          "screenshotState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.ScreenshotState"
              }
            ],
            "description": "\n\n0 = None\n\n1 = Uploaded\n\n2 = Processed\n\n3 = Rejected\n\n4 = TaskSettled",
            "x-enumNames": [
              "None",
              "Uploaded",
              "Processed",
              "Rejected",
              "TaskSettled"
            ]
          },
          "screenshotCheckedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true
          },
          "screenshotCheckDate": {
            "type": "string",
            "format": "date-time"
          },
          "kontorPart": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Kontor.JobPart"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "userSetRealEco": {
            "type": "boolean"
          },
          "isRealScale": {
            "type": "boolean"
          },
          "taskPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TaskPosition"
            },
            "nullable": true
          },
          "currentConvoyInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Live.ConvoyInfo"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "meetsSpeditionVelocityRequirements": {
            "type": "boolean",
            "readOnly": true
          },
          "isOK": {
            "type": "boolean",
            "readOnly": true
          },
          "isQuestionable": {
            "type": "boolean",
            "readOnly": true
          },
          "isNegative": {
            "type": "boolean",
            "readOnly": true
          },
          "fail": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "screenshotURL": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.TaskDriveData": {
        "required": [
          "cruiseControl",
          "freightDamagePercent",
          "id",
          "mpServer",
          "odometer",
          "speedLimit",
          "timestamp",
          "truckDamagePercent",
          "truckFuel",
          "velocity",
          "x_Coord",
          "z_Coord"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "velocity": {
            "type": "integer",
            "format": "int32"
          },
          "speedLimit": {
            "type": "integer",
            "format": "int32"
          },
          "cruiseControl": {
            "type": "integer",
            "format": "int32"
          },
          "x_Coord": {
            "type": "number",
            "format": "double"
          },
          "z_Coord": {
            "type": "number",
            "format": "double"
          },
          "mpServer": {
            "type": "string",
            "nullable": true
          },
          "odometer": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "freightDamagePercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "truckDamagePercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "truckFuel": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.TaskPosition": {
        "required": [
          "changedBy",
          "changeType",
          "comment",
          "coordinates",
          "id",
          "refueledLiter",
          "refueledSum",
          "refusedTruck",
          "stateChangedFrom",
          "stateChangeTo",
          "timestamp",
          "usedFerry",
          "usedGasStation"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.TaskPositionType"
              }
            ],
            "description": "\n\n0 = StateChange\n\n1 = RefusedTruckInfo\n\n2 = Refueled\n\n3 = FerryUsed\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "StateChange",
              "RefusedTruckInfo",
              "Refueled",
              "FerryUsed",
              "NotSet"
            ]
          },
          "changedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true
          },
          "refusedTruck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Truck"
              }
            ],
            "nullable": true
          },
          "stateChangedFrom": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.ETSTaskState"
              }
            ],
            "description": "\n\n0 = InDrive\n\n1 = Done\n\n2 = Settled\n\n3 = Fail\n\n4 = AdminCheck\n\n5 = Paused\n\n6 = Cancelled\n\n7 = Invalid\n\n-1 = NotAvaliable",
            "nullable": true
          },
          "stateChangeTo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.ETSTaskState"
              }
            ],
            "description": "\n\n0 = InDrive\n\n1 = Done\n\n2 = Settled\n\n3 = Fail\n\n4 = AdminCheck\n\n5 = Paused\n\n6 = Cancelled\n\n7 = Invalid\n\n-1 = NotAvaliable",
            "nullable": true
          },
          "refueledLiter": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "refueledSum": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "usedGasStation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.GasStation"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "usedFerry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.Ferry"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "coordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Telemetry.ETS.Vektor"
              }
            ],
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.Truck": {
        "required": [
          "branch",
          "currentTaskID",
          "drivenKM",
          "freeUsageAllowed",
          "hasAlternatorDamage",
          "hasAPUDamage",
          "hasEngineMalfunction",
          "hasOszilationDamperDefect",
          "hasSaddlePlateDamage",
          "hasStabilizerDefect",
          "hasStoneChip",
          "hasTransmissionDamage",
          "hasWishboneDefect",
          "id",
          "imageURL",
          "isParked",
          "lastCity",
          "lastTransfer",
          "licensePlate",
          "neededMaintenanceJobs",
          "nextBrakeDiscChange",
          "nextBrakePadsChange",
          "nextEngineMaintenance",
          "nextMainInspection",
          "nextSafetyCheck",
          "nextTireChange",
          "truckAvailable",
          "type",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.TruckType"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "branch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.OwnedBranch"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "licensePlate": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "drivenKM": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "lastCity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Maps.City"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "lastTransfer": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "freeUsageAllowed": {
            "type": "boolean",
            "readOnly": true
          },
          "isParked": {
            "type": "boolean",
            "readOnly": true
          },
          "truckAvailable": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "nextMainInspection": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "nextSafetyCheck": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "nextEngineMaintenance": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nextTireChange": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nextBrakePadsChange": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nextBrakeDiscChange": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasWishboneDefect": {
            "type": "boolean",
            "readOnly": true
          },
          "hasStabilizerDefect": {
            "type": "boolean",
            "readOnly": true
          },
          "hasOszilationDamperDefect": {
            "type": "boolean",
            "readOnly": true
          },
          "hasEngineMalfunction": {
            "type": "boolean",
            "readOnly": true
          },
          "hasTransmissionDamage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasSaddlePlateDamage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasAPUDamage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasAlternatorDamage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasStoneChip": {
            "type": "boolean",
            "readOnly": true
          },
          "currentTaskID": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "neededMaintenanceJobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.NeededTruckMaintenance"
            },
            "nullable": true,
            "readOnly": true
          },
          "imageURL": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.TruckBranchStatistic": {
        "required": [
          "distanceTravelled",
          "ferryKM",
          "fuelUsage",
          "income",
          "maintenanceCost",
          "toll"
        ],
        "type": "object",
        "properties": {
          "maintenanceCost": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "fuelUsage": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "income": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "toll": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "distanceTravelled": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ferryKM": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.TruckMaintenance": {
        "required": [
          "endDate",
          "id",
          "initiatedByUser",
          "maintenanceKind",
          "ownedBranch",
          "queueDate",
          "sparePartWarningSent",
          "startDate",
          "state",
          "truck"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "truck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Truck"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "ownedBranch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.OwnedBranch"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "initiatedByUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "maintenanceKind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.MaintenanceKind"
              }
            ],
            "description": "\n\n0 = Engine\n\n1 = OszilationDamper\n\n2 = Stabilizer\n\n3 = StoneChip\n\n4 = Transmission\n\n5 = Wishbone\n\n6 = BrakePads\n\n7 = BrakeDiscs\n\n8 = EngineMaintenance\n\n9 = TireChange\n\n10 = MainCheck\n\n11 = SafetyCheck\n\n12 = SaddlePlate\n\n13 = AirPressureUnit\n\n14 = Alternator\n\n15 = BrakeVentil\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "Engine",
              "OszilationDamper",
              "Stabilizer",
              "StoneChip",
              "Transmission",
              "Wishbone",
              "BrakePads",
              "BrakeDiscs",
              "EngineMaintenance",
              "TireChange",
              "MainCheck",
              "SafetyCheck",
              "SaddlePlate",
              "AirPressureUnit",
              "Alternator",
              "BrakeVentil",
              "NotSet"
            ]
          },
          "sparePartWarningSent": {
            "type": "boolean",
            "readOnly": true
          },
          "queueDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.MaintenanceState"
              }
            ],
            "description": "\n\n0 = Enqueued\n\n11 = InDrive\n\n12 = NotInOwnedBranch\n\n13 = OtherMaintenanceActive\n\n21 = MissingSpareParts\n\n22 = NotEnoughMaintenancePlaces\n\n91 = Processing\n\n92 = ProcessingButDelayed\n\n93 = Finished\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "Enqueued",
              "InDrive",
              "NotInOwnedBranch",
              "OtherMaintenanceActive",
              "MissingSpareParts",
              "NotEnoughMaintenancePlaces",
              "Processing",
              "ProcessingButDelayed",
              "Finished",
              "NotSet"
            ]
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.TruckType": {
        "required": [
          "game",
          "id",
          "manufactor",
          "model",
          "price",
          "rentPrice"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "manufactor": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "model": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "game": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.GameEnum"
              }
            ],
            "description": "\n\n0 = ETS2\n\n1 = ATS\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "ETS2",
              "ATS",
              "NotSet"
            ]
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "rentPrice": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Speditions.Vacation": {
        "required": [
          "description",
          "ende",
          "id",
          "start",
          "user",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "ende": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Telemetry.ETS.Vektor": {
        "required": [
          "x",
          "y",
          "z"
        ],
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Users.Achievements": {
        "type": "object",
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Users.FullUserInfo": {
        "required": [
          "aboutMe",
          "achievements",
          "authCode",
          "bannedReason",
          "bannedTill",
          "birthday",
          "changelogVisible",
          "deletionFrist",
          "discordUID",
          "eMail",
          "formatName",
          "id",
          "inSped",
          "isAlphaTester",
          "isBanned",
          "isInCooldown",
          "isTrustedUser",
          "kontorActivated",
          "lastTaskTime",
          "mainBankAccount",
          "plusActive",
          "plusUntil",
          "rank",
          "realName",
          "residence",
          "spedition",
          "speditionJoinDate",
          "steamID",
          "steamImgURL",
          "systemAdminPermissions",
          "systemAdminRankName",
          "tfaActivated",
          "twitchID",
          "twitchName",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "steamID": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "authCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "plusUntil": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "plusActive": {
            "type": "boolean",
            "readOnly": true
          },
          "bannedTill": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "isBanned": {
            "type": "boolean",
            "readOnly": true
          },
          "bannedReason": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "eMail": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "realName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "aboutMe": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "birthday": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "steamImgURL": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "residence": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "kontorActivated": {
            "type": "boolean",
            "readOnly": true
          },
          "changelogVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "deletionFrist": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "tfaActivated": {
            "type": "boolean",
            "readOnly": true
          },
          "isAlphaTester": {
            "type": "boolean",
            "readOnly": true
          },
          "isTrustedUser": {
            "type": "boolean",
            "readOnly": true
          },
          "systemAdminPermissions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.AdminPermissionEnum"
              }
            ],
            "description": "\n\n0 = None\n\n1 = SeeLiveData\n\n2 = HandleScreenshots\n\n4 = HandleTaskCheck\n\n8 = TicketSystem\n\n16 = ViewData\n\n32 = ChangeData\n\n64 = BanUser\n\n128 = MapImport\n\n256 = KontorManagement\n\n512 = IsManagement",
            "readOnly": true,
            "x-enumNames": [
              "None",
              "SeeLiveData",
              "HandleScreenshots",
              "HandleTaskCheck",
              "TicketSystem",
              "ViewData",
              "ChangeData",
              "BanUser",
              "MapImport",
              "KontorManagement",
              "IsManagement"
            ]
          },
          "systemAdminRankName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "twitchName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "twitchID": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "discordUID": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "rank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Rank"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "achievements": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.Achievements"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "inSped": {
            "type": "boolean",
            "readOnly": true
          },
          "formatName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "lastTaskTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "isInCooldown": {
            "type": "boolean",
            "readOnly": true
          },
          "mainBankAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "speditionJoinDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Users.User": {
        "required": [
          "formatName",
          "id",
          "inSped",
          "profilePicURL",
          "spedition",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "profilePicURL": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "inSped": {
            "type": "boolean",
            "readOnly": true
          },
          "formatName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Users.UserChangeLogEntry": {
        "required": [
          "comment",
          "id",
          "timestamp",
          "type",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Enums.UserChangeEntryType"
              }
            ],
            "description": "\n\n0 = ChangedName\n\n1 = JoinedSpedition\n\n2 = DismissedBySpedition\n\n3 = Quitted\n\n4 = ChangedProfileData\n\n5 = FoundedSpedition\n\n-1 = NotSet",
            "readOnly": true,
            "x-enumNames": [
              "ChangedName",
              "JoinedSpedition",
              "DismissedBySpedition",
              "Quitted",
              "ChangedProfileData",
              "FoundedSpedition",
              "NotSet"
            ]
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Users.UserLiteInfo": {
        "required": [
          "formatName",
          "id",
          "inSped",
          "lastTaskTime",
          "mainBankAccount",
          "profilePicURL",
          "rank",
          "spedition",
          "speditionJoinDate",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "rank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.LiteRank"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "lastTaskTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "mainBankAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "profilePicURL": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "inSped": {
            "type": "boolean",
            "readOnly": true
          },
          "formatName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "speditionJoinDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Users.UserProfile": {
        "required": [
          "aboutMe",
          "birthday",
          "changeLog",
          "damageSum",
          "formatName",
          "id",
          "incomeSum",
          "inSped",
          "kmSum",
          "lastTaskTime",
          "mainBankAccount",
          "realName",
          "residence",
          "spedition",
          "steamID",
          "steamImgURL",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "steamID": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "incomeSum": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "damageSum": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "kmSum": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "realName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "aboutMe": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "birthday": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "steamImgURL": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "residence": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "changeLog": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.UserChangeLogEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "spedition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Speditions.Spedition"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "inSped": {
            "type": "boolean",
            "readOnly": true
          },
          "formatName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "lastTaskTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "mainBankAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Money.LiteBankAccount"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.Objects.Users.UserStatUser": {
        "required": [
          "damage",
          "damagePercent",
          "drivenKM",
          "fuel",
          "fuelPer100KM",
          "income",
          "lastTaskTime",
          "tasks",
          "user",
          "userObject"
        ],
        "type": "object",
        "properties": {
          "userObject": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.Users.User"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "lastTaskTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "drivenKM": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "income": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "damage": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "tasks": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "fuel": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "fuelPer100KM": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "damagePercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.ServerCommunication.Helper.REST.SpedStats": {
        "required": [
          "drivenKM",
          "drivenMI",
          "drivenTasks",
          "drivenWeightKG",
          "drivenWeightLBS",
          "sumBoni",
          "sumDamage",
          "sumFerry",
          "sumIncome",
          "sumMaintenance",
          "sumRefuel",
          "sumTaxes",
          "sumToll",
          "sumValue",
          "usedFuelGal",
          "usedFuelLi"
        ],
        "type": "object",
        "properties": {
          "drivenTasks": {
            "type": "number",
            "format": "double"
          },
          "drivenKM": {
            "type": "number",
            "format": "double"
          },
          "drivenMI": {
            "type": "number",
            "format": "double"
          },
          "drivenWeightKG": {
            "type": "number",
            "format": "double"
          },
          "drivenWeightLBS": {
            "type": "number",
            "format": "double"
          },
          "sumBoni": {
            "type": "number",
            "format": "double"
          },
          "sumDamage": {
            "type": "number",
            "format": "double"
          },
          "sumFerry": {
            "type": "number",
            "format": "double"
          },
          "usedFuelLi": {
            "type": "number",
            "format": "double"
          },
          "usedFuelGal": {
            "type": "number",
            "format": "double"
          },
          "sumIncome": {
            "type": "number",
            "format": "double"
          },
          "sumMaintenance": {
            "type": "number",
            "format": "double"
          },
          "sumRefuel": {
            "type": "number",
            "format": "double"
          },
          "sumTaxes": {
            "type": "number",
            "format": "double"
          },
          "sumToll": {
            "type": "number",
            "format": "double"
          },
          "sumValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.ServerCommunication.Helper.REST.UserPosition": {
        "required": [
          "user",
          "velocityKMH",
          "velocityMPH",
          "x",
          "z"
        ],
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "nullable": true
          },
          "x": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          },
          "velocityKMH": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "velocityMPH": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.API.TaskPositionType": {
        "enum": [
          0,
          1,
          2,
          3,
          -1
        ],
        "type": "integer",
        "description": "\n\n0 = StateChange\n\n1 = RefusedTruckInfo\n\n2 = Refueled\n\n3 = FerryUsed\n\n-1 = NotSet",
        "format": "int32",
        "x-enumNames": [
          "StateChange",
          "RefusedTruckInfo",
          "Refueled",
          "FerryUsed",
          "NotSet"
        ]
      },
      "FPH.SpedV.Server.Objects.SimRail.SimRailActiveTrain": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SimRail.SimRailActiveTrainData"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.Server.Objects.SimRail.SimRailDispatchStation": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SimRail.SimRailDispatchStationData"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FPH.SpedV.Server.Objects.SimRail.SimRailServer": {
        "required": [
          "currentTrainList",
          "dispatchStationList",
          "lastOnlineState",
          "serverData"
        ],
        "type": "object",
        "properties": {
          "serverData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FPH.SpedV.API.Objects.SimRail.SimRailServerInfo"
              }
            ],
            "nullable": true
          },
          "lastOnlineState": {
            "type": "boolean",
            "readOnly": true
          },
          "currentTrainList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailActiveTrain"
            },
            "nullable": true,
            "readOnly": true
          },
          "dispatchStationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FPH.SpedV.Server.Objects.SimRail.SimRailDispatchStation"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header"
      }
    }
  }
}
