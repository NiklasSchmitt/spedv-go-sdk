/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsSpeditionsSparePart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsSpeditionsSparePart{}

// FPHSpedVAPIObjectsSpeditionsSparePart struct for FPHSpedVAPIObjectsSpeditionsSparePart
type FPHSpedVAPIObjectsSpeditionsSparePart struct {
	Id int32 `json:"id"`
	LocaleName NullableString `json:"localeName"`
	//   0 = Engine  1 = OszilationDamper  2 = Stabilizer  3 = StoneChip  4 = Transmission  5 = Wishbone  6 = BrakePads  7 = BrakeDiscs  8 = EngineMaintenance  9 = TireChange  10 = MainCheck  11 = SafetyCheck  12 = SaddlePlate  13 = AirPressureUnit  14 = Alternator  15 = BrakeVentil  -1 = NotSet
	NeededForMaintenanceKind FPHSpedVAPIEnumsMaintenanceKind `json:"neededForMaintenanceKind"`
	PartsPerTon int32 `json:"partsPerTon"`
	PricePerPartNormal int32 `json:"pricePerPartNormal"`
	PricePerPartRealEco int32 `json:"pricePerPartRealEco"`
}

type _FPHSpedVAPIObjectsSpeditionsSparePart FPHSpedVAPIObjectsSpeditionsSparePart

// NewFPHSpedVAPIObjectsSpeditionsSparePart instantiates a new FPHSpedVAPIObjectsSpeditionsSparePart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsSpeditionsSparePart(id int32, localeName NullableString, neededForMaintenanceKind FPHSpedVAPIEnumsMaintenanceKind, partsPerTon int32, pricePerPartNormal int32, pricePerPartRealEco int32) *FPHSpedVAPIObjectsSpeditionsSparePart {
	this := FPHSpedVAPIObjectsSpeditionsSparePart{}
	this.Id = id
	this.LocaleName = localeName
	this.NeededForMaintenanceKind = neededForMaintenanceKind
	this.PartsPerTon = partsPerTon
	this.PricePerPartNormal = pricePerPartNormal
	this.PricePerPartRealEco = pricePerPartRealEco
	return &this
}

// NewFPHSpedVAPIObjectsSpeditionsSparePartWithDefaults instantiates a new FPHSpedVAPIObjectsSpeditionsSparePart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsSpeditionsSparePartWithDefaults() *FPHSpedVAPIObjectsSpeditionsSparePart {
	this := FPHSpedVAPIObjectsSpeditionsSparePart{}
	return &this
}

// GetId returns the Id field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) SetId(v int32) {
	o.Id = v
}

// GetLocaleName returns the LocaleName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetLocaleName() string {
	if o == nil || o.LocaleName.Get() == nil {
		var ret string
		return ret
	}

	return *o.LocaleName.Get()
}

// GetLocaleNameOk returns a tuple with the LocaleName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetLocaleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocaleName.Get(), o.LocaleName.IsSet()
}

// SetLocaleName sets field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) SetLocaleName(v string) {
	o.LocaleName.Set(&v)
}

// GetNeededForMaintenanceKind returns the NeededForMaintenanceKind field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetNeededForMaintenanceKind() FPHSpedVAPIEnumsMaintenanceKind {
	if o == nil {
		var ret FPHSpedVAPIEnumsMaintenanceKind
		return ret
	}

	return o.NeededForMaintenanceKind
}

// GetNeededForMaintenanceKindOk returns a tuple with the NeededForMaintenanceKind field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetNeededForMaintenanceKindOk() (*FPHSpedVAPIEnumsMaintenanceKind, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NeededForMaintenanceKind, true
}

// SetNeededForMaintenanceKind sets field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) SetNeededForMaintenanceKind(v FPHSpedVAPIEnumsMaintenanceKind) {
	o.NeededForMaintenanceKind = v
}

// GetPartsPerTon returns the PartsPerTon field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetPartsPerTon() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartsPerTon
}

// GetPartsPerTonOk returns a tuple with the PartsPerTon field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetPartsPerTonOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartsPerTon, true
}

// SetPartsPerTon sets field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) SetPartsPerTon(v int32) {
	o.PartsPerTon = v
}

// GetPricePerPartNormal returns the PricePerPartNormal field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetPricePerPartNormal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PricePerPartNormal
}

// GetPricePerPartNormalOk returns a tuple with the PricePerPartNormal field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetPricePerPartNormalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PricePerPartNormal, true
}

// SetPricePerPartNormal sets field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) SetPricePerPartNormal(v int32) {
	o.PricePerPartNormal = v
}

// GetPricePerPartRealEco returns the PricePerPartRealEco field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetPricePerPartRealEco() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PricePerPartRealEco
}

// GetPricePerPartRealEcoOk returns a tuple with the PricePerPartRealEco field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) GetPricePerPartRealEcoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PricePerPartRealEco, true
}

// SetPricePerPartRealEco sets field value
func (o *FPHSpedVAPIObjectsSpeditionsSparePart) SetPricePerPartRealEco(v int32) {
	o.PricePerPartRealEco = v
}

func (o FPHSpedVAPIObjectsSpeditionsSparePart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsSpeditionsSparePart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["localeName"] = o.LocaleName.Get()
	toSerialize["neededForMaintenanceKind"] = o.NeededForMaintenanceKind
	toSerialize["partsPerTon"] = o.PartsPerTon
	toSerialize["pricePerPartNormal"] = o.PricePerPartNormal
	toSerialize["pricePerPartRealEco"] = o.PricePerPartRealEco
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsSpeditionsSparePart) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"localeName",
		"neededForMaintenanceKind",
		"partsPerTon",
		"pricePerPartNormal",
		"pricePerPartRealEco",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsSpeditionsSparePart := _FPHSpedVAPIObjectsSpeditionsSparePart{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsSpeditionsSparePart)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsSpeditionsSparePart(varFPHSpedVAPIObjectsSpeditionsSparePart)

	return err
}

type NullableFPHSpedVAPIObjectsSpeditionsSparePart struct {
	value *FPHSpedVAPIObjectsSpeditionsSparePart
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsSpeditionsSparePart) Get() *FPHSpedVAPIObjectsSpeditionsSparePart {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsSparePart) Set(val *FPHSpedVAPIObjectsSpeditionsSparePart) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsSpeditionsSparePart) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsSparePart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsSpeditionsSparePart(val *FPHSpedVAPIObjectsSpeditionsSparePart) *NullableFPHSpedVAPIObjectsSpeditionsSparePart {
	return &NullableFPHSpedVAPIObjectsSpeditionsSparePart{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsSpeditionsSparePart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsSparePart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


