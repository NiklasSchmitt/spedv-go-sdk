/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsMapsFerry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsMapsFerry{}

// FPHSpedVAPIObjectsMapsFerry struct for FPHSpedVAPIObjectsMapsFerry
type FPHSpedVAPIObjectsMapsFerry struct {
	Id int32 `json:"id"`
	Start NullableFPHSpedVAPIObjectsMapsHarbor `json:"start"`
	Destination NullableFPHSpedVAPIObjectsMapsHarbor `json:"destination"`
	Amount int32 `json:"amount"`
	Company NullableString `json:"company"`
	Currency NullableString `json:"currency"`
	Distance int32 `json:"distance"`
}

type _FPHSpedVAPIObjectsMapsFerry FPHSpedVAPIObjectsMapsFerry

// NewFPHSpedVAPIObjectsMapsFerry instantiates a new FPHSpedVAPIObjectsMapsFerry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsMapsFerry(id int32, start NullableFPHSpedVAPIObjectsMapsHarbor, destination NullableFPHSpedVAPIObjectsMapsHarbor, amount int32, company NullableString, currency NullableString, distance int32) *FPHSpedVAPIObjectsMapsFerry {
	this := FPHSpedVAPIObjectsMapsFerry{}
	this.Id = id
	this.Start = start
	this.Destination = destination
	this.Amount = amount
	this.Company = company
	this.Currency = currency
	this.Distance = distance
	return &this
}

// NewFPHSpedVAPIObjectsMapsFerryWithDefaults instantiates a new FPHSpedVAPIObjectsMapsFerry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsMapsFerryWithDefaults() *FPHSpedVAPIObjectsMapsFerry {
	this := FPHSpedVAPIObjectsMapsFerry{}
	return &this
}

// GetId returns the Id field value
func (o *FPHSpedVAPIObjectsMapsFerry) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMapsFerry) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FPHSpedVAPIObjectsMapsFerry) SetId(v int32) {
	o.Id = v
}

// GetStart returns the Start field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsMapsHarbor will be returned
func (o *FPHSpedVAPIObjectsMapsFerry) GetStart() FPHSpedVAPIObjectsMapsHarbor {
	if o == nil || o.Start.Get() == nil {
		var ret FPHSpedVAPIObjectsMapsHarbor
		return ret
	}

	return *o.Start.Get()
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsFerry) GetStartOk() (*FPHSpedVAPIObjectsMapsHarbor, bool) {
	if o == nil {
		return nil, false
	}
	return o.Start.Get(), o.Start.IsSet()
}

// SetStart sets field value
func (o *FPHSpedVAPIObjectsMapsFerry) SetStart(v FPHSpedVAPIObjectsMapsHarbor) {
	o.Start.Set(&v)
}

// GetDestination returns the Destination field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsMapsHarbor will be returned
func (o *FPHSpedVAPIObjectsMapsFerry) GetDestination() FPHSpedVAPIObjectsMapsHarbor {
	if o == nil || o.Destination.Get() == nil {
		var ret FPHSpedVAPIObjectsMapsHarbor
		return ret
	}

	return *o.Destination.Get()
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsFerry) GetDestinationOk() (*FPHSpedVAPIObjectsMapsHarbor, bool) {
	if o == nil {
		return nil, false
	}
	return o.Destination.Get(), o.Destination.IsSet()
}

// SetDestination sets field value
func (o *FPHSpedVAPIObjectsMapsFerry) SetDestination(v FPHSpedVAPIObjectsMapsHarbor) {
	o.Destination.Set(&v)
}

// GetAmount returns the Amount field value
func (o *FPHSpedVAPIObjectsMapsFerry) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMapsFerry) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *FPHSpedVAPIObjectsMapsFerry) SetAmount(v int32) {
	o.Amount = v
}

// GetCompany returns the Company field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMapsFerry) GetCompany() string {
	if o == nil || o.Company.Get() == nil {
		var ret string
		return ret
	}

	return *o.Company.Get()
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsFerry) GetCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Company.Get(), o.Company.IsSet()
}

// SetCompany sets field value
func (o *FPHSpedVAPIObjectsMapsFerry) SetCompany(v string) {
	o.Company.Set(&v)
}

// GetCurrency returns the Currency field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsMapsFerry) GetCurrency() string {
	if o == nil || o.Currency.Get() == nil {
		var ret string
		return ret
	}

	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsMapsFerry) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// SetCurrency sets field value
func (o *FPHSpedVAPIObjectsMapsFerry) SetCurrency(v string) {
	o.Currency.Set(&v)
}

// GetDistance returns the Distance field value
func (o *FPHSpedVAPIObjectsMapsFerry) GetDistance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Distance
}

// GetDistanceOk returns a tuple with the Distance field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsMapsFerry) GetDistanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Distance, true
}

// SetDistance sets field value
func (o *FPHSpedVAPIObjectsMapsFerry) SetDistance(v int32) {
	o.Distance = v
}

func (o FPHSpedVAPIObjectsMapsFerry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsMapsFerry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["start"] = o.Start.Get()
	toSerialize["destination"] = o.Destination.Get()
	toSerialize["amount"] = o.Amount
	toSerialize["company"] = o.Company.Get()
	toSerialize["currency"] = o.Currency.Get()
	toSerialize["distance"] = o.Distance
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsMapsFerry) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"start",
		"destination",
		"amount",
		"company",
		"currency",
		"distance",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsMapsFerry := _FPHSpedVAPIObjectsMapsFerry{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsMapsFerry)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsMapsFerry(varFPHSpedVAPIObjectsMapsFerry)

	return err
}

type NullableFPHSpedVAPIObjectsMapsFerry struct {
	value *FPHSpedVAPIObjectsMapsFerry
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsMapsFerry) Get() *FPHSpedVAPIObjectsMapsFerry {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsMapsFerry) Set(val *FPHSpedVAPIObjectsMapsFerry) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsMapsFerry) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsMapsFerry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsMapsFerry(val *FPHSpedVAPIObjectsMapsFerry) *NullableFPHSpedVAPIObjectsMapsFerry {
	return &NullableFPHSpedVAPIObjectsMapsFerry{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsMapsFerry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsMapsFerry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


