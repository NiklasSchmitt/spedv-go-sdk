/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BingMapsRESTToolkitLocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BingMapsRESTToolkitLocation{}

// BingMapsRESTToolkitLocation struct for BingMapsRESTToolkitLocation
type BingMapsRESTToolkitLocation struct {
	Name NullableString `json:"name"`
	Point NullableBingMapsRESTToolkitPoint `json:"point"`
	EntityType NullableString `json:"entityType"`
	Address NullableBingMapsRESTToolkitAddress `json:"address"`
	Confidence NullableString `json:"confidence"`
	MatchCodes []string `json:"matchCodes"`
	GeocodePoints []BingMapsRESTToolkitPoint `json:"geocodePoints"`
	QueryParseValues []BingMapsRESTToolkitQueryParseValue `json:"queryParseValues"`
	Bbox []float64 `json:"bbox,omitempty"`
	Type NullableString `json:"__type,omitempty"`
}

type _BingMapsRESTToolkitLocation BingMapsRESTToolkitLocation

// NewBingMapsRESTToolkitLocation instantiates a new BingMapsRESTToolkitLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBingMapsRESTToolkitLocation(name NullableString, point NullableBingMapsRESTToolkitPoint, entityType NullableString, address NullableBingMapsRESTToolkitAddress, confidence NullableString, matchCodes []string, geocodePoints []BingMapsRESTToolkitPoint, queryParseValues []BingMapsRESTToolkitQueryParseValue) *BingMapsRESTToolkitLocation {
	this := BingMapsRESTToolkitLocation{}
	this.Name = name
	this.Point = point
	this.EntityType = entityType
	this.Address = address
	this.Confidence = confidence
	this.MatchCodes = matchCodes
	this.GeocodePoints = geocodePoints
	this.QueryParseValues = queryParseValues
	return &this
}

// NewBingMapsRESTToolkitLocationWithDefaults instantiates a new BingMapsRESTToolkitLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBingMapsRESTToolkitLocationWithDefaults() *BingMapsRESTToolkitLocation {
	this := BingMapsRESTToolkitLocation{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitLocation) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *BingMapsRESTToolkitLocation) SetName(v string) {
	o.Name.Set(&v)
}

// GetPoint returns the Point field value
// If the value is explicit nil, the zero value for BingMapsRESTToolkitPoint will be returned
func (o *BingMapsRESTToolkitLocation) GetPoint() BingMapsRESTToolkitPoint {
	if o == nil || o.Point.Get() == nil {
		var ret BingMapsRESTToolkitPoint
		return ret
	}

	return *o.Point.Get()
}

// GetPointOk returns a tuple with the Point field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetPointOk() (*BingMapsRESTToolkitPoint, bool) {
	if o == nil {
		return nil, false
	}
	return o.Point.Get(), o.Point.IsSet()
}

// SetPoint sets field value
func (o *BingMapsRESTToolkitLocation) SetPoint(v BingMapsRESTToolkitPoint) {
	o.Point.Set(&v)
}

// GetEntityType returns the EntityType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitLocation) GetEntityType() string {
	if o == nil || o.EntityType.Get() == nil {
		var ret string
		return ret
	}

	return *o.EntityType.Get()
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntityType.Get(), o.EntityType.IsSet()
}

// SetEntityType sets field value
func (o *BingMapsRESTToolkitLocation) SetEntityType(v string) {
	o.EntityType.Set(&v)
}

// GetAddress returns the Address field value
// If the value is explicit nil, the zero value for BingMapsRESTToolkitAddress will be returned
func (o *BingMapsRESTToolkitLocation) GetAddress() BingMapsRESTToolkitAddress {
	if o == nil || o.Address.Get() == nil {
		var ret BingMapsRESTToolkitAddress
		return ret
	}

	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetAddressOk() (*BingMapsRESTToolkitAddress, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// SetAddress sets field value
func (o *BingMapsRESTToolkitLocation) SetAddress(v BingMapsRESTToolkitAddress) {
	o.Address.Set(&v)
}

// GetConfidence returns the Confidence field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BingMapsRESTToolkitLocation) GetConfidence() string {
	if o == nil || o.Confidence.Get() == nil {
		var ret string
		return ret
	}

	return *o.Confidence.Get()
}

// GetConfidenceOk returns a tuple with the Confidence field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetConfidenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Confidence.Get(), o.Confidence.IsSet()
}

// SetConfidence sets field value
func (o *BingMapsRESTToolkitLocation) SetConfidence(v string) {
	o.Confidence.Set(&v)
}

// GetMatchCodes returns the MatchCodes field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *BingMapsRESTToolkitLocation) GetMatchCodes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MatchCodes
}

// GetMatchCodesOk returns a tuple with the MatchCodes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetMatchCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.MatchCodes) {
		return nil, false
	}
	return o.MatchCodes, true
}

// SetMatchCodes sets field value
func (o *BingMapsRESTToolkitLocation) SetMatchCodes(v []string) {
	o.MatchCodes = v
}

// GetGeocodePoints returns the GeocodePoints field value
// If the value is explicit nil, the zero value for []BingMapsRESTToolkitPoint will be returned
func (o *BingMapsRESTToolkitLocation) GetGeocodePoints() []BingMapsRESTToolkitPoint {
	if o == nil {
		var ret []BingMapsRESTToolkitPoint
		return ret
	}

	return o.GeocodePoints
}

// GetGeocodePointsOk returns a tuple with the GeocodePoints field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetGeocodePointsOk() ([]BingMapsRESTToolkitPoint, bool) {
	if o == nil || IsNil(o.GeocodePoints) {
		return nil, false
	}
	return o.GeocodePoints, true
}

// SetGeocodePoints sets field value
func (o *BingMapsRESTToolkitLocation) SetGeocodePoints(v []BingMapsRESTToolkitPoint) {
	o.GeocodePoints = v
}

// GetQueryParseValues returns the QueryParseValues field value
// If the value is explicit nil, the zero value for []BingMapsRESTToolkitQueryParseValue will be returned
func (o *BingMapsRESTToolkitLocation) GetQueryParseValues() []BingMapsRESTToolkitQueryParseValue {
	if o == nil {
		var ret []BingMapsRESTToolkitQueryParseValue
		return ret
	}

	return o.QueryParseValues
}

// GetQueryParseValuesOk returns a tuple with the QueryParseValues field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetQueryParseValuesOk() ([]BingMapsRESTToolkitQueryParseValue, bool) {
	if o == nil || IsNil(o.QueryParseValues) {
		return nil, false
	}
	return o.QueryParseValues, true
}

// SetQueryParseValues sets field value
func (o *BingMapsRESTToolkitLocation) SetQueryParseValues(v []BingMapsRESTToolkitQueryParseValue) {
	o.QueryParseValues = v
}

// GetBbox returns the Bbox field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BingMapsRESTToolkitLocation) GetBbox() []float64 {
	if o == nil {
		var ret []float64
		return ret
	}
	return o.Bbox
}

// GetBboxOk returns a tuple with the Bbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetBboxOk() ([]float64, bool) {
	if o == nil || IsNil(o.Bbox) {
		return nil, false
	}
	return o.Bbox, true
}

// HasBbox returns a boolean if a field has been set.
func (o *BingMapsRESTToolkitLocation) HasBbox() bool {
	if o != nil && !IsNil(o.Bbox) {
		return true
	}

	return false
}

// SetBbox gets a reference to the given []float64 and assigns it to the Bbox field.
func (o *BingMapsRESTToolkitLocation) SetBbox(v []float64) {
	o.Bbox = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BingMapsRESTToolkitLocation) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BingMapsRESTToolkitLocation) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *BingMapsRESTToolkitLocation) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *BingMapsRESTToolkitLocation) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *BingMapsRESTToolkitLocation) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *BingMapsRESTToolkitLocation) UnsetType() {
	o.Type.Unset()
}

func (o BingMapsRESTToolkitLocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BingMapsRESTToolkitLocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name.Get()
	toSerialize["point"] = o.Point.Get()
	toSerialize["entityType"] = o.EntityType.Get()
	toSerialize["address"] = o.Address.Get()
	toSerialize["confidence"] = o.Confidence.Get()
	if o.MatchCodes != nil {
		toSerialize["matchCodes"] = o.MatchCodes
	}
	if o.GeocodePoints != nil {
		toSerialize["geocodePoints"] = o.GeocodePoints
	}
	if o.QueryParseValues != nil {
		toSerialize["queryParseValues"] = o.QueryParseValues
	}
	if o.Bbox != nil {
		toSerialize["bbox"] = o.Bbox
	}
	if o.Type.IsSet() {
		toSerialize["__type"] = o.Type.Get()
	}
	return toSerialize, nil
}

func (o *BingMapsRESTToolkitLocation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"point",
		"entityType",
		"address",
		"confidence",
		"matchCodes",
		"geocodePoints",
		"queryParseValues",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBingMapsRESTToolkitLocation := _BingMapsRESTToolkitLocation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBingMapsRESTToolkitLocation)

	if err != nil {
		return err
	}

	*o = BingMapsRESTToolkitLocation(varBingMapsRESTToolkitLocation)

	return err
}

type NullableBingMapsRESTToolkitLocation struct {
	value *BingMapsRESTToolkitLocation
	isSet bool
}

func (v NullableBingMapsRESTToolkitLocation) Get() *BingMapsRESTToolkitLocation {
	return v.value
}

func (v *NullableBingMapsRESTToolkitLocation) Set(val *BingMapsRESTToolkitLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableBingMapsRESTToolkitLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableBingMapsRESTToolkitLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBingMapsRESTToolkitLocation(val *BingMapsRESTToolkitLocation) *NullableBingMapsRESTToolkitLocation {
	return &NullableBingMapsRESTToolkitLocation{value: val, isSet: true}
}

func (v NullableBingMapsRESTToolkitLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBingMapsRESTToolkitLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


