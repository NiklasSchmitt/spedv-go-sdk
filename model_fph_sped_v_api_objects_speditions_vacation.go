/*
SpedV API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the FPHSpedVAPIObjectsSpeditionsVacation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FPHSpedVAPIObjectsSpeditionsVacation{}

// FPHSpedVAPIObjectsSpeditionsVacation struct for FPHSpedVAPIObjectsSpeditionsVacation
type FPHSpedVAPIObjectsSpeditionsVacation struct {
	Id int32 `json:"id"`
	User NullableFPHSpedVAPIObjectsUsersUser `json:"user"`
	UserName NullableString `json:"userName"`
	Description NullableString `json:"description"`
	Start time.Time `json:"start"`
	Ende time.Time `json:"ende"`
}

type _FPHSpedVAPIObjectsSpeditionsVacation FPHSpedVAPIObjectsSpeditionsVacation

// NewFPHSpedVAPIObjectsSpeditionsVacation instantiates a new FPHSpedVAPIObjectsSpeditionsVacation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFPHSpedVAPIObjectsSpeditionsVacation(id int32, user NullableFPHSpedVAPIObjectsUsersUser, userName NullableString, description NullableString, start time.Time, ende time.Time) *FPHSpedVAPIObjectsSpeditionsVacation {
	this := FPHSpedVAPIObjectsSpeditionsVacation{}
	this.Id = id
	this.User = user
	this.UserName = userName
	this.Description = description
	this.Start = start
	this.Ende = ende
	return &this
}

// NewFPHSpedVAPIObjectsSpeditionsVacationWithDefaults instantiates a new FPHSpedVAPIObjectsSpeditionsVacation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFPHSpedVAPIObjectsSpeditionsVacationWithDefaults() *FPHSpedVAPIObjectsSpeditionsVacation {
	this := FPHSpedVAPIObjectsSpeditionsVacation{}
	return &this
}

// GetId returns the Id field value
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FPHSpedVAPIObjectsSpeditionsVacation) SetId(v int32) {
	o.Id = v
}

// GetUser returns the User field value
// If the value is explicit nil, the zero value for FPHSpedVAPIObjectsUsersUser will be returned
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetUser() FPHSpedVAPIObjectsUsersUser {
	if o == nil || o.User.Get() == nil {
		var ret FPHSpedVAPIObjectsUsersUser
		return ret
	}

	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetUserOk() (*FPHSpedVAPIObjectsUsersUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// SetUser sets field value
func (o *FPHSpedVAPIObjectsSpeditionsVacation) SetUser(v FPHSpedVAPIObjectsUsersUser) {
	o.User.Set(&v)
}

// GetUserName returns the UserName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetUserName() string {
	if o == nil || o.UserName.Get() == nil {
		var ret string
		return ret
	}

	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// SetUserName sets field value
func (o *FPHSpedVAPIObjectsSpeditionsVacation) SetUserName(v string) {
	o.UserName.Set(&v)
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *FPHSpedVAPIObjectsSpeditionsVacation) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetStart returns the Start field value
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *FPHSpedVAPIObjectsSpeditionsVacation) SetStart(v time.Time) {
	o.Start = v
}

// GetEnde returns the Ende field value
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetEnde() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Ende
}

// GetEndeOk returns a tuple with the Ende field value
// and a boolean to check if the value has been set.
func (o *FPHSpedVAPIObjectsSpeditionsVacation) GetEndeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ende, true
}

// SetEnde sets field value
func (o *FPHSpedVAPIObjectsSpeditionsVacation) SetEnde(v time.Time) {
	o.Ende = v
}

func (o FPHSpedVAPIObjectsSpeditionsVacation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FPHSpedVAPIObjectsSpeditionsVacation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["user"] = o.User.Get()
	toSerialize["userName"] = o.UserName.Get()
	toSerialize["description"] = o.Description.Get()
	toSerialize["start"] = o.Start
	toSerialize["ende"] = o.Ende
	return toSerialize, nil
}

func (o *FPHSpedVAPIObjectsSpeditionsVacation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"user",
		"userName",
		"description",
		"start",
		"ende",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFPHSpedVAPIObjectsSpeditionsVacation := _FPHSpedVAPIObjectsSpeditionsVacation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFPHSpedVAPIObjectsSpeditionsVacation)

	if err != nil {
		return err
	}

	*o = FPHSpedVAPIObjectsSpeditionsVacation(varFPHSpedVAPIObjectsSpeditionsVacation)

	return err
}

type NullableFPHSpedVAPIObjectsSpeditionsVacation struct {
	value *FPHSpedVAPIObjectsSpeditionsVacation
	isSet bool
}

func (v NullableFPHSpedVAPIObjectsSpeditionsVacation) Get() *FPHSpedVAPIObjectsSpeditionsVacation {
	return v.value
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsVacation) Set(val *FPHSpedVAPIObjectsSpeditionsVacation) {
	v.value = val
	v.isSet = true
}

func (v NullableFPHSpedVAPIObjectsSpeditionsVacation) IsSet() bool {
	return v.isSet
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsVacation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFPHSpedVAPIObjectsSpeditionsVacation(val *FPHSpedVAPIObjectsSpeditionsVacation) *NullableFPHSpedVAPIObjectsSpeditionsVacation {
	return &NullableFPHSpedVAPIObjectsSpeditionsVacation{value: val, isSet: true}
}

func (v NullableFPHSpedVAPIObjectsSpeditionsVacation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFPHSpedVAPIObjectsSpeditionsVacation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


